Loading plugins phase: Elapsed time ==> 0s.438ms
<CYPRESSTAG name="CyDsfit arguments...">
cydsfit arguments: -.fdsnotice -.fdswarpdepfile=warp_dependencies.txt -.fdselabdepfile=elab_dependencies.txt -.fdsbldfile=generated_files.txt -.fdsreffile=referenced_files.txt -p C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Test version PSoc\Workspace01\TestDesign01.cydsn\TestDesign01.cyprj -d CY8C5288LTI-LP090 -s C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Test version PSoc\Workspace01\TestDesign01.cydsn\Generated_Source\PSoC5 -- -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE
</CYPRESSTAG>
<CYPRESSTAG name="Design elaboration results...">
ADD: sdb.M0065: information: Analog terminal "vdac_ref" on ADC_SAR_SEQ_v2_0 is unconnected.
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Signal: vdac_ref)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_798)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_885)

</CYPRESSTAG>
Elaboration phase: Elapsed time ==> 1s.478ms
<CYPRESSTAG name="HDL generation results...">
</CYPRESSTAG>
HDL generation phase: Elapsed time ==> 0s.062ms
<CYPRESSTAG name="Synthesis results...">

     | | | | | | |
   _________________
  -|               |-
  -|               |-
  -|               |-
  -|    CYPRESS    |-
  -|               |-
  -|               |-   Warp Verilog Synthesis Compiler: Version 6.3 IR 41
  -|               |-   Copyright (C) 1991-2001 Cypress Semiconductor
   |_______________|
     | | | | | | |

======================================================================
Compiling:  TestDesign01.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Test version PSoc\Workspace01\TestDesign01.cydsn\TestDesign01.cyprj -dcpsoc3 TestDesign01.v -verilog
======================================================================

======================================================================
Compiling:  TestDesign01.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Test version PSoc\Workspace01\TestDesign01.cydsn\TestDesign01.cyprj -dcpsoc3 TestDesign01.v -verilog
======================================================================

======================================================================
Compiling:  TestDesign01.v
Program  :   vlogfe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Test version PSoc\Workspace01\TestDesign01.cydsn\TestDesign01.cyprj -dcpsoc3 -verilog TestDesign01.v
======================================================================

vlogfe V6.3 IR 41:  Verilog parser
Mon Feb 26 17:21:29 2018


======================================================================
Compiling:  TestDesign01.v
Program  :   vpp
Options  :    -yv2 -q10 TestDesign01.v
======================================================================

vpp V6.3 IR 41:  Verilog Pre-Processor
Mon Feb 26 17:21:29 2018

Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'

vpp:  No errors.

Library 'work' => directory 'lcpsoc3'
General_symbol_table
General_symbol_table
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Using control file 'TestDesign01.ctl'.
TestDesign01.v (line 707, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.

vlogfe:  No errors.


======================================================================
Compiling:  TestDesign01.v
Program  :   tovif
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Test version PSoc\Workspace01\TestDesign01.cydsn\TestDesign01.cyprj -dcpsoc3 -verilog TestDesign01.v
======================================================================

tovif V6.3 IR 41:  High-level synthesis
Mon Feb 26 17:21:29 2018

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Test version PSoc\Workspace01\TestDesign01.cydsn\codegentemp\TestDesign01.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Test version PSoc\Workspace01\TestDesign01.cydsn\codegentemp\TestDesign01.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.

tovif:  No errors.


======================================================================
Compiling:  TestDesign01.v
Program  :   topld
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Test version PSoc\Workspace01\TestDesign01.cydsn\TestDesign01.cyprj -dcpsoc3 -verilog TestDesign01.v
======================================================================

topld V6.3 IR 41:  Synthesis and optimization
Mon Feb 26 17:21:29 2018

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Test version PSoc\Workspace01\TestDesign01.cydsn\codegentemp\TestDesign01.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Test version PSoc\Workspace01\TestDesign01.cydsn\codegentemp\TestDesign01.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\lcpsoc3\stdlogic\cpsoc3.vif'.

----------------------------------------------------------
Detecting unused logic.
----------------------------------------------------------
    User names
	\AdcMux:SAR:Net_221\
	\AdcMux:SAR:Net_381\
	\AdcMux:bSAR_SEQ:sw_soc\
	\AdcMux:soc_out\
	\AdcMux:Net_3905\
	\AdcMux:Net_3867\
	\AdcMux:MODULE_1:g1:a0:gx:u0:albi_2\
	\AdcMux:MODULE_1:g1:a0:gx:u0:agbi_2\
	\AdcMux:MODULE_1:g1:a0:gx:u0:albi_1\
	\AdcMux:MODULE_1:g1:a0:gx:u0:agbi_1\
	\AdcMux:MODULE_1:g1:a0:gx:u0:albi_0\
	\AdcMux:MODULE_1:g1:a0:gx:u0:agbi_0\
	\AdcMux:MODULE_1:g1:a0:xneq\
	\AdcMux:MODULE_1:g1:a0:xlt\
	\AdcMux:MODULE_1:g1:a0:xlte\
	\AdcMux:MODULE_1:g1:a0:xgt\
	\AdcMux:MODULE_1:g1:a0:xgte\
	\AdcMux:MODULE_1:lt\
	\AdcMux:MODULE_1:gt\
	\AdcMux:MODULE_1:gte\
	\AdcMux:MODULE_1:lte\
	\AdcMux:MODULE_1:neq\


Deleted 22 User equations/components.
Deleted 0 Synthesized equations/components.

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing one to tmpOE__LED1_net_0
Aliasing tmpOE__LED3_net_0 to tmpOE__LED1_net_0
Aliasing tmpOE__LED2_net_0 to tmpOE__LED1_net_0
Aliasing tmpOE__Sensor0_net_0 to tmpOE__LED1_net_0
Aliasing tmpOE__Sensor1_net_0 to tmpOE__LED1_net_0
Aliasing tmpOE__Sensor2_net_0 to tmpOE__LED1_net_0
Aliasing tmpOE__Sensor3_net_0 to tmpOE__LED1_net_0
Aliasing \AdcMux:AMuxHw_2_Decoder_enable\ to tmpOE__LED1_net_0
Aliasing \AdcMux:SAR:vp_ctl_0\ to zero
Aliasing \AdcMux:SAR:vp_ctl_2\ to zero
Aliasing \AdcMux:SAR:vn_ctl_1\ to zero
Aliasing \AdcMux:SAR:vn_ctl_3\ to zero
Aliasing \AdcMux:SAR:vp_ctl_1\ to zero
Aliasing \AdcMux:SAR:vp_ctl_3\ to zero
Aliasing \AdcMux:SAR:vn_ctl_0\ to zero
Aliasing \AdcMux:SAR:vn_ctl_2\ to zero
Aliasing \AdcMux:SAR:soc\ to zero
Aliasing \AdcMux:bSAR_SEQ:status_7\ to zero
Aliasing \AdcMux:bSAR_SEQ:status_6\ to zero
Aliasing \AdcMux:bSAR_SEQ:status_5\ to zero
Aliasing \AdcMux:bSAR_SEQ:status_4\ to zero
Aliasing \AdcMux:bSAR_SEQ:status_3\ to zero
Aliasing \AdcMux:bSAR_SEQ:status_2\ to zero
Aliasing \AdcMux:bSAR_SEQ:status_1\ to zero
Aliasing Net_641 to \AdcMux:bSAR_SEQ:status_0\
Aliasing \AdcMux:MODULE_1:g1:a0:gx:u0:aeqb_0\ to tmpOE__LED1_net_0
Aliasing \AdcMux:AMuxHw_2_Decoder_old_id_5\\D\ to \AdcMux:MODIN1_5\
Aliasing \AdcMux:AMuxHw_2_Decoder_old_id_4\\D\ to \AdcMux:MODIN1_4\
Aliasing \AdcMux:AMuxHw_2_Decoder_old_id_3\\D\ to \AdcMux:MODIN1_3\
Aliasing \AdcMux:AMuxHw_2_Decoder_old_id_2\\D\ to \AdcMux:MODIN1_2\
Aliasing \AdcMux:AMuxHw_2_Decoder_old_id_1\\D\ to \AdcMux:MODIN1_1\
Aliasing \AdcMux:AMuxHw_2_Decoder_old_id_0\\D\ to \AdcMux:MODIN1_0\
Removing Lhs of wire one[6] = tmpOE__LED1_net_0[1]
Removing Lhs of wire tmpOE__LED3_net_0[9] = tmpOE__LED1_net_0[1]
Removing Lhs of wire tmpOE__LED2_net_0[15] = tmpOE__LED1_net_0[1]
Removing Lhs of wire tmpOE__Sensor0_net_0[21] = tmpOE__LED1_net_0[1]
Removing Lhs of wire tmpOE__Sensor1_net_0[28] = tmpOE__LED1_net_0[1]
Removing Lhs of wire tmpOE__Sensor2_net_0[35] = tmpOE__LED1_net_0[1]
Removing Lhs of wire tmpOE__Sensor3_net_0[42] = tmpOE__LED1_net_0[1]
Removing Lhs of wire \AdcMux:AMuxHw_2_Decoder_enable\[48] = tmpOE__LED1_net_0[1]
Removing Lhs of wire \AdcMux:cmp_vv_vv_MODGEN_1\[50] = \AdcMux:MODULE_1:g1:a0:xeq\[381]
Removing Rhs of wire \AdcMux:clock\[51] = \AdcMux:Net_3874\[281]
Removing Rhs of wire \AdcMux:ch_addr_5\[53] = \AdcMux:bSAR_SEQ:count_5\[248]
Removing Rhs of wire \AdcMux:ch_addr_4\[55] = \AdcMux:bSAR_SEQ:count_4\[249]
Removing Rhs of wire \AdcMux:ch_addr_3\[57] = \AdcMux:bSAR_SEQ:count_3\[250]
Removing Rhs of wire \AdcMux:ch_addr_2\[59] = \AdcMux:bSAR_SEQ:count_2\[251]
Removing Rhs of wire \AdcMux:ch_addr_1\[61] = \AdcMux:bSAR_SEQ:count_1\[252]
Removing Rhs of wire \AdcMux:ch_addr_0\[63] = \AdcMux:bSAR_SEQ:count_0\[253]
Removing Lhs of wire \AdcMux:SAR:vp_ctl_0\[193] = zero[2]
Removing Lhs of wire \AdcMux:SAR:vp_ctl_2\[194] = zero[2]
Removing Lhs of wire \AdcMux:SAR:vn_ctl_1\[195] = zero[2]
Removing Lhs of wire \AdcMux:SAR:vn_ctl_3\[196] = zero[2]
Removing Lhs of wire \AdcMux:SAR:vp_ctl_1\[197] = zero[2]
Removing Lhs of wire \AdcMux:SAR:vp_ctl_3\[198] = zero[2]
Removing Lhs of wire \AdcMux:SAR:vn_ctl_0\[199] = zero[2]
Removing Lhs of wire \AdcMux:SAR:vn_ctl_2\[200] = zero[2]
Removing Lhs of wire \AdcMux:SAR:Net_188\[201] = \AdcMux:clock\[51]
Removing Lhs of wire \AdcMux:SAR:soc\[207] = zero[2]
Removing Rhs of wire \AdcMux:bSAR_SEQ:enable\[238] = \AdcMux:bSAR_SEQ:control_0\[239]
Removing Rhs of wire \AdcMux:bSAR_SEQ:load_period\[240] = \AdcMux:bSAR_SEQ:control_1\[241]
Removing Lhs of wire \AdcMux:bSAR_SEQ:status_7\[254] = zero[2]
Removing Lhs of wire \AdcMux:bSAR_SEQ:status_6\[255] = zero[2]
Removing Lhs of wire \AdcMux:bSAR_SEQ:status_5\[256] = zero[2]
Removing Lhs of wire \AdcMux:bSAR_SEQ:status_4\[257] = zero[2]
Removing Lhs of wire \AdcMux:bSAR_SEQ:status_3\[258] = zero[2]
Removing Lhs of wire \AdcMux:bSAR_SEQ:status_2\[259] = zero[2]
Removing Lhs of wire \AdcMux:bSAR_SEQ:status_1\[260] = zero[2]
Removing Rhs of wire \AdcMux:bSAR_SEQ:status_0\[261] = \AdcMux:bSAR_SEQ:nrq_edge_detect_reg\[262]
Removing Rhs of wire Net_641[269] = \AdcMux:bSAR_SEQ:status_0\[261]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:newa_5\[292] = \AdcMux:MODIN1_5\[293]
Removing Lhs of wire \AdcMux:MODIN1_5\[293] = \AdcMux:ch_addr_5\[53]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:newa_4\[294] = \AdcMux:MODIN1_4\[295]
Removing Lhs of wire \AdcMux:MODIN1_4\[295] = \AdcMux:ch_addr_4\[55]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:newa_3\[296] = \AdcMux:MODIN1_3\[297]
Removing Lhs of wire \AdcMux:MODIN1_3\[297] = \AdcMux:ch_addr_3\[57]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:newa_2\[298] = \AdcMux:MODIN1_2\[299]
Removing Lhs of wire \AdcMux:MODIN1_2\[299] = \AdcMux:ch_addr_2\[59]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:newa_1\[300] = \AdcMux:MODIN1_1\[301]
Removing Lhs of wire \AdcMux:MODIN1_1\[301] = \AdcMux:ch_addr_1\[61]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:newa_0\[302] = \AdcMux:MODIN1_0\[303]
Removing Lhs of wire \AdcMux:MODIN1_0\[303] = \AdcMux:ch_addr_0\[63]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:newb_5\[304] = \AdcMux:MODIN2_5\[305]
Removing Lhs of wire \AdcMux:MODIN2_5\[305] = \AdcMux:AMuxHw_2_Decoder_old_id_5\[52]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:newb_4\[306] = \AdcMux:MODIN2_4\[307]
Removing Lhs of wire \AdcMux:MODIN2_4\[307] = \AdcMux:AMuxHw_2_Decoder_old_id_4\[54]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:newb_3\[308] = \AdcMux:MODIN2_3\[309]
Removing Lhs of wire \AdcMux:MODIN2_3\[309] = \AdcMux:AMuxHw_2_Decoder_old_id_3\[56]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:newb_2\[310] = \AdcMux:MODIN2_2\[311]
Removing Lhs of wire \AdcMux:MODIN2_2\[311] = \AdcMux:AMuxHw_2_Decoder_old_id_2\[58]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:newb_1\[312] = \AdcMux:MODIN2_1\[313]
Removing Lhs of wire \AdcMux:MODIN2_1\[313] = \AdcMux:AMuxHw_2_Decoder_old_id_1\[60]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:newb_0\[314] = \AdcMux:MODIN2_0\[315]
Removing Lhs of wire \AdcMux:MODIN2_0\[315] = \AdcMux:AMuxHw_2_Decoder_old_id_0\[62]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:dataa_5\[316] = \AdcMux:ch_addr_5\[53]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:dataa_4\[317] = \AdcMux:ch_addr_4\[55]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:dataa_3\[318] = \AdcMux:ch_addr_3\[57]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:dataa_2\[319] = \AdcMux:ch_addr_2\[59]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:dataa_1\[320] = \AdcMux:ch_addr_1\[61]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:dataa_0\[321] = \AdcMux:ch_addr_0\[63]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:datab_5\[322] = \AdcMux:AMuxHw_2_Decoder_old_id_5\[52]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:datab_4\[323] = \AdcMux:AMuxHw_2_Decoder_old_id_4\[54]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:datab_3\[324] = \AdcMux:AMuxHw_2_Decoder_old_id_3\[56]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:datab_2\[325] = \AdcMux:AMuxHw_2_Decoder_old_id_2\[58]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:datab_1\[326] = \AdcMux:AMuxHw_2_Decoder_old_id_1\[60]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:datab_0\[327] = \AdcMux:AMuxHw_2_Decoder_old_id_0\[62]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:gx:u0:a_5\[328] = \AdcMux:ch_addr_5\[53]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:gx:u0:a_4\[329] = \AdcMux:ch_addr_4\[55]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:gx:u0:a_3\[330] = \AdcMux:ch_addr_3\[57]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:gx:u0:a_2\[331] = \AdcMux:ch_addr_2\[59]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:gx:u0:a_1\[332] = \AdcMux:ch_addr_1\[61]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:gx:u0:a_0\[333] = \AdcMux:ch_addr_0\[63]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:gx:u0:b_5\[334] = \AdcMux:AMuxHw_2_Decoder_old_id_5\[52]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:gx:u0:b_4\[335] = \AdcMux:AMuxHw_2_Decoder_old_id_4\[54]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:gx:u0:b_3\[336] = \AdcMux:AMuxHw_2_Decoder_old_id_3\[56]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:gx:u0:b_2\[337] = \AdcMux:AMuxHw_2_Decoder_old_id_2\[58]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:gx:u0:b_1\[338] = \AdcMux:AMuxHw_2_Decoder_old_id_1\[60]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:gx:u0:b_0\[339] = \AdcMux:AMuxHw_2_Decoder_old_id_0\[62]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:gx:u0:aeqb_0\[346] = tmpOE__LED1_net_0[1]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:gx:u0:eq_0\[347] = \AdcMux:MODULE_1:g1:a0:gx:u0:xnor_array_0\[345]
Removing Lhs of wire \AdcMux:MODULE_1:g1:a0:gx:u0:eqi_0\[353] = \AdcMux:MODULE_1:g1:a0:gx:u0:eq_5\[352]
Removing Rhs of wire \AdcMux:MODULE_1:g1:a0:xeq\[381] = \AdcMux:MODULE_1:g1:a0:gx:u0:aeqb_1\[354]
Removing Lhs of wire \AdcMux:AMuxHw_2_Decoder_old_id_5\\D\[392] = \AdcMux:ch_addr_5\[53]
Removing Lhs of wire \AdcMux:AMuxHw_2_Decoder_old_id_4\\D\[393] = \AdcMux:ch_addr_4\[55]
Removing Lhs of wire \AdcMux:AMuxHw_2_Decoder_old_id_3\\D\[394] = \AdcMux:ch_addr_3\[57]
Removing Lhs of wire \AdcMux:AMuxHw_2_Decoder_old_id_2\\D\[395] = \AdcMux:ch_addr_2\[59]
Removing Lhs of wire \AdcMux:AMuxHw_2_Decoder_old_id_1\\D\[396] = \AdcMux:ch_addr_1\[61]
Removing Lhs of wire \AdcMux:AMuxHw_2_Decoder_old_id_0\\D\[397] = \AdcMux:ch_addr_0\[63]
Removing Lhs of wire \AdcMux:bSAR_SEQ:nrq_edge_detect_reg\\D\[462] = \AdcMux:bSAR_SEQ:nrq_edge_detect\[268]
Removing Lhs of wire \AdcMux:bSAR_SEQ:nrq_reg\\D\[464] = \AdcMux:bSAR_SEQ:bus_clk_nrq_reg\[265]

------------------------------------------------------
Aliased 0 equations, 97 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Substituting virtuals - pass 1:

Note:  Expanding virtual equation for 'tmpOE__LED1_net_0' (cost = 0):
tmpOE__LED1_net_0 <=  ('1') ;

Note:  Expanding virtual equation for '\AdcMux:MODULE_1:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\AdcMux:MODULE_1:g1:a0:gx:u0:xnor_array_5\ <= ((not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\)
	OR (\AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\));

Note:  Expanding virtual equation for '\AdcMux:MODULE_1:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\AdcMux:MODULE_1:g1:a0:gx:u0:xnor_array_4\ <= ((not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\)
	OR (\AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\));

Note:  Expanding virtual equation for '\AdcMux:MODULE_1:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\AdcMux:MODULE_1:g1:a0:gx:u0:xnor_array_3\ <= ((not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\)
	OR (\AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\));

Note:  Expanding virtual equation for '\AdcMux:MODULE_1:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\AdcMux:MODULE_1:g1:a0:gx:u0:xnor_array_2\ <= ((not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\)
	OR (\AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\));

Note:  Expanding virtual equation for '\AdcMux:MODULE_1:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\AdcMux:MODULE_1:g1:a0:gx:u0:xnor_array_1\ <= ((not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\)
	OR (\AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\));

Note:  Expanding virtual equation for '\AdcMux:MODULE_1:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\AdcMux:MODULE_1:g1:a0:gx:u0:xnor_array_0\ <= ((not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\)
	OR (\AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\));

Note:  Expanding virtual equation for '\AdcMux:MODULE_1:g1:a0:gx:u0:eq_1\' (cost = 8):
\AdcMux:MODULE_1:g1:a0:gx:u0:eq_1\ <= ((not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (\AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\));

Note:  Expanding virtual equation for '\AdcMux:MODULE_1:g1:a0:gx:u0:eq_2\' (cost = 16):
\AdcMux:MODULE_1:g1:a0:gx:u0:eq_2\ <= ((not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (\AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\));

Note:  Expanding virtual equation for '\AdcMux:MODULE_1:g1:a0:gx:u0:eq_3\' (cost = 32):
\AdcMux:MODULE_1:g1:a0:gx:u0:eq_3\ <= ((not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (\AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\));

Note:  Expanding virtual equation for '\AdcMux:MODULE_1:g1:a0:gx:u0:eq_4\' (cost = 64):
\AdcMux:MODULE_1:g1:a0:gx:u0:eq_4\ <= ((not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (\AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\));

Note:  Expanding virtual equation for '\AdcMux:MODULE_1:g1:a0:gx:u0:eq_5\' (cost = 64):
\AdcMux:MODULE_1:g1:a0:gx:u0:eq_5\ <= ((not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (\AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\));

Note:  Expanding virtual equation for '\AdcMux:MODULE_1:g1:a0:gx:u0:lt_3\' (cost = 2):
\AdcMux:MODULE_1:g1:a0:gx:u0:lt_3\ <= ((not \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\AdcMux:MODULE_1:g1:a0:gx:u0:gt_3\' (cost = 2):
\AdcMux:MODULE_1:g1:a0:gx:u0:gt_3\ <= ((not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\));

Note:  Expanding virtual equation for '\AdcMux:MODULE_1:g1:a0:gx:u0:lt_4\' (cost = 6):
\AdcMux:MODULE_1:g1:a0:gx:u0:lt_4\ <= ((not \AdcMux:ch_addr_4\ and not \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\)
	OR (not \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\)
	OR (not \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\AdcMux:MODULE_1:g1:a0:gx:u0:gt_4\' (cost = 6):
\AdcMux:MODULE_1:g1:a0:gx:u0:gt_4\ <= ((not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_4\ and \AdcMux:ch_addr_3\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\));

Note:  Expanding virtual equation for '\AdcMux:MODULE_1:g1:a0:gx:u0:lt_0\' (cost = 2):
\AdcMux:MODULE_1:g1:a0:gx:u0:lt_0\ <= ((not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\AdcMux:MODULE_1:g1:a0:gx:u0:gt_0\' (cost = 2):
\AdcMux:MODULE_1:g1:a0:gx:u0:gt_0\ <= ((not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\));

Note:  Expanding virtual equation for '\AdcMux:MODULE_1:g1:a0:gx:u0:lt_1\' (cost = 6):
\AdcMux:MODULE_1:g1:a0:gx:u0:lt_1\ <= ((not \AdcMux:ch_addr_1\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\)
	OR (not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\)
	OR (not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\AdcMux:MODULE_1:g1:a0:gx:u0:gt_1\' (cost = 6):
\AdcMux:MODULE_1:g1:a0:gx:u0:gt_1\ <= ((not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_1\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\));


Substituting virtuals - pass 2:

Note:  Expanding virtual equation for '\AdcMux:MODULE_1:g1:a0:xeq\' (cost = 64):
\AdcMux:MODULE_1:g1:a0:xeq\ <= ((not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (\AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\));


Substituting virtuals - pass 3:

Note:  Virtual signal \AdcMux:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\AdcMux:AMuxHw_2_Decoder_is_active\ <= ((not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_0\ and not \AdcMux:ch_addr_0\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_1\ and not \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_2\ and not \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_3\ and not \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_4\ and not \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (not \AdcMux:AMuxHw_2_Decoder_old_id_5\ and not \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\)
	OR (\AdcMux:AMuxHw_2_Decoder_old_id_5\ and \AdcMux:ch_addr_5\ and \AdcMux:AMuxHw_2_Decoder_old_id_4\ and \AdcMux:ch_addr_4\ and \AdcMux:AMuxHw_2_Decoder_old_id_3\ and \AdcMux:ch_addr_3\ and \AdcMux:AMuxHw_2_Decoder_old_id_2\ and \AdcMux:ch_addr_2\ and \AdcMux:AMuxHw_2_Decoder_old_id_1\ and \AdcMux:ch_addr_1\ and \AdcMux:AMuxHw_2_Decoder_old_id_0\ and \AdcMux:ch_addr_0\));


Substituting virtuals - pass 4:


----------------------------------------------------------
Circuit simplification results:

	Expanded 21 signals.
	Turned 1 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

------------------------------------------------------
Alias Detection
------------------------------------------------------

------------------------------------------------------
Aliased 0 equations, 0 wires.
------------------------------------------------------

Last attempt to remove unused logic - pass 1:


Last attempt to remove unused logic - pass 2:


topld:  No errors.

CYPRESS_DIR    : C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp
Warp Program   : C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\bin\warp.exe
Warp Arguments : -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya "-.fftprj=C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Test version PSoc\Workspace01\TestDesign01.cydsn\TestDesign01.cyprj" -dcpsoc3 TestDesign01.v -verilog
</CYPRESSTAG>
Warp synthesis phase: Elapsed time ==> 1s.225ms
<CYPRESSTAG name="Fitter results...">
<CYPRESSTAG name="Fitter startup details...">
cyp3fit: V4.1.0.3210, Family: PSoC3, Started at: Monday, 26 February 2018 17:21:30
Options: -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Test version PSoc\Workspace01\TestDesign01.cydsn\TestDesign01.cyprj -d CY8C5288LTI-LP090 TestDesign01.v -verilog
</CYPRESSTAG>
<CYPRESSTAG name="Design parsing">
Design parsing phase: Elapsed time ==> 0s.025ms
</CYPRESSTAG>
<CYPRESSTAG name="Tech Mapping">
<CYPRESSTAG name="Initial Mapping" icon="FILE_RPT_TECHM">
    Removed wire end \AdcMux:MODULE_1:g1:a0:gx:u0:lti_1\ kept \AdcMux:MODULE_1:g1:a0:gx:u0:lt_5\
    Removed wire end \AdcMux:MODULE_1:g1:a0:gx:u0:gti_1\ kept \AdcMux:MODULE_1:g1:a0:gx:u0:gt_5\
    Removed wire end \AdcMux:MODULE_1:g1:a0:gx:u0:lti_0\ kept \AdcMux:MODULE_1:g1:a0:gx:u0:lt_2\
    Removed wire end \AdcMux:MODULE_1:g1:a0:gx:u0:gti_0\ kept \AdcMux:MODULE_1:g1:a0:gx:u0:gt_2\
Assigning clock AdcMux_BusClock to clock BUS_CLK because it is a pass-through
<CYPRESSTAG name="Global Clock Selection" icon="FILE_RPT_TECHM">
    Digital Clock 0: Automatic-assigning  clock 'AdcMux_IntClock'. Fanout=73, Signal=\AdcMux:clock\
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="UDB Clock/Enable Remapping Results">
    UDB Clk/Enable \AdcMux:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: AdcMux_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \AdcMux:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: AdcMux_IntClock, EnableOut: \AdcMux:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \AdcMux:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: AdcMux_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: AdcMux_IntClock, EnableOut: Constant 1
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
<CYPRESSTAG name="Design Equations" icon="FILE_RPT_EQUATION">

------------------------------------------------------------
Design Equations
------------------------------------------------------------
    <CYPRESSTAG name="Pin listing">

    ------------------------------------------------------------
    Pin listing
    ------------------------------------------------------------

    Pin : Name = LED1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => LED1(0)__PA ,
            pad => LED1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = LED3(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => LED3(0)__PA ,
            pad => LED3(0)_PAD );
        Properties:
        {
        }

    Pin : Name = LED2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => LED2(0)__PA ,
            pad => LED2(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Sensor0(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_DOWN
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => Sensor0(0)__PA ,
            analog_term => Net_642 ,
            pad => Sensor0(0)_PAD ,
            pin_input => \AdcMux:AMuxHw_2_Decoder_one_hot_0\ );
        Properties:
        {
        }

    Pin : Name = Sensor1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_DOWN
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => Sensor1(0)__PA ,
            analog_term => Net_643 ,
            pad => Sensor1(0)_PAD ,
            pin_input => \AdcMux:AMuxHw_2_Decoder_one_hot_1\ );
        Properties:
        {
        }

    Pin : Name = Sensor2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_DOWN
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => Sensor2(0)__PA ,
            analog_term => Net_645 ,
            pad => Sensor2(0)_PAD ,
            pin_input => \AdcMux:AMuxHw_2_Decoder_one_hot_2\ );
        Properties:
        {
        }

    Pin : Name = Sensor3(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_DOWN
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => Sensor3(0)__PA ,
            analog_term => Net_646 ,
            pad => Sensor3(0)_PAD ,
            pin_input => \AdcMux:AMuxHw_2_Decoder_one_hot_3\ );
        Properties:
        {
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Macrocell listing" icon="FILE_RPT_EQUATION">

    ------------------------------------------------------------
    Macrocell listing
    ------------------------------------------------------------

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * !\AdcMux:ch_addr_5\
            + \AdcMux:AMuxHw_2_Decoder_old_id_4\ * !\AdcMux:ch_addr_4\
            + \AdcMux:AMuxHw_2_Decoder_old_id_3\ * !\AdcMux:ch_addr_3\
            + \AdcMux:AMuxHw_2_Decoder_old_id_2\ * !\AdcMux:ch_addr_2\
            + !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * \AdcMux:ch_addr_1\
            + \AdcMux:AMuxHw_2_Decoder_old_id_1\ * !\AdcMux:ch_addr_1\
            + !\AdcMux:AMuxHw_2_Decoder_old_id_0\ * \AdcMux:ch_addr_0\
            + \AdcMux:AMuxHw_2_Decoder_old_id_0\ * !\AdcMux:ch_addr_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * \AdcMux:ch_addr_5\
            + !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * \AdcMux:ch_addr_4\
            + !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * \AdcMux:ch_addr_3\
            + !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * \AdcMux:ch_addr_2\
            + \AdcMux:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\AdcMux:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_640 * !\AdcMux:bSAR_SEQ:load_period\
        );
        Output = \AdcMux:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:ch_addr_5\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:ch_addr_4\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:ch_addr_3\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:ch_addr_2\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:ch_addr_1\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:ch_addr_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=Net_641, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: PosEdge(\AdcMux:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \AdcMux:bSAR_SEQ:bus_clk_nrq_reg\ * !\AdcMux:bSAR_SEQ:nrq_reg\
        );
        Output = Net_641 (fanout=3)

    MacroCell: Name=\AdcMux:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \AdcMux:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_641
            + \AdcMux:Net_3935\
        );
        Output = \AdcMux:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\AdcMux:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: PosEdge(\AdcMux:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \AdcMux:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \AdcMux:bSAR_SEQ:nrq_reg\ (fanout=1)
    </CYPRESSTAG>
    <CYPRESSTAG name="Datapath listing">
    </CYPRESSTAG>
    <CYPRESSTAG name="Status register listing">

    ------------------------------------------------------------
    Status register listing
    ------------------------------------------------------------

    statuscell: Name =\AdcMux:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => \AdcMux:clock\ ,
            status_0 => Net_641 ,
            clk_en => \AdcMux:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\AdcMux:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="StatusI register listing">
    </CYPRESSTAG>
    <CYPRESSTAG name="Sync listing">

    ------------------------------------------------------------
    Sync listing
    ------------------------------------------------------------

    synccell: Name =\AdcMux:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \AdcMux:nrq\ ,
            out => \AdcMux:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Control register listing">

    ------------------------------------------------------------
    Control register listing
    ------------------------------------------------------------

    controlcell: Name =\AdcMux:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => \AdcMux:clock\ ,
            control_7 => \AdcMux:bSAR_SEQ:control_7\ ,
            control_6 => \AdcMux:bSAR_SEQ:control_6\ ,
            control_5 => \AdcMux:bSAR_SEQ:control_5\ ,
            control_4 => \AdcMux:bSAR_SEQ:control_4\ ,
            control_3 => \AdcMux:bSAR_SEQ:control_3\ ,
            control_2 => \AdcMux:bSAR_SEQ:control_2\ ,
            control_1 => \AdcMux:bSAR_SEQ:load_period\ ,
            control_0 => \AdcMux:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Count7 listing">

    ------------------------------------------------------------
    Count7 listing
    ------------------------------------------------------------

    count7cell: Name =\AdcMux:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => \AdcMux:clock\ ,
            load => \AdcMux:bSAR_SEQ:load_period\ ,
            enable => \AdcMux:bSAR_SEQ:cnt_enable\ ,
            count_6 => \AdcMux:bSAR_SEQ:count_6\ ,
            count_5 => \AdcMux:ch_addr_5\ ,
            count_4 => \AdcMux:ch_addr_4\ ,
            count_3 => \AdcMux:ch_addr_3\ ,
            count_2 => \AdcMux:ch_addr_2\ ,
            count_1 => \AdcMux:ch_addr_1\ ,
            count_0 => \AdcMux:ch_addr_0\ ,
            tc => \AdcMux:bSAR_SEQ:cnt_tc\ ,
            clk_en => \AdcMux:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000011"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\AdcMux:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="DRQ listing">

    ------------------------------------------------------------
    DRQ listing
    ------------------------------------------------------------

    drqcell: Name =\AdcMux:TempBuf\
        PORT MAP (
            dmareq => \AdcMux:Net_3830\ ,
            termin => zero ,
            termout => \AdcMux:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\AdcMux:FinalBuf\
        PORT MAP (
            dmareq => \AdcMux:Net_3698\ ,
            termin => zero ,
            termout => \AdcMux:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Interrupt listing">

    ------------------------------------------------------------
    Interrupt listing
    ------------------------------------------------------------

    interrupt: Name =\AdcMux:IRQ\
        PORT MAP (
            interrupt => Net_641 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
    </CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Technology mapping summary" expanded>

------------------------------------------------------------
Technology mapping summary
------------------------------------------------------------

Resource Type                 : Used : Free :  Max :  % Used
============================================================
Digital Clocks                :    1 :    7 :    8 : 12.50 %
Analog Clocks                 :    0 :    4 :    4 :  0.00 %
CapSense Buffers              :    0 :    2 :    2 :  0.00 %
Interrupts                    :    1 :   31 :   32 :  3.13 %
IO                            :   10 :   38 :   48 : 20.83 %
Segment LCD                   :    0 :    1 :    1 :  0.00 %
I2C                           :    0 :    1 :    1 :  0.00 %
USB                           :    0 :    1 :    1 :  0.00 %
DMA Channels                  :    2 :   22 :   24 :  8.33 %
Timer                         :    0 :    4 :    4 :  0.00 %
UDB                           :      :      :      :        
  Macrocells                  :   76 :  116 :  192 : 39.58 %
  Unique P-terms              :   88 :  296 :  384 : 22.92 %
  Total P-terms               :   88 :      :      :        
  Datapath Cells              :    0 :   24 :   24 :  0.00 %
  Status Cells                :    3 :   21 :   24 : 12.50 %
    Status Registers          :    1 :      :      :        
    Sync Cells (x1)           :    1 :      :      :        
    Routed Count7 Load/Enable :    1 :      :      :        
  Control Cells               :    2 :   22 :   24 :  8.33 %
    Control Registers         :    1 :      :      :        
    Count7 Cells              :    1 :      :      :        
Comparator                    :    0 :    2 :    2 :  0.00 %
Delta-Sigma ADC               :    0 :    1 :    1 :  0.00 %
LPF                           :    0 :    2 :    2 :  0.00 %
SAR ADC                       :    1 :    0 :    1 : 100.00 %
DAC                           :      :      :      :        
  VIDAC                       :    0 :    1 :    1 :  0.00 %
</CYPRESSTAG>
Technology Mapping: Elapsed time ==> 0s.253ms
Tech Mapping phase: Elapsed time ==> 0s.340ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Placement">
Info: apr.M0002: Analog signal "Net_648" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1292" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_651" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_653" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_655" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_656" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_658" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_660" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_661" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_663" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_665" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_666" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_668" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_670" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_671" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_673" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_675" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_676" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_678" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_680" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_681" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_683" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_685" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_686" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_688" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_690" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_691" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_693" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_695" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_696" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_698" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_700" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_701" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_703" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_705" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_706" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_708" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_710" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_711" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_713" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_715" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_716" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_718" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_720" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_721" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_722" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_723" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_724" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_725" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_726" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_727" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_728" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_729" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_730" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_731" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_732" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_733" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_734" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_735" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_736" is connected to one terminal only. (App=cydsfit)
Initial Analog Placement Results:
IO_0@[IOP=(2)][IoId=(0)] : LED1(0) (fixed)
IO_1@[IOP=(2)][IoId=(1)] : LED2(0) (fixed)
IO_2@[IOP=(2)][IoId=(2)] : LED3(0) (fixed)
IO_0@[IOP=(0)][IoId=(0)] : Sensor0(0) (fixed)
IO_1@[IOP=(0)][IoId=(1)] : Sensor1(0) (fixed)
IO_2@[IOP=(0)][IoId=(2)] : Sensor2(0) (fixed)
IO_3@[IOP=(0)][IoId=(3)] : Sensor3(0) (fixed)
SAR[0]@[FFB(SAR,0)] : \AdcMux:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \AdcMux:SAR:vRef_Vdda_1\
Analog Placement Results:
IO_0@[IOP=(2)][IoId=(0)] : LED1(0) (fixed)
IO_1@[IOP=(2)][IoId=(1)] : LED2(0) (fixed)
IO_2@[IOP=(2)][IoId=(2)] : LED3(0) (fixed)
IO_0@[IOP=(0)][IoId=(0)] : Sensor0(0) (fixed)
IO_1@[IOP=(0)][IoId=(1)] : Sensor1(0) (fixed)
IO_2@[IOP=(0)][IoId=(2)] : Sensor2(0) (fixed)
IO_3@[IOP=(0)][IoId=(3)] : Sensor3(0) (fixed)
SAR[0]@[FFB(SAR,0)] : \AdcMux:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \AdcMux:SAR:vRef_Vdda_1\

Analog Placement phase: Elapsed time ==> 0s.054ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Routing">
Analog Routing phase: Elapsed time ==> 0s.005ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Code Generation">
============ Analog Final Answer Routes ============
Dump of CyAnalogRoutingResultsDB
Map of net to items {
  Net: \AdcMux:Net_2803\ {
    sar_0_vplus
  }
  Net: Net_642 {
    p0_0
  }
  Net: Net_643 {
    p0_1
  }
  Net: Net_645 {
    p0_2
  }
  Net: Net_646 {
    p0_3
  }
  Net: Net_648 {
  }
  Net: Net_1292 {
  }
  Net: Net_651 {
  }
  Net: Net_653 {
  }
  Net: Net_655 {
  }
  Net: Net_656 {
  }
  Net: Net_658 {
  }
  Net: Net_660 {
  }
  Net: Net_661 {
  }
  Net: Net_663 {
  }
  Net: Net_665 {
  }
  Net: Net_666 {
  }
  Net: Net_668 {
  }
  Net: Net_670 {
  }
  Net: Net_671 {
  }
  Net: Net_673 {
  }
  Net: Net_675 {
  }
  Net: Net_676 {
  }
  Net: Net_678 {
  }
  Net: Net_680 {
  }
  Net: Net_681 {
  }
  Net: Net_683 {
  }
  Net: Net_685 {
  }
  Net: Net_686 {
  }
  Net: Net_688 {
  }
  Net: Net_690 {
  }
  Net: Net_691 {
  }
  Net: Net_693 {
  }
  Net: Net_695 {
  }
  Net: Net_696 {
  }
  Net: Net_698 {
  }
  Net: Net_700 {
  }
  Net: Net_701 {
  }
  Net: Net_703 {
  }
  Net: Net_705 {
  }
  Net: Net_706 {
  }
  Net: Net_708 {
  }
  Net: Net_710 {
  }
  Net: Net_711 {
  }
  Net: Net_713 {
  }
  Net: Net_715 {
  }
  Net: Net_716 {
  }
  Net: Net_718 {
  }
  Net: Net_720 {
  }
  Net: Net_721 {
  }
  Net: Net_722 {
  }
  Net: Net_723 {
  }
  Net: Net_724 {
  }
  Net: Net_725 {
  }
  Net: Net_726 {
  }
  Net: Net_727 {
  }
  Net: Net_728 {
  }
  Net: Net_729 {
  }
  Net: Net_730 {
  }
  Net: Net_731 {
  }
  Net: Net_732 {
  }
  Net: Net_733 {
  }
  Net: Net_734 {
  }
  Net: Net_735 {
  }
  Net: Net_736 {
  }
  Net: \AdcMux:SAR:Net_126\ {
    sar_0_vrefhi
    sar_0_vminus_x_sar_0_vrefhi
    sar_0_vminus
  }
  Net: \AdcMux:SAR:Net_209\ {
  }
  Net: \AdcMux:SAR:Net_235\ {
    common_sar_vref_vdda/2
    common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2
    sar_0_vref_vdda_vdda_2
    sar_0_vref_x_sar_0_vref_vdda_vdda_2
    sar_0_vref
  }
  Net: AmuxNet::\AdcMux:AMuxHw_2\ {
    sar_0_vplus
    agl5_x_sar_0_vplus
    agl5
    agl5_x_p0_1
    agl4_x_sar_0_vplus
    agl4
    agl4_x_p0_0
    agl6_x_sar_0_vplus
    agl6
    agl6_x_p0_2
    agl7_x_sar_0_vplus
    agl7
    agl7_x_p0_3
    p0_1
    p0_0
    p0_2
    p0_3
  }
}
Map of item to net {
  sar_0_vrefhi                                     -> \AdcMux:SAR:Net_126\
  sar_0_vminus_x_sar_0_vrefhi                      -> \AdcMux:SAR:Net_126\
  sar_0_vminus                                     -> \AdcMux:SAR:Net_126\
  common_sar_vref_vdda/2                           -> \AdcMux:SAR:Net_235\
  common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2  -> \AdcMux:SAR:Net_235\
  sar_0_vref_vdda_vdda_2                           -> \AdcMux:SAR:Net_235\
  sar_0_vref_x_sar_0_vref_vdda_vdda_2              -> \AdcMux:SAR:Net_235\
  sar_0_vref                                       -> \AdcMux:SAR:Net_235\
  sar_0_vplus                                      -> \AdcMux:Net_2803\
  p0_0                                             -> Net_642
  p0_1                                             -> Net_643
  p0_2                                             -> Net_645
  p0_3                                             -> Net_646
  agl5_x_sar_0_vplus                               -> AmuxNet::\AdcMux:AMuxHw_2\
  agl5                                             -> AmuxNet::\AdcMux:AMuxHw_2\
  agl5_x_p0_1                                      -> AmuxNet::\AdcMux:AMuxHw_2\
  agl4_x_sar_0_vplus                               -> AmuxNet::\AdcMux:AMuxHw_2\
  agl4                                             -> AmuxNet::\AdcMux:AMuxHw_2\
  agl4_x_p0_0                                      -> AmuxNet::\AdcMux:AMuxHw_2\
  agl6_x_sar_0_vplus                               -> AmuxNet::\AdcMux:AMuxHw_2\
  agl6                                             -> AmuxNet::\AdcMux:AMuxHw_2\
  agl6_x_p0_2                                      -> AmuxNet::\AdcMux:AMuxHw_2\
  agl7_x_sar_0_vplus                               -> AmuxNet::\AdcMux:AMuxHw_2\
  agl7                                             -> AmuxNet::\AdcMux:AMuxHw_2\
  agl7_x_p0_3                                      -> AmuxNet::\AdcMux:AMuxHw_2\
}
Mux Info {
  Mux: \AdcMux:AMuxHw_2\ {
     Mouth: \AdcMux:Net_2803\
     Guts:  AmuxNet::\AdcMux:AMuxHw_2\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_642
      Outer: agl4_x_p0_0
      Inner: agl4_x_sar_0_vplus
      Path {
        p0_0
        agl4_x_p0_0
        agl4
        agl4_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 1 {
      Net:   Net_643
      Outer: agl5_x_p0_1
      Inner: agl5_x_sar_0_vplus
      Path {
        p0_1
        agl5_x_p0_1
        agl5
        agl5_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 2 {
      Net:   Net_645
      Outer: agl6_x_p0_2
      Inner: agl6_x_sar_0_vplus
      Path {
        p0_2
        agl6_x_p0_2
        agl6
        agl6_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 3 {
      Net:   Net_646
      Outer: agl7_x_p0_3
      Inner: agl7_x_sar_0_vplus
      Path {
        p0_3
        agl7_x_p0_3
        agl7
        agl7_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 4 {
      Net:   Net_648
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 5 {
      Net:   Net_1292
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 6 {
      Net:   Net_651
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 7 {
      Net:   Net_653
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 8 {
      Net:   Net_655
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_656
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_658
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_660
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_661
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_663
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_665
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_666
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_668
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_670
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_671
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_673
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_675
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_676
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_678
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_680
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_681
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_683
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_685
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_686
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_688
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_690
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_691
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_693
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 32 {
      Net:   Net_695
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 33 {
      Net:   Net_696
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 34 {
      Net:   Net_698
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 35 {
      Net:   Net_700
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 36 {
      Net:   Net_701
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 37 {
      Net:   Net_703
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 38 {
      Net:   Net_705
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 39 {
      Net:   Net_706
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 40 {
      Net:   Net_708
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 41 {
      Net:   Net_710
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 42 {
      Net:   Net_711
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 43 {
      Net:   Net_713
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 44 {
      Net:   Net_715
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 45 {
      Net:   Net_716
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 46 {
      Net:   Net_718
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 47 {
      Net:   Net_720
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 48 {
      Net:   Net_721
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 49 {
      Net:   Net_722
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 50 {
      Net:   Net_723
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 51 {
      Net:   Net_724
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 52 {
      Net:   Net_725
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 53 {
      Net:   Net_726
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 54 {
      Net:   Net_727
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 55 {
      Net:   Net_728
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 56 {
      Net:   Net_729
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 57 {
      Net:   Net_730
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 58 {
      Net:   Net_731
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 59 {
      Net:   Net_732
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 60 {
      Net:   Net_733
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 61 {
      Net:   Net_734
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 62 {
      Net:   Net_735
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 63 {
      Net:   Net_736
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
}
Dump of CyP35AnalogRoutingResultsDB
IsVddaHalfUsedForComp = False
IsVddaHalfUsedForSar0 = True
IsVddaHalfUsedForSar1 = False
Analog Code Generation phase: Elapsed time ==> 0s.374ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Placement">
<CYPRESSTAG name="Detailed placement messages">
I2076: Total run-time: 2.5 sec.

</CYPRESSTAG>
<CYPRESSTAG name="PLD Packing">
<CYPRESSTAG name="PLD Packing Summary" expanded>

------------------------------------------------------------
PLD Packing Summary
------------------------------------------------------------
            Resource Type : Used : Free :  Max :  % Used
    ====================================================
                     PLDs :   24 :   24 :   48 :  50.00%

<CYPRESSTAG name="PLD Statistics">

        PLD Resource Type :     Average/LAB
    =======================================
                   Inputs :            7.38
                   Pterms :            3.67
               Macrocells :            3.17
</CYPRESSTAG>
<CYPRESSTAG name="Packed PLD Contents">
Packed PLD Contents not displayed at this verbose level.</CYPRESSTAG>
</CYPRESSTAG>
PLD Packing: Elapsed time ==> 0s.002ms
</CYPRESSTAG>
<CYPRESSTAG name="Partitioning">
<CYPRESSTAG name="Initial Partitioning Summary">
Initial Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
<CYPRESSTAG name="Final Partitioning Summary">
Final Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
Partitioning: Elapsed time ==> 0s.039ms
</CYPRESSTAG>
<CYPRESSTAG name="Final Placement Summary">

------------------------------------------------------------
Final Placement Summary
------------------------------------------------------------

       Resource Type :      Count : Avg Inputs : Avg Outputs
    ========================================================
                 UDB :         12 :       8.00 :       6.33
<CYPRESSTAG name="Final Placement Details">
<CYPRESSTAG name="Component Details">

------------------------------------------------------------
Component Placement Details
------------------------------------------------------------
UDB [UDB=(0,0)] is empty.
UDB [UDB=(0,1)] is empty.
UDB [UDB=(0,2)] is empty.
UDB [UDB=(0,3)] is empty.
UDB [UDB=(0,4)] is empty.
UDB [UDB=(0,5)] is empty.
UDB [UDB=(1,0)] is empty.
UDB [UDB=(1,1)] is empty.
UDB [UDB=(1,2)] is empty.
UDB [UDB=(1,3)] is empty.
UDB [UDB=(1,4)] is empty.
UDB [UDB=(1,5)] is empty.
UDB [UDB=(2,0)] contents:
LAB@[UDB=(2,0)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,0)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,1)] contents:
LAB@[UDB=(2,1)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,2)] contents:
LAB@[UDB=(2,2)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,2)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,3)] contents:
LAB@[UDB=(2,3)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,3)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,4)] contents:
LAB@[UDB=(2,4)][LB=0] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,4)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,5)] contents:
LAB@[UDB=(2,5)][LB=0] #macrocells=1, #inputs=7, #pterms=1
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,5)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

synccell: Name =\AdcMux:Sync:genblk1[0]:INST\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        in => \AdcMux:nrq\ ,
        out => \AdcMux:Net_3935\ );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(3,0)] contents:
LAB@[UDB=(3,0)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,0)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,1)] contents:
LAB@[UDB=(3,1)][LB=0] #macrocells=4, #inputs=10, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:ch_addr_4\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_old_id_4\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:ch_addr_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_old_id_0\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:ch_addr_5\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_old_id_5\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,1)][LB=1] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:ch_addr_2\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_old_id_2\ (fanout=66)
        Properties               : 
        {
        }
}

UDB [UDB=(3,2)] contents:
LAB@[UDB=(3,2)][LB=0] #macrocells=1, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial) @ [UDB=(3,2)][LB=0][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * !\AdcMux:ch_addr_5\
            + \AdcMux:AMuxHw_2_Decoder_old_id_4\ * !\AdcMux:ch_addr_4\
            + \AdcMux:AMuxHw_2_Decoder_old_id_3\ * !\AdcMux:ch_addr_3\
            + \AdcMux:AMuxHw_2_Decoder_old_id_2\ * !\AdcMux:ch_addr_2\
            + !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * \AdcMux:ch_addr_1\
            + \AdcMux:AMuxHw_2_Decoder_old_id_1\ * !\AdcMux:ch_addr_1\
            + !\AdcMux:AMuxHw_2_Decoder_old_id_0\ * \AdcMux:ch_addr_0\
            + \AdcMux:AMuxHw_2_Decoder_old_id_0\ * !\AdcMux:ch_addr_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_is_active_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(3,2)][LB=1] #macrocells=4, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial) @ [UDB=(3,2)][LB=1][MC=0]
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * \AdcMux:ch_addr_5\
            + !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * \AdcMux:ch_addr_4\
            + !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * \AdcMux:ch_addr_3\
            + !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * \AdcMux:ch_addr_2\
            + \AdcMux:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    [McSlotId=1]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)
        Properties               : 
        {
        }
}

count7cell: Name =\AdcMux:bSAR_SEQ:ChannelCounter\
    PORT MAP (
        clock => \AdcMux:clock\ ,
        load => \AdcMux:bSAR_SEQ:load_period\ ,
        enable => \AdcMux:bSAR_SEQ:cnt_enable\ ,
        count_6 => \AdcMux:bSAR_SEQ:count_6\ ,
        count_5 => \AdcMux:ch_addr_5\ ,
        count_4 => \AdcMux:ch_addr_4\ ,
        count_3 => \AdcMux:ch_addr_3\ ,
        count_2 => \AdcMux:ch_addr_2\ ,
        count_1 => \AdcMux:ch_addr_1\ ,
        count_0 => \AdcMux:ch_addr_0\ ,
        tc => \AdcMux:bSAR_SEQ:cnt_tc\ ,
        clk_en => \AdcMux:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0000011"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\AdcMux:bSAR_SEQ:enable\)

UDB [UDB=(3,3)] contents:
LAB@[UDB=(3,3)][LB=0] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:ch_addr_3\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_old_id_3\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:ch_addr_1\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_old_id_1\ (fanout=65)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,3)][LB=1] #macrocells=3, #inputs=9, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\AdcMux:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial) @ [UDB=(3,3)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_640 * !\AdcMux:bSAR_SEQ:load_period\
        );
        Output = \AdcMux:bSAR_SEQ:cnt_enable\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)
        Properties               : 
        {
        }
}

controlcell: Name =\AdcMux:bSAR_SEQ:CtrlReg\
    PORT MAP (
        clock => \AdcMux:clock\ ,
        control_7 => \AdcMux:bSAR_SEQ:control_7\ ,
        control_6 => \AdcMux:bSAR_SEQ:control_6\ ,
        control_5 => \AdcMux:bSAR_SEQ:control_5\ ,
        control_4 => \AdcMux:bSAR_SEQ:control_4\ ,
        control_3 => \AdcMux:bSAR_SEQ:control_3\ ,
        control_2 => \AdcMux:bSAR_SEQ:control_2\ ,
        control_1 => \AdcMux:bSAR_SEQ:load_period\ ,
        control_0 => \AdcMux:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_ctrl_mode_0 = "00000111"
        cy_ctrl_mode_1 = "00000110"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(3,4)] contents:
LAB@[UDB=(3,4)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,4)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\AdcMux:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \AdcMux:AMuxHw_2_Decoder_is_active\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_5\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_4\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_3\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_2\ * 
              !\AdcMux:AMuxHw_2_Decoder_old_id_1\ * 
              \AdcMux:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \AdcMux:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,5)] contents:
LAB@[UDB=(3,5)][LB=0] #macrocells=2, #inputs=2, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=Net_641, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: PosEdge(\AdcMux:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \AdcMux:bSAR_SEQ:bus_clk_nrq_reg\ * !\AdcMux:bSAR_SEQ:nrq_reg\
        );
        Output = Net_641 (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\AdcMux:bSAR_SEQ:nrq_reg\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\AdcMux:clock\) => Global
            Clock Enable: PosEdge(\AdcMux:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \AdcMux:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \AdcMux:bSAR_SEQ:nrq_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(3,5)][LB=1] #macrocells=1, #inputs=3, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\AdcMux:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=2]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \AdcMux:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_641
            + \AdcMux:Net_3935\
        );
        Output = \AdcMux:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

statuscell: Name =\AdcMux:bSAR_SEQ:EOCSts\
    PORT MAP (
        clock => \AdcMux:clock\ ,
        status_0 => Net_641 ,
        clk_en => \AdcMux:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000001"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\AdcMux:bSAR_SEQ:enable\)

Intr container @ [IntrContainer=(0)]: 
  Intr@ [IntrContainer=(0)][IntrId=(0)] 
    interrupt: Name =\AdcMux:IRQ\
        PORT MAP (
            interrupt => Net_641 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
Drq container @ [DrqContainer=(0)]: 
  Dma@ [DrqContainer=(0)][DrqId=(0)] 
    drqcell: Name =\AdcMux:FinalBuf\
        PORT MAP (
            dmareq => \AdcMux:Net_3698\ ,
            termin => zero ,
            termout => \AdcMux:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqContainer=(0)][DrqId=(1)] 
    drqcell: Name =\AdcMux:TempBuf\
        PORT MAP (
            dmareq => \AdcMux:Net_3830\ ,
            termin => zero ,
            termout => \AdcMux:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
Port 0 contains the following IO cells:
[IoId=0]: 
Pin : Name = Sensor0(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_DOWN
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => Sensor0(0)__PA ,
        analog_term => Net_642 ,
        pad => Sensor0(0)_PAD ,
        pin_input => \AdcMux:AMuxHw_2_Decoder_one_hot_0\ );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = Sensor1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_DOWN
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => Sensor1(0)__PA ,
        analog_term => Net_643 ,
        pad => Sensor1(0)_PAD ,
        pin_input => \AdcMux:AMuxHw_2_Decoder_one_hot_1\ );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = Sensor2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_DOWN
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => Sensor2(0)__PA ,
        analog_term => Net_645 ,
        pad => Sensor2(0)_PAD ,
        pin_input => \AdcMux:AMuxHw_2_Decoder_one_hot_2\ );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = Sensor3(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_DOWN
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => Sensor3(0)__PA ,
        analog_term => Net_646 ,
        pad => Sensor3(0)_PAD ,
        pin_input => \AdcMux:AMuxHw_2_Decoder_one_hot_3\ );
    Properties:
    {
    }

Port 1 contains the following IO cells:
Port 2 contains the following IO cells:
[IoId=0]: 
Pin : Name = LED1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => LED1(0)__PA ,
        pad => LED1(0)_PAD );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = LED2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => LED2(0)__PA ,
        pad => LED2(0)_PAD );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = LED3(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => LED3(0)__PA ,
        pad => LED3(0)_PAD );
    Properties:
    {
    }

Port 3 contains the following IO cells:
Port 12 contains the following IO cells:
Port 15 contains the following IO cells:
ARM group 0: empty
Cache group 0: empty
CapSense group 0: empty
Clock group 0: 
    Clock Block @ F(Clock,0): 
    clockblockcell: Name =ClockBlock
        PORT MAP (
            imo => ClockBlock_IMO ,
            pllout => ClockBlock_PLL_OUT ,
            ilo => ClockBlock_ILO ,
            clk_100k => ClockBlock_100k ,
            clk_1k => ClockBlock_1k ,
            clk_32k => ClockBlock_32k ,
            xtal => ClockBlock_XTAL ,
            clk_32k_xtal => ClockBlock_XTAL_32KHZ ,
            clk_sync => ClockBlock_MASTER_CLK ,
            clk_bus_glb => ClockBlock_BUS_CLK ,
            clk_bus => ClockBlock_BUS_CLK_local ,
            dclk_glb_0 => \AdcMux:clock\ ,
            dclk_0 => \AdcMux:clock_local\ );
        Properties:
        {
        }
Comparator group 0: empty
DSM group 0: empty
Decimator group 0: empty
EMIF group 0: empty
I2C group 0: empty
LCD group 0: empty
LVD group 0: empty
PICU group 0: empty
PM group 0: empty
SPC group 0: empty
Timer group 0: empty
USB group 0: empty
VIDAC group 0: empty
CsAbuf group 0: empty
Vref group 0: 
    Vref Block @ F(Vref,13): 
    vrefcell: Name =\AdcMux:SAR:vRef_Vdda_1\
        PORT MAP (
            vout => \AdcMux:SAR:Net_235\ );
        Properties:
        {
            autoenable = 1
            guid = "4720866E-BC14-478d-B8A0-3E44F38CADAC"
            ignoresleep = 0
            name = "Vdda/2"
        }
LPF group 0: empty
SAR group 0: 
    SAR Block @ F(SAR,0): 
    sarcell: Name =\AdcMux:SAR:ADC_SAR\
        PORT MAP (
            vplus => \AdcMux:Net_2803\ ,
            vminus => \AdcMux:SAR:Net_126\ ,
            ext_pin => \AdcMux:SAR:Net_209\ ,
            vrefhi_out => \AdcMux:SAR:Net_126\ ,
            vref => \AdcMux:SAR:Net_235\ ,
            clk_udb => \AdcMux:clock_local\ ,
            irq => \AdcMux:SAR:Net_252\ ,
            next => Net_640 ,
            data_out_udb_11 => \AdcMux:SAR:Net_207_11\ ,
            data_out_udb_10 => \AdcMux:SAR:Net_207_10\ ,
            data_out_udb_9 => \AdcMux:SAR:Net_207_9\ ,
            data_out_udb_8 => \AdcMux:SAR:Net_207_8\ ,
            data_out_udb_7 => \AdcMux:SAR:Net_207_7\ ,
            data_out_udb_6 => \AdcMux:SAR:Net_207_6\ ,
            data_out_udb_5 => \AdcMux:SAR:Net_207_5\ ,
            data_out_udb_4 => \AdcMux:SAR:Net_207_4\ ,
            data_out_udb_3 => \AdcMux:SAR:Net_207_3\ ,
            data_out_udb_2 => \AdcMux:SAR:Net_207_2\ ,
            data_out_udb_1 => \AdcMux:SAR:Net_207_1\ ,
            data_out_udb_0 => \AdcMux:SAR:Net_207_0\ ,
            eof_udb => \AdcMux:Net_3830\ );
        Properties:
        {
            cy_registers = ""
        }
ANAIF group 0: empty
PHUB group 0: empty

Blocks not positioned by the digital component placer:
    Amux Block @ <No Location>: 
    amuxcell: Name =\AdcMux:AMuxHw_2\
        PORT MAP (
            muxin_63 => Net_736 ,
            muxin_62 => Net_735 ,
            muxin_61 => Net_734 ,
            muxin_60 => Net_733 ,
            muxin_59 => Net_732 ,
            muxin_58 => Net_731 ,
            muxin_57 => Net_730 ,
            muxin_56 => Net_729 ,
            muxin_55 => Net_728 ,
            muxin_54 => Net_727 ,
            muxin_53 => Net_726 ,
            muxin_52 => Net_725 ,
            muxin_51 => Net_724 ,
            muxin_50 => Net_723 ,
            muxin_49 => Net_722 ,
            muxin_48 => Net_721 ,
            muxin_47 => Net_720 ,
            muxin_46 => Net_718 ,
            muxin_45 => Net_716 ,
            muxin_44 => Net_715 ,
            muxin_43 => Net_713 ,
            muxin_42 => Net_711 ,
            muxin_41 => Net_710 ,
            muxin_40 => Net_708 ,
            muxin_39 => Net_706 ,
            muxin_38 => Net_705 ,
            muxin_37 => Net_703 ,
            muxin_36 => Net_701 ,
            muxin_35 => Net_700 ,
            muxin_34 => Net_698 ,
            muxin_33 => Net_696 ,
            muxin_32 => Net_695 ,
            muxin_31 => Net_693 ,
            muxin_30 => Net_691 ,
            muxin_29 => Net_690 ,
            muxin_28 => Net_688 ,
            muxin_27 => Net_686 ,
            muxin_26 => Net_685 ,
            muxin_25 => Net_683 ,
            muxin_24 => Net_681 ,
            muxin_23 => Net_680 ,
            muxin_22 => Net_678 ,
            muxin_21 => Net_676 ,
            muxin_20 => Net_675 ,
            muxin_19 => Net_673 ,
            muxin_18 => Net_671 ,
            muxin_17 => Net_670 ,
            muxin_16 => Net_668 ,
            muxin_15 => Net_666 ,
            muxin_14 => Net_665 ,
            muxin_13 => Net_663 ,
            muxin_12 => Net_661 ,
            muxin_11 => Net_660 ,
            muxin_10 => Net_658 ,
            muxin_9 => Net_656 ,
            muxin_8 => Net_655 ,
            muxin_7 => Net_653 ,
            muxin_6 => Net_651 ,
            muxin_5 => Net_1292 ,
            muxin_4 => Net_648 ,
            muxin_3 => Net_646 ,
            muxin_2 => Net_645 ,
            muxin_1 => Net_643 ,
            muxin_0 => Net_642 ,
            hw_ctrl_en_63 => \AdcMux:AMuxHw_2_Decoder_one_hot_63\ ,
            hw_ctrl_en_62 => \AdcMux:AMuxHw_2_Decoder_one_hot_62\ ,
            hw_ctrl_en_61 => \AdcMux:AMuxHw_2_Decoder_one_hot_61\ ,
            hw_ctrl_en_60 => \AdcMux:AMuxHw_2_Decoder_one_hot_60\ ,
            hw_ctrl_en_59 => \AdcMux:AMuxHw_2_Decoder_one_hot_59\ ,
            hw_ctrl_en_58 => \AdcMux:AMuxHw_2_Decoder_one_hot_58\ ,
            hw_ctrl_en_57 => \AdcMux:AMuxHw_2_Decoder_one_hot_57\ ,
            hw_ctrl_en_56 => \AdcMux:AMuxHw_2_Decoder_one_hot_56\ ,
            hw_ctrl_en_55 => \AdcMux:AMuxHw_2_Decoder_one_hot_55\ ,
            hw_ctrl_en_54 => \AdcMux:AMuxHw_2_Decoder_one_hot_54\ ,
            hw_ctrl_en_53 => \AdcMux:AMuxHw_2_Decoder_one_hot_53\ ,
            hw_ctrl_en_52 => \AdcMux:AMuxHw_2_Decoder_one_hot_52\ ,
            hw_ctrl_en_51 => \AdcMux:AMuxHw_2_Decoder_one_hot_51\ ,
            hw_ctrl_en_50 => \AdcMux:AMuxHw_2_Decoder_one_hot_50\ ,
            hw_ctrl_en_49 => \AdcMux:AMuxHw_2_Decoder_one_hot_49\ ,
            hw_ctrl_en_48 => \AdcMux:AMuxHw_2_Decoder_one_hot_48\ ,
            hw_ctrl_en_47 => \AdcMux:AMuxHw_2_Decoder_one_hot_47\ ,
            hw_ctrl_en_46 => \AdcMux:AMuxHw_2_Decoder_one_hot_46\ ,
            hw_ctrl_en_45 => \AdcMux:AMuxHw_2_Decoder_one_hot_45\ ,
            hw_ctrl_en_44 => \AdcMux:AMuxHw_2_Decoder_one_hot_44\ ,
            hw_ctrl_en_43 => \AdcMux:AMuxHw_2_Decoder_one_hot_43\ ,
            hw_ctrl_en_42 => \AdcMux:AMuxHw_2_Decoder_one_hot_42\ ,
            hw_ctrl_en_41 => \AdcMux:AMuxHw_2_Decoder_one_hot_41\ ,
            hw_ctrl_en_40 => \AdcMux:AMuxHw_2_Decoder_one_hot_40\ ,
            hw_ctrl_en_39 => \AdcMux:AMuxHw_2_Decoder_one_hot_39\ ,
            hw_ctrl_en_38 => \AdcMux:AMuxHw_2_Decoder_one_hot_38\ ,
            hw_ctrl_en_37 => \AdcMux:AMuxHw_2_Decoder_one_hot_37\ ,
            hw_ctrl_en_36 => \AdcMux:AMuxHw_2_Decoder_one_hot_36\ ,
            hw_ctrl_en_35 => \AdcMux:AMuxHw_2_Decoder_one_hot_35\ ,
            hw_ctrl_en_34 => \AdcMux:AMuxHw_2_Decoder_one_hot_34\ ,
            hw_ctrl_en_33 => \AdcMux:AMuxHw_2_Decoder_one_hot_33\ ,
            hw_ctrl_en_32 => \AdcMux:AMuxHw_2_Decoder_one_hot_32\ ,
            hw_ctrl_en_31 => \AdcMux:AMuxHw_2_Decoder_one_hot_31\ ,
            hw_ctrl_en_30 => \AdcMux:AMuxHw_2_Decoder_one_hot_30\ ,
            hw_ctrl_en_29 => \AdcMux:AMuxHw_2_Decoder_one_hot_29\ ,
            hw_ctrl_en_28 => \AdcMux:AMuxHw_2_Decoder_one_hot_28\ ,
            hw_ctrl_en_27 => \AdcMux:AMuxHw_2_Decoder_one_hot_27\ ,
            hw_ctrl_en_26 => \AdcMux:AMuxHw_2_Decoder_one_hot_26\ ,
            hw_ctrl_en_25 => \AdcMux:AMuxHw_2_Decoder_one_hot_25\ ,
            hw_ctrl_en_24 => \AdcMux:AMuxHw_2_Decoder_one_hot_24\ ,
            hw_ctrl_en_23 => \AdcMux:AMuxHw_2_Decoder_one_hot_23\ ,
            hw_ctrl_en_22 => \AdcMux:AMuxHw_2_Decoder_one_hot_22\ ,
            hw_ctrl_en_21 => \AdcMux:AMuxHw_2_Decoder_one_hot_21\ ,
            hw_ctrl_en_20 => \AdcMux:AMuxHw_2_Decoder_one_hot_20\ ,
            hw_ctrl_en_19 => \AdcMux:AMuxHw_2_Decoder_one_hot_19\ ,
            hw_ctrl_en_18 => \AdcMux:AMuxHw_2_Decoder_one_hot_18\ ,
            hw_ctrl_en_17 => \AdcMux:AMuxHw_2_Decoder_one_hot_17\ ,
            hw_ctrl_en_16 => \AdcMux:AMuxHw_2_Decoder_one_hot_16\ ,
            hw_ctrl_en_15 => \AdcMux:AMuxHw_2_Decoder_one_hot_15\ ,
            hw_ctrl_en_14 => \AdcMux:AMuxHw_2_Decoder_one_hot_14\ ,
            hw_ctrl_en_13 => \AdcMux:AMuxHw_2_Decoder_one_hot_13\ ,
            hw_ctrl_en_12 => \AdcMux:AMuxHw_2_Decoder_one_hot_12\ ,
            hw_ctrl_en_11 => \AdcMux:AMuxHw_2_Decoder_one_hot_11\ ,
            hw_ctrl_en_10 => \AdcMux:AMuxHw_2_Decoder_one_hot_10\ ,
            hw_ctrl_en_9 => \AdcMux:AMuxHw_2_Decoder_one_hot_9\ ,
            hw_ctrl_en_8 => \AdcMux:AMuxHw_2_Decoder_one_hot_8\ ,
            hw_ctrl_en_7 => \AdcMux:AMuxHw_2_Decoder_one_hot_7\ ,
            hw_ctrl_en_6 => \AdcMux:AMuxHw_2_Decoder_one_hot_6\ ,
            hw_ctrl_en_5 => \AdcMux:AMuxHw_2_Decoder_one_hot_5\ ,
            hw_ctrl_en_4 => \AdcMux:AMuxHw_2_Decoder_one_hot_4\ ,
            vout => \AdcMux:Net_2803\ );
        Properties:
        {
            api_type = 2
            connect_mode = 1
            cy_registers = ""
            hw_control = 1
            init_mux_sel = "0000000000000000000000000000000000000000000000000000000000000000"
            muxin_width = 64
            one_active = 1
        }
</CYPRESSTAG>
<CYPRESSTAG name="Port Configuration Details">

------------------------------------------------------------
Port Configuration report
------------------------------------------------------------
     |     |       | Interrupt |                  |            | 
Port | Pin | Fixed |      Type |       Drive Mode |       Name | Connections
-----+-----+-------+-----------+------------------+------------+---------------------------------------------------------
   0 |   0 |     * |      NONE |    RES_PULL_DOWN | Sensor0(0) | In(\AdcMux:AMuxHw_2_Decoder_one_hot_0\), Analog(Net_642)
     |   1 |     * |      NONE |    RES_PULL_DOWN | Sensor1(0) | In(\AdcMux:AMuxHw_2_Decoder_one_hot_1\), Analog(Net_643)
     |   2 |     * |      NONE |    RES_PULL_DOWN | Sensor2(0) | In(\AdcMux:AMuxHw_2_Decoder_one_hot_2\), Analog(Net_645)
     |   3 |     * |      NONE |    RES_PULL_DOWN | Sensor3(0) | In(\AdcMux:AMuxHw_2_Decoder_one_hot_3\), Analog(Net_646)
-----+-----+-------+-----------+------------------+------------+---------------------------------------------------------
   2 |   0 |     * |      NONE |         CMOS_OUT |    LED1(0) | 
     |   1 |     * |      NONE |         CMOS_OUT |    LED2(0) | 
     |   2 |     * |      NONE |         CMOS_OUT |    LED3(0) | 
-------------------------------------------------------------------------------------------------------------------------
</CYPRESSTAG>
</CYPRESSTAG>
</CYPRESSTAG>
Digital component placer commit/Report: Elapsed time ==> 0s.087ms
Digital Placement phase: Elapsed time ==> 2s.970ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Routing">
"C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\bin/sjrouter.exe" --xml-path "C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\dev\psoc5/psoc5lp/route_arch-rrg.cydata" --vh2-path "TestDesign01_r.vh2" --pcf-path "TestDesign01.pco" --des-name "TestDesign01" --dsf-path "TestDesign01.dsf" --sdc-path "TestDesign01.sdc" --lib-path "TestDesign01_r.lib"
Routing successful.
Digital Routing phase: Elapsed time ==> 2s.913ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Generation">
Bitstream Generation phase: Elapsed time ==> 0s.254ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Verification">
Bitstream Verification phase: Elapsed time ==> 0s.066ms
</CYPRESSTAG>
<CYPRESSTAG name="Static timing analysis">
Timing report is in TestDesign01_timing.html.
Static timing analysis phase: Elapsed time ==> 0s.457ms
</CYPRESSTAG>
<CYPRESSTAG name="Data reporting">
Data reporting phase: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Database update...">
Design database save phase: Elapsed time ==> 0s.241ms
</CYPRESSTAG>
cydsfit: Elapsed time ==> 7s.745ms
</CYPRESSTAG>
Fitter phase: Elapsed time ==> 7s.747ms
API generation phase: Elapsed time ==> 1s.419ms
Dependency generation phase: Elapsed time ==> 0s.024ms
Cleanup phase: Elapsed time ==> 0s.002ms

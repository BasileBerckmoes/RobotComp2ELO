Loading plugins phase: Elapsed time ==> 0s.129ms
<CYPRESSTAG name="CyDsfit arguments...">
cydsfit arguments: -.fdsnotice -.fdswarpdepfile=warp_dependencies.txt -.fdselabdepfile=elab_dependencies.txt -.fdsbldfile=generated_files.txt -.fdsreffile=referenced_files.txt -p C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Software\PSoc\Roadster\RoadsterRACEMODE\Roadster1.0.cydsn\Roadster1.0.cyprj -d CY8C5888LTI-LP097 -s C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Software\PSoc\Roadster\RoadsterRACEMODE\Roadster1.0.cydsn\Generated_Source\PSoC5 -- -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE
</CYPRESSTAG>
<CYPRESSTAG name="Design elaboration results...">
ADD: sdb.M0065: information: Analog terminal "vdac_ref" on ADC_SAR_SEQ_v2_10 is unconnected.
 * C:\Users\basile.berckmoes\Documents\PSoC Creator\4.1\Downloads ( 4.1).cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Signal: vdac_ref)
 * C:\Users\basile.berckmoes\Documents\PSoC Creator\4.1\Downloads ( 4.1).cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Shape_798)
 * C:\Users\basile.berckmoes\Documents\PSoC Creator\4.1\Downloads ( 4.1).cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Shape_885)

</CYPRESSTAG>
Elaboration phase: Elapsed time ==> 2s.326ms
<CYPRESSTAG name="HDL generation results...">
</CYPRESSTAG>
HDL generation phase: Elapsed time ==> 0s.113ms
<CYPRESSTAG name="Synthesis results...">

     | | | | | | |
   _________________
  -|               |-
  -|               |-
  -|               |-
  -|    CYPRESS    |-
  -|               |-
  -|               |-   Warp Verilog Synthesis Compiler: Version 6.3 IR 41
  -|               |-   Copyright (C) 1991-2001 Cypress Semiconductor
   |_______________|
     | | | | | | |

======================================================================
Compiling:  Roadster1.0.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Software\PSoc\Roadster\RoadsterRACEMODE\Roadster1.0.cydsn\Roadster1.0.cyprj -dcpsoc3 Roadster1.0.v -verilog
======================================================================

======================================================================
Compiling:  Roadster1.0.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Software\PSoc\Roadster\RoadsterRACEMODE\Roadster1.0.cydsn\Roadster1.0.cyprj -dcpsoc3 Roadster1.0.v -verilog
======================================================================

======================================================================
Compiling:  Roadster1.0.v
Program  :   vlogfe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Software\PSoc\Roadster\RoadsterRACEMODE\Roadster1.0.cydsn\Roadster1.0.cyprj -dcpsoc3 -verilog Roadster1.0.v
======================================================================

vlogfe V6.3 IR 41:  Verilog parser
Sat Apr 21 15:39:31 2018


======================================================================
Compiling:  Roadster1.0.v
Program  :   vpp
Options  :    -yv2 -q10 Roadster1.0.v
======================================================================

vpp V6.3 IR 41:  Verilog Pre-Processor
Sat Apr 21 15:39:31 2018

Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\demux_v1_10\demux_v1_10.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\OneTerminal\OneTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\mux_v1_10\mux_v1_10.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\CyStatusReg_v1_90\CyStatusReg_v1_90.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\Debouncer_v1_0\Debouncer_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'

vpp:  No errors.

Library 'work' => directory 'lcpsoc3'
General_symbol_table
General_symbol_table
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Using control file 'Roadster1.0.ctl'.
Roadster1.0.v (line 707, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.
C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v (line 947, col 46):  Note: Substituting module 'sub_vi_vv' for '-'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v (line 977, col 46):  Note: Substituting module 'add_vi_vv' for '+'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1113, col 55):  Note: Substituting module 'add_vv_vv' for '+'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 48):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 77):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1389, col 59):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1424, col 61):  Note: Substituting module 'cmp_vv_vv' for '/='.
C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1547, col 106):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1603, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1604, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.

vlogfe:  No errors.


======================================================================
Compiling:  Roadster1.0.v
Program  :   tovif
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Software\PSoc\Roadster\RoadsterRACEMODE\Roadster1.0.cydsn\Roadster1.0.cyprj -dcpsoc3 -verilog Roadster1.0.v
======================================================================

tovif V6.3 IR 41:  High-level synthesis
Sat Apr 21 15:39:31 2018

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Software\PSoc\Roadster\RoadsterRACEMODE\Roadster1.0.cydsn\codegentemp\Roadster1.0.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Software\PSoc\Roadster\RoadsterRACEMODE\Roadster1.0.cydsn\codegentemp\Roadster1.0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\demux_v1_10\demux_v1_10.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\mux_v1_10\mux_v1_10.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\CyStatusReg_v1_90\CyStatusReg_v1_90.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\Debouncer_v1_0\Debouncer_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.

tovif:  No errors.


======================================================================
Compiling:  Roadster1.0.v
Program  :   topld
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Software\PSoc\Roadster\RoadsterRACEMODE\Roadster1.0.cydsn\Roadster1.0.cyprj -dcpsoc3 -verilog Roadster1.0.v
======================================================================

topld V6.3 IR 41:  Synthesis and optimization
Sat Apr 21 15:39:32 2018

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Software\PSoc\Roadster\RoadsterRACEMODE\Roadster1.0.cydsn\codegentemp\Roadster1.0.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Software\PSoc\Roadster\RoadsterRACEMODE\Roadster1.0.cydsn\codegentemp\Roadster1.0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\demux_v1_10\demux_v1_10.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\mux_v1_10\mux_v1_10.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\CyStatusReg_v1_90\CyStatusReg_v1_90.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\Debouncer_v1_0\Debouncer_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\lcpsoc3\stdlogic\cpsoc3.vif'.

----------------------------------------------------------
Detecting unused logic.
----------------------------------------------------------
    User names
	\ADC_IR:SAR:Net_221\
	\ADC_IR:SAR:Net_383\
	\ADC_IR:bSAR_SEQ:sw_soc\
	\ADC_IR:soc_out\
	\ADC_IR:Net_3905\
	\ADC_IR:Net_3867\
	\ADC_IR:MODULE_1:g1:a0:gx:u0:albi_2\
	\ADC_IR:MODULE_1:g1:a0:gx:u0:agbi_2\
	\ADC_IR:MODULE_1:g1:a0:gx:u0:albi_1\
	\ADC_IR:MODULE_1:g1:a0:gx:u0:agbi_1\
	\ADC_IR:MODULE_1:g1:a0:gx:u0:albi_0\
	\ADC_IR:MODULE_1:g1:a0:gx:u0:agbi_0\
	\ADC_IR:MODULE_1:g1:a0:xneq\
	\ADC_IR:MODULE_1:g1:a0:xlt\
	\ADC_IR:MODULE_1:g1:a0:xlte\
	\ADC_IR:MODULE_1:g1:a0:xgt\
	\ADC_IR:MODULE_1:g1:a0:xgte\
	\ADC_IR:MODULE_1:lt\
	\ADC_IR:MODULE_1:gt\
	\ADC_IR:MODULE_1:gte\
	\ADC_IR:MODULE_1:lte\
	\ADC_IR:MODULE_1:neq\
	\demux_1:tmp__demux_1_0_reg\
	selectUltraS_0
	selectUltraS_1
	\demux_1:tmp__demux_1_1_reg\
	\demux_1:tmp__demux_1_2_reg\
	\demux_1:tmp__demux_1_3_reg\
	Net_412
	Net_416
	Net_417
	Net_656
	Net_370
	Net_371
	Net_372
	Net_374
	Net_375
	Net_376
	Net_377
	Net_526
	\TimerUS:Net_102\
	\selectUS:control_out_0\
	\selectUS:control_out_1\
	Net_420
	Net_421
	Net_423
	Net_424
	Net_425
	Net_426
	\MotorControl:PWMUDB:km_run\
	\MotorControl:PWMUDB:ctrl_cmpmode2_2\
	\MotorControl:PWMUDB:ctrl_cmpmode2_1\
	\MotorControl:PWMUDB:ctrl_cmpmode2_0\
	\MotorControl:PWMUDB:ctrl_cmpmode1_2\
	\MotorControl:PWMUDB:ctrl_cmpmode1_1\
	\MotorControl:PWMUDB:ctrl_cmpmode1_0\
	\MotorControl:PWMUDB:capt_rising\
	\MotorControl:PWMUDB:capt_falling\
	\MotorControl:PWMUDB:trig_rise\
	\MotorControl:PWMUDB:trig_fall\
	\MotorControl:PWMUDB:sc_kill\
	\MotorControl:PWMUDB:min_kill\
	\MotorControl:PWMUDB:km_tc\
	\MotorControl:PWMUDB:db_tc\
	\MotorControl:PWMUDB:dith_sel\
	\MotorControl:Net_101\
	\MotorControl:Net_96\
	\MotorControl:PWMUDB:MODULE_2:b_31\
	\MotorControl:PWMUDB:MODULE_2:b_30\
	\MotorControl:PWMUDB:MODULE_2:b_29\
	\MotorControl:PWMUDB:MODULE_2:b_28\
	\MotorControl:PWMUDB:MODULE_2:b_27\
	\MotorControl:PWMUDB:MODULE_2:b_26\
	\MotorControl:PWMUDB:MODULE_2:b_25\
	\MotorControl:PWMUDB:MODULE_2:b_24\
	\MotorControl:PWMUDB:MODULE_2:b_23\
	\MotorControl:PWMUDB:MODULE_2:b_22\
	\MotorControl:PWMUDB:MODULE_2:b_21\
	\MotorControl:PWMUDB:MODULE_2:b_20\
	\MotorControl:PWMUDB:MODULE_2:b_19\
	\MotorControl:PWMUDB:MODULE_2:b_18\
	\MotorControl:PWMUDB:MODULE_2:b_17\
	\MotorControl:PWMUDB:MODULE_2:b_16\
	\MotorControl:PWMUDB:MODULE_2:b_15\
	\MotorControl:PWMUDB:MODULE_2:b_14\
	\MotorControl:PWMUDB:MODULE_2:b_13\
	\MotorControl:PWMUDB:MODULE_2:b_12\
	\MotorControl:PWMUDB:MODULE_2:b_11\
	\MotorControl:PWMUDB:MODULE_2:b_10\
	\MotorControl:PWMUDB:MODULE_2:b_9\
	\MotorControl:PWMUDB:MODULE_2:b_8\
	\MotorControl:PWMUDB:MODULE_2:b_7\
	\MotorControl:PWMUDB:MODULE_2:b_6\
	\MotorControl:PWMUDB:MODULE_2:b_5\
	\MotorControl:PWMUDB:MODULE_2:b_4\
	\MotorControl:PWMUDB:MODULE_2:b_3\
	\MotorControl:PWMUDB:MODULE_2:b_2\
	\MotorControl:PWMUDB:MODULE_2:b_1\
	\MotorControl:PWMUDB:MODULE_2:b_0\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:a_31\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:a_30\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:a_29\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:a_28\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:a_27\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:a_26\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:a_25\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:a_24\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_31\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_30\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_29\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_28\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_27\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_26\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_25\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_24\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_23\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_22\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_21\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_20\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_19\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_18\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_17\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_16\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_15\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_14\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_13\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_12\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_11\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_10\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_9\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_8\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_7\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_6\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_5\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_4\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_3\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_2\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_1\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_0\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_31\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_30\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_29\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_28\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_27\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_26\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_25\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_24\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_23\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_22\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_21\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_20\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_19\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_18\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_17\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_16\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_15\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_14\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_13\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_12\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_11\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_10\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_9\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_8\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_7\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_6\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_5\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_4\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_3\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_2\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_31\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_30\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_29\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_28\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_27\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_26\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_25\
	Net_1134
	Net_1128
	Net_1127
	\MotorControl:Net_113\
	\MotorControl:Net_107\
	\MotorControl:Net_114\
	\BleUart:BUART:reset_sr\
	\BleUart:BUART:sRX:s23Poll:MODULE_3:g2:a0:b_1\
	\BleUart:BUART:sRX:s23Poll:MODULE_3:g2:a0:b_0\
	\BleUart:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_0\
	\BleUart:BUART:sRX:s23Poll:MODULE_5:g2:a0:gta_0\
	Net_781
	\BleUart:BUART:sRX:MODULE_6:g2:a0:gta_0\
	\BleUart:BUART:sRX:MODULE_7:g1:a0:gx:u0:albi_1\
	\BleUart:BUART:sRX:MODULE_7:g1:a0:gx:u0:agbi_1\
	\BleUart:BUART:sRX:MODULE_7:g1:a0:gx:u0:lt_0\
	\BleUart:BUART:sRX:MODULE_7:g1:a0:gx:u0:gt_0\
	\BleUart:BUART:sRX:MODULE_7:g1:a0:gx:u0:lti_0\
	\BleUart:BUART:sRX:MODULE_7:g1:a0:gx:u0:gti_0\
	\BleUart:BUART:sRX:MODULE_7:g1:a0:gx:u0:albi_0\
	\BleUart:BUART:sRX:MODULE_7:g1:a0:gx:u0:agbi_0\
	\BleUart:BUART:sRX:MODULE_7:g1:a0:xeq\
	\BleUart:BUART:sRX:MODULE_7:g1:a0:xlt\
	\BleUart:BUART:sRX:MODULE_7:g1:a0:xlte\
	\BleUart:BUART:sRX:MODULE_7:g1:a0:xgt\
	\BleUart:BUART:sRX:MODULE_7:g1:a0:xgte\
	\BleUart:BUART:sRX:MODULE_7:lt\
	\BleUart:BUART:sRX:MODULE_7:eq\
	\BleUart:BUART:sRX:MODULE_7:gt\
	\BleUart:BUART:sRX:MODULE_7:gte\
	\BleUart:BUART:sRX:MODULE_7:lte\
	Net_1139

    Synthesized names
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_31\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_30\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_29\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_28\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_27\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_26\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_25\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_24\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_23\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_22\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_21\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_20\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_19\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_18\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_17\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_16\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_15\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_14\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_13\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_12\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_11\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_10\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_9\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_8\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_7\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_6\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_5\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_4\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_3\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_2\

Deleted 208 User equations/components.
Deleted 30 Synthesized equations/components.

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing one to tmpOE__IR1_net_0
Aliasing tmpOE__IR2_net_0 to tmpOE__IR1_net_0
Aliasing tmpOE__IR3_net_0 to tmpOE__IR1_net_0
Aliasing tmpOE__IR4_net_0 to tmpOE__IR1_net_0
Aliasing tmpOE__IR5_net_0 to tmpOE__IR1_net_0
Aliasing tmpOE__IR6_net_0 to tmpOE__IR1_net_0
Aliasing tmpOE__IR7_net_0 to tmpOE__IR1_net_0
Aliasing tmpOE__IR8_net_0 to tmpOE__IR1_net_0
Aliasing \ADC_IR:AMuxHw_2_Decoder_enable\ to tmpOE__IR1_net_0
Aliasing \ADC_IR:SAR:vp_ctl_0\ to zero
Aliasing \ADC_IR:SAR:vp_ctl_2\ to zero
Aliasing \ADC_IR:SAR:vn_ctl_1\ to zero
Aliasing \ADC_IR:SAR:vn_ctl_3\ to zero
Aliasing \ADC_IR:SAR:vp_ctl_1\ to zero
Aliasing \ADC_IR:SAR:vp_ctl_3\ to zero
Aliasing \ADC_IR:SAR:vn_ctl_0\ to zero
Aliasing \ADC_IR:SAR:vn_ctl_2\ to zero
Aliasing \ADC_IR:SAR:soc\ to zero
Aliasing \ADC_IR:bSAR_SEQ:status_7\ to zero
Aliasing \ADC_IR:bSAR_SEQ:status_6\ to zero
Aliasing \ADC_IR:bSAR_SEQ:status_5\ to zero
Aliasing \ADC_IR:bSAR_SEQ:status_4\ to zero
Aliasing \ADC_IR:bSAR_SEQ:status_3\ to zero
Aliasing \ADC_IR:bSAR_SEQ:status_2\ to zero
Aliasing \ADC_IR:bSAR_SEQ:status_1\ to zero
Aliasing Net_13 to \ADC_IR:bSAR_SEQ:status_0\
Aliasing \ADC_IR:MODULE_1:g1:a0:gx:u0:aeqb_0\ to tmpOE__IR1_net_0
Aliasing tmpOE__LED5_net_0 to tmpOE__IR1_net_0
Aliasing tmpOE__LED4_net_0 to tmpOE__IR1_net_0
Aliasing tmpOE__LED3_net_0 to tmpOE__IR1_net_0
Aliasing tmpOE__LED2_net_0 to tmpOE__IR1_net_0
Aliasing tmpOE__LED1_net_0 to tmpOE__IR1_net_0
Aliasing tmpOE__SW1_net_0 to tmpOE__IR1_net_0
Aliasing tmpOE__SW2_net_0 to tmpOE__IR1_net_0
Aliasing tmpOE__IN3_net_0 to tmpOE__IR1_net_0
Aliasing tmpOE__IN2_net_0 to tmpOE__IR1_net_0
Aliasing \LCD:tmpOE__LCDPort_net_6\ to tmpOE__IR1_net_0
Aliasing \LCD:tmpOE__LCDPort_net_5\ to tmpOE__IR1_net_0
Aliasing \LCD:tmpOE__LCDPort_net_4\ to tmpOE__IR1_net_0
Aliasing \LCD:tmpOE__LCDPort_net_3\ to tmpOE__IR1_net_0
Aliasing \LCD:tmpOE__LCDPort_net_2\ to tmpOE__IR1_net_0
Aliasing \LCD:tmpOE__LCDPort_net_1\ to tmpOE__IR1_net_0
Aliasing \LCD:tmpOE__LCDPort_net_0\ to tmpOE__IR1_net_0
Aliasing \TriggerReg:clk\ to zero
Aliasing \TriggerReg:rst\ to zero
Aliasing \TimerUS:Net_260\ to zero
Aliasing \mux_1:tmp__mux_1_reg\ to zero
Aliasing \selectUS:clk\ to zero
Aliasing \selectUS:rst\ to zero
Aliasing \statusEcho:status_0\ to \TimerUS:Net_266\
Aliasing \statusEcho:status_1\ to zero
Aliasing \statusEcho:status_2\ to zero
Aliasing \statusEcho:status_3\ to zero
Aliasing \statusEcho:status_4\ to zero
Aliasing \statusEcho:status_5\ to zero
Aliasing \statusEcho:status_6\ to zero
Aliasing \statusEcho:status_7\ to zero
Aliasing tmpOE__IN1_net_0 to tmpOE__IR1_net_0
Aliasing tmpOE__ENB_net_0 to tmpOE__IR1_net_0
Aliasing tmpOE__ENA_net_0 to tmpOE__IR1_net_0
Aliasing \MotorControl:PWMUDB:hwCapture\ to zero
Aliasing \MotorControl:PWMUDB:trig_out\ to tmpOE__IR1_net_0
Aliasing Net_662 to zero
Aliasing \MotorControl:PWMUDB:runmode_enable\\S\ to zero
Aliasing \MotorControl:PWMUDB:ltch_kill_reg\\R\ to \MotorControl:PWMUDB:runmode_enable\\R\
Aliasing \MotorControl:PWMUDB:ltch_kill_reg\\S\ to zero
Aliasing \MotorControl:PWMUDB:min_kill_reg\\R\ to \MotorControl:PWMUDB:runmode_enable\\R\
Aliasing \MotorControl:PWMUDB:min_kill_reg\\S\ to zero
Aliasing \MotorControl:PWMUDB:final_kill\ to tmpOE__IR1_net_0
Aliasing \MotorControl:PWMUDB:dith_count_1\\R\ to \MotorControl:PWMUDB:runmode_enable\\R\
Aliasing \MotorControl:PWMUDB:dith_count_1\\S\ to zero
Aliasing \MotorControl:PWMUDB:dith_count_0\\R\ to \MotorControl:PWMUDB:runmode_enable\\R\
Aliasing \MotorControl:PWMUDB:dith_count_0\\S\ to zero
Aliasing \MotorControl:PWMUDB:status_6\ to zero
Aliasing \MotorControl:PWMUDB:status_4\ to zero
Aliasing \MotorControl:PWMUDB:cmp1_status_reg\\R\ to \MotorControl:PWMUDB:runmode_enable\\R\
Aliasing \MotorControl:PWMUDB:cmp1_status_reg\\S\ to zero
Aliasing \MotorControl:PWMUDB:cmp2_status_reg\\R\ to \MotorControl:PWMUDB:runmode_enable\\R\
Aliasing \MotorControl:PWMUDB:cmp2_status_reg\\S\ to zero
Aliasing \MotorControl:PWMUDB:final_kill_reg\\R\ to \MotorControl:PWMUDB:runmode_enable\\R\
Aliasing \MotorControl:PWMUDB:final_kill_reg\\S\ to zero
Aliasing \MotorControl:PWMUDB:cs_addr_0\ to \MotorControl:PWMUDB:runmode_enable\\R\
Aliasing \MotorControl:PWMUDB:pwm_temp\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_23\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_22\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_21\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_20\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_19\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_18\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_17\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_16\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_15\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_14\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_13\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_12\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_11\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_10\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_9\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_8\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_7\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_6\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_5\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_4\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_3\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_2\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ to tmpOE__IR1_net_0
Aliasing tmpOE__IN4_net_0 to tmpOE__IR1_net_0
Aliasing \BleVDAC:Net_83\ to zero
Aliasing \BleVDAC:Net_81\ to zero
Aliasing \BleVDAC:Net_82\ to zero
Aliasing Net_784 to zero
Aliasing \BleUart:BUART:tx_hd_send_break\ to zero
Aliasing \BleUart:BUART:HalfDuplexSend\ to zero
Aliasing \BleUart:BUART:FinalParityType_1\ to zero
Aliasing \BleUart:BUART:FinalParityType_0\ to zero
Aliasing \BleUart:BUART:FinalAddrMode_2\ to zero
Aliasing \BleUart:BUART:FinalAddrMode_1\ to zero
Aliasing \BleUart:BUART:FinalAddrMode_0\ to zero
Aliasing \BleUart:BUART:tx_ctrl_mark\ to zero
Aliasing \BleUart:BUART:tx_status_6\ to zero
Aliasing \BleUart:BUART:tx_status_5\ to zero
Aliasing \BleUart:BUART:tx_status_4\ to zero
Aliasing \BleUart:BUART:rx_count7_bit8_wire\ to zero
Aliasing \BleUart:BUART:sRX:s23Poll:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_0\ to tmpOE__IR1_net_0
Aliasing \BleUart:BUART:sRX:s23Poll:MODIN5_1\ to \BleUart:BUART:sRX:s23Poll:MODIN4_1\
Aliasing \BleUart:BUART:sRX:s23Poll:MODIN5_0\ to \BleUart:BUART:sRX:s23Poll:MODIN4_0\
Aliasing \BleUart:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\ to zero
Aliasing \BleUart:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\ to tmpOE__IR1_net_0
Aliasing \BleUart:BUART:sRX:s23Poll:MODIN6_1\ to \BleUart:BUART:sRX:s23Poll:MODIN4_1\
Aliasing \BleUart:BUART:sRX:s23Poll:MODIN6_0\ to \BleUart:BUART:sRX:s23Poll:MODIN4_0\
Aliasing \BleUart:BUART:sRX:s23Poll:MODULE_5:g2:a0:newb_1\ to tmpOE__IR1_net_0
Aliasing \BleUart:BUART:sRX:s23Poll:MODULE_5:g2:a0:newb_0\ to zero
Aliasing \BleUart:BUART:rx_status_1\ to zero
Aliasing \BleUart:BUART:sRX:MODULE_6:g2:a0:newa_6\ to zero
Aliasing \BleUart:BUART:sRX:MODULE_6:g2:a0:newa_5\ to zero
Aliasing \BleUart:BUART:sRX:MODULE_6:g2:a0:newa_4\ to zero
Aliasing \BleUart:BUART:sRX:MODULE_6:g2:a0:newb_6\ to zero
Aliasing \BleUart:BUART:sRX:MODULE_6:g2:a0:newb_5\ to zero
Aliasing \BleUart:BUART:sRX:MODULE_6:g2:a0:newb_4\ to zero
Aliasing \BleUart:BUART:sRX:MODULE_6:g2:a0:newb_3\ to zero
Aliasing \BleUart:BUART:sRX:MODULE_6:g2:a0:newb_2\ to tmpOE__IR1_net_0
Aliasing \BleUart:BUART:sRX:MODULE_6:g2:a0:newb_1\ to tmpOE__IR1_net_0
Aliasing \BleUart:BUART:sRX:MODULE_6:g2:a0:newb_0\ to zero
Aliasing \BleUart:BUART:sRX:MODULE_7:g1:a0:gx:u0:aeqb_0\ to tmpOE__IR1_net_0
Aliasing tmpOE__BleRx_net_0 to tmpOE__IR1_net_0
Aliasing tmpOE__BleTx_net_0 to tmpOE__IR1_net_0
Aliasing tmpOE__BleKey_net_0 to tmpOE__IR1_net_0
Aliasing tmpOE__BleState_net_0 to tmpOE__IR1_net_0
Aliasing Net_12 to zero
Aliasing \sendBleDataTimer:Net_260\ to zero
Aliasing \sendBleDataTimer:Net_102\ to tmpOE__IR1_net_0
Aliasing \ADC_IR:AMuxHw_2_Decoder_old_id_5\\D\ to \ADC_IR:MODIN1_5\
Aliasing \ADC_IR:AMuxHw_2_Decoder_old_id_4\\D\ to \ADC_IR:MODIN1_4\
Aliasing \ADC_IR:AMuxHw_2_Decoder_old_id_3\\D\ to \ADC_IR:MODIN1_3\
Aliasing \ADC_IR:AMuxHw_2_Decoder_old_id_2\\D\ to \ADC_IR:MODIN1_2\
Aliasing \ADC_IR:AMuxHw_2_Decoder_old_id_1\\D\ to \ADC_IR:MODIN1_1\
Aliasing \ADC_IR:AMuxHw_2_Decoder_old_id_0\\D\ to \ADC_IR:MODIN1_0\
Aliasing \MotorControl:PWMUDB:min_kill_reg\\D\ to tmpOE__IR1_net_0
Aliasing \MotorControl:PWMUDB:prevCapture\\D\ to zero
Aliasing \MotorControl:PWMUDB:trig_last\\D\ to zero
Aliasing \MotorControl:PWMUDB:ltch_kill_reg\\D\ to tmpOE__IR1_net_0
Aliasing \MotorControl:PWMUDB:tc_i_reg\\D\ to \MotorControl:PWMUDB:status_2\
Aliasing \Debouncer_1:DEBOUNCER[0]:d_sync_1\\D\ to Net_666
Aliasing Net_667D to zero
Aliasing Net_668D to zero
Aliasing Net_782D to zero
Aliasing \BleUart:BUART:rx_break_status\\D\ to zero
Removing Lhs of wire one[7] = tmpOE__IR1_net_0[1]
Removing Lhs of wire tmpOE__IR2_net_0[10] = tmpOE__IR1_net_0[1]
Removing Lhs of wire tmpOE__IR3_net_0[17] = tmpOE__IR1_net_0[1]
Removing Lhs of wire tmpOE__IR4_net_0[24] = tmpOE__IR1_net_0[1]
Removing Lhs of wire tmpOE__IR5_net_0[31] = tmpOE__IR1_net_0[1]
Removing Lhs of wire tmpOE__IR6_net_0[38] = tmpOE__IR1_net_0[1]
Removing Lhs of wire tmpOE__IR7_net_0[45] = tmpOE__IR1_net_0[1]
Removing Lhs of wire tmpOE__IR8_net_0[52] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \ADC_IR:AMuxHw_2_Decoder_enable\[58] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \ADC_IR:cmp_vv_vv_MODGEN_1\[60] = \ADC_IR:MODULE_1:g1:a0:xeq\[387]
Removing Rhs of wire \ADC_IR:clock\[61] = \ADC_IR:Net_3874\[287]
Removing Rhs of wire \ADC_IR:ch_addr_5\[63] = \ADC_IR:bSAR_SEQ:count_5\[254]
Removing Rhs of wire \ADC_IR:ch_addr_4\[65] = \ADC_IR:bSAR_SEQ:count_4\[255]
Removing Rhs of wire \ADC_IR:ch_addr_3\[67] = \ADC_IR:bSAR_SEQ:count_3\[256]
Removing Rhs of wire \ADC_IR:ch_addr_2\[69] = \ADC_IR:bSAR_SEQ:count_2\[257]
Removing Rhs of wire \ADC_IR:ch_addr_1\[71] = \ADC_IR:bSAR_SEQ:count_1\[258]
Removing Rhs of wire \ADC_IR:ch_addr_0\[73] = \ADC_IR:bSAR_SEQ:count_0\[259]
Removing Lhs of wire \ADC_IR:SAR:vp_ctl_0\[199] = zero[2]
Removing Lhs of wire \ADC_IR:SAR:vp_ctl_2\[200] = zero[2]
Removing Lhs of wire \ADC_IR:SAR:vn_ctl_1\[201] = zero[2]
Removing Lhs of wire \ADC_IR:SAR:vn_ctl_3\[202] = zero[2]
Removing Lhs of wire \ADC_IR:SAR:vp_ctl_1\[203] = zero[2]
Removing Lhs of wire \ADC_IR:SAR:vp_ctl_3\[204] = zero[2]
Removing Lhs of wire \ADC_IR:SAR:vn_ctl_0\[205] = zero[2]
Removing Lhs of wire \ADC_IR:SAR:vn_ctl_2\[206] = zero[2]
Removing Lhs of wire \ADC_IR:SAR:Net_188\[207] = \ADC_IR:clock\[61]
Removing Lhs of wire \ADC_IR:SAR:soc\[213] = zero[2]
Removing Rhs of wire \ADC_IR:bSAR_SEQ:enable\[244] = \ADC_IR:bSAR_SEQ:control_0\[245]
Removing Rhs of wire \ADC_IR:bSAR_SEQ:load_period\[246] = \ADC_IR:bSAR_SEQ:control_1\[247]
Removing Lhs of wire \ADC_IR:bSAR_SEQ:status_7\[260] = zero[2]
Removing Lhs of wire \ADC_IR:bSAR_SEQ:status_6\[261] = zero[2]
Removing Lhs of wire \ADC_IR:bSAR_SEQ:status_5\[262] = zero[2]
Removing Lhs of wire \ADC_IR:bSAR_SEQ:status_4\[263] = zero[2]
Removing Lhs of wire \ADC_IR:bSAR_SEQ:status_3\[264] = zero[2]
Removing Lhs of wire \ADC_IR:bSAR_SEQ:status_2\[265] = zero[2]
Removing Lhs of wire \ADC_IR:bSAR_SEQ:status_1\[266] = zero[2]
Removing Rhs of wire \ADC_IR:bSAR_SEQ:status_0\[267] = \ADC_IR:bSAR_SEQ:nrq_edge_detect_reg\[268]
Removing Rhs of wire Net_13[275] = \ADC_IR:bSAR_SEQ:status_0\[267]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:newa_5\[298] = \ADC_IR:MODIN1_5\[299]
Removing Lhs of wire \ADC_IR:MODIN1_5\[299] = \ADC_IR:ch_addr_5\[63]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:newa_4\[300] = \ADC_IR:MODIN1_4\[301]
Removing Lhs of wire \ADC_IR:MODIN1_4\[301] = \ADC_IR:ch_addr_4\[65]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:newa_3\[302] = \ADC_IR:MODIN1_3\[303]
Removing Lhs of wire \ADC_IR:MODIN1_3\[303] = \ADC_IR:ch_addr_3\[67]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:newa_2\[304] = \ADC_IR:MODIN1_2\[305]
Removing Lhs of wire \ADC_IR:MODIN1_2\[305] = \ADC_IR:ch_addr_2\[69]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:newa_1\[306] = \ADC_IR:MODIN1_1\[307]
Removing Lhs of wire \ADC_IR:MODIN1_1\[307] = \ADC_IR:ch_addr_1\[71]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:newa_0\[308] = \ADC_IR:MODIN1_0\[309]
Removing Lhs of wire \ADC_IR:MODIN1_0\[309] = \ADC_IR:ch_addr_0\[73]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:newb_5\[310] = \ADC_IR:MODIN2_5\[311]
Removing Lhs of wire \ADC_IR:MODIN2_5\[311] = \ADC_IR:AMuxHw_2_Decoder_old_id_5\[62]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:newb_4\[312] = \ADC_IR:MODIN2_4\[313]
Removing Lhs of wire \ADC_IR:MODIN2_4\[313] = \ADC_IR:AMuxHw_2_Decoder_old_id_4\[64]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:newb_3\[314] = \ADC_IR:MODIN2_3\[315]
Removing Lhs of wire \ADC_IR:MODIN2_3\[315] = \ADC_IR:AMuxHw_2_Decoder_old_id_3\[66]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:newb_2\[316] = \ADC_IR:MODIN2_2\[317]
Removing Lhs of wire \ADC_IR:MODIN2_2\[317] = \ADC_IR:AMuxHw_2_Decoder_old_id_2\[68]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:newb_1\[318] = \ADC_IR:MODIN2_1\[319]
Removing Lhs of wire \ADC_IR:MODIN2_1\[319] = \ADC_IR:AMuxHw_2_Decoder_old_id_1\[70]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:newb_0\[320] = \ADC_IR:MODIN2_0\[321]
Removing Lhs of wire \ADC_IR:MODIN2_0\[321] = \ADC_IR:AMuxHw_2_Decoder_old_id_0\[72]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:dataa_5\[322] = \ADC_IR:ch_addr_5\[63]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:dataa_4\[323] = \ADC_IR:ch_addr_4\[65]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:dataa_3\[324] = \ADC_IR:ch_addr_3\[67]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:dataa_2\[325] = \ADC_IR:ch_addr_2\[69]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:dataa_1\[326] = \ADC_IR:ch_addr_1\[71]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:dataa_0\[327] = \ADC_IR:ch_addr_0\[73]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:datab_5\[328] = \ADC_IR:AMuxHw_2_Decoder_old_id_5\[62]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:datab_4\[329] = \ADC_IR:AMuxHw_2_Decoder_old_id_4\[64]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:datab_3\[330] = \ADC_IR:AMuxHw_2_Decoder_old_id_3\[66]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:datab_2\[331] = \ADC_IR:AMuxHw_2_Decoder_old_id_2\[68]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:datab_1\[332] = \ADC_IR:AMuxHw_2_Decoder_old_id_1\[70]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:datab_0\[333] = \ADC_IR:AMuxHw_2_Decoder_old_id_0\[72]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:a_5\[334] = \ADC_IR:ch_addr_5\[63]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:a_4\[335] = \ADC_IR:ch_addr_4\[65]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:a_3\[336] = \ADC_IR:ch_addr_3\[67]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:a_2\[337] = \ADC_IR:ch_addr_2\[69]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:a_1\[338] = \ADC_IR:ch_addr_1\[71]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:a_0\[339] = \ADC_IR:ch_addr_0\[73]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:b_5\[340] = \ADC_IR:AMuxHw_2_Decoder_old_id_5\[62]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:b_4\[341] = \ADC_IR:AMuxHw_2_Decoder_old_id_4\[64]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:b_3\[342] = \ADC_IR:AMuxHw_2_Decoder_old_id_3\[66]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:b_2\[343] = \ADC_IR:AMuxHw_2_Decoder_old_id_2\[68]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:b_1\[344] = \ADC_IR:AMuxHw_2_Decoder_old_id_1\[70]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:b_0\[345] = \ADC_IR:AMuxHw_2_Decoder_old_id_0\[72]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:aeqb_0\[352] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:eq_0\[353] = \ADC_IR:MODULE_1:g1:a0:gx:u0:xnor_array_0\[351]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:eqi_0\[359] = \ADC_IR:MODULE_1:g1:a0:gx:u0:eq_5\[358]
Removing Rhs of wire \ADC_IR:MODULE_1:g1:a0:xeq\[387] = \ADC_IR:MODULE_1:g1:a0:gx:u0:aeqb_1\[360]
Removing Lhs of wire tmpOE__LED5_net_0[399] = tmpOE__IR1_net_0[1]
Removing Lhs of wire tmpOE__LED4_net_0[405] = tmpOE__IR1_net_0[1]
Removing Lhs of wire tmpOE__LED3_net_0[411] = tmpOE__IR1_net_0[1]
Removing Lhs of wire tmpOE__LED2_net_0[417] = tmpOE__IR1_net_0[1]
Removing Lhs of wire tmpOE__LED1_net_0[423] = tmpOE__IR1_net_0[1]
Removing Lhs of wire tmpOE__SW1_net_0[429] = tmpOE__IR1_net_0[1]
Removing Lhs of wire tmpOE__SW2_net_0[435] = tmpOE__IR1_net_0[1]
Removing Lhs of wire tmpOE__IN3_net_0[441] = tmpOE__IR1_net_0[1]
Removing Rhs of wire Net_690[442] = \MotorControl:PWMUDB:pwm2_i_reg\[707]
Removing Lhs of wire tmpOE__IN2_net_0[448] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_6\[454] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_5\[455] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_4\[456] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_3\[457] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_2\[458] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_1\[459] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_0\[460] = tmpOE__IR1_net_0[1]
Removing Rhs of wire Net_411[481] = \TriggerReg:control_out_0\[493]
Removing Rhs of wire Net_411[481] = \TriggerReg:control_0\[516]
Removing Rhs of wire Net_430[490] = \TimerUS:Net_57\[523]
Removing Lhs of wire \TriggerReg:clk\[491] = zero[2]
Removing Lhs of wire \TriggerReg:rst\[492] = zero[2]
Removing Lhs of wire \TimerUS:Net_260\[519] = zero[2]
Removing Lhs of wire \TimerUS:Net_266\[520] = Net_402[526]
Removing Lhs of wire Net_402[526] = zero[2]
Removing Lhs of wire \mux_1:tmp__mux_1_reg\[527] = zero[2]
Removing Lhs of wire \selectUS:clk\[529] = zero[2]
Removing Lhs of wire \selectUS:rst\[530] = zero[2]
Removing Lhs of wire \statusEcho:status_0\[554] = zero[2]
Removing Lhs of wire \statusEcho:status_1\[555] = zero[2]
Removing Lhs of wire \statusEcho:status_2\[556] = zero[2]
Removing Lhs of wire \statusEcho:status_3\[557] = zero[2]
Removing Lhs of wire \statusEcho:status_4\[558] = zero[2]
Removing Lhs of wire \statusEcho:status_5\[559] = zero[2]
Removing Lhs of wire \statusEcho:status_6\[560] = zero[2]
Removing Lhs of wire \statusEcho:status_7\[561] = zero[2]
Removing Lhs of wire tmpOE__IN1_net_0[566] = tmpOE__IR1_net_0[1]
Removing Rhs of wire Net_691[567] = \MotorControl:PWMUDB:pwm1_i_reg\[705]
Removing Lhs of wire tmpOE__ENB_net_0[573] = tmpOE__IR1_net_0[1]
Removing Lhs of wire tmpOE__ENA_net_0[579] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \MotorControl:PWMUDB:ctrl_enable\[599] = \MotorControl:PWMUDB:control_7\[591]
Removing Lhs of wire \MotorControl:PWMUDB:hwCapture\[609] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:hwEnable\[610] = \MotorControl:PWMUDB:control_7\[591]
Removing Lhs of wire \MotorControl:PWMUDB:trig_out\[614] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \MotorControl:PWMUDB:runmode_enable\\R\[616] = zero[2]
Removing Lhs of wire Net_662[617] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:runmode_enable\\S\[618] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:final_enable\[619] = \MotorControl:PWMUDB:runmode_enable\[615]
Removing Lhs of wire \MotorControl:PWMUDB:ltch_kill_reg\\R\[623] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:ltch_kill_reg\\S\[624] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:min_kill_reg\\R\[625] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:min_kill_reg\\S\[626] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:final_kill\[629] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \MotorControl:PWMUDB:add_vi_vv_MODGEN_2_1\[633] = \MotorControl:PWMUDB:MODULE_2:g2:a0:s_1\[871]
Removing Lhs of wire \MotorControl:PWMUDB:add_vi_vv_MODGEN_2_0\[635] = \MotorControl:PWMUDB:MODULE_2:g2:a0:s_0\[872]
Removing Lhs of wire \MotorControl:PWMUDB:dith_count_1\\R\[636] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:dith_count_1\\S\[637] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:dith_count_0\\R\[638] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:dith_count_0\\S\[639] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:status_6\[642] = zero[2]
Removing Rhs of wire \MotorControl:PWMUDB:status_5\[643] = \MotorControl:PWMUDB:final_kill_reg\[658]
Removing Lhs of wire \MotorControl:PWMUDB:status_4\[644] = zero[2]
Removing Rhs of wire \MotorControl:PWMUDB:status_3\[645] = \MotorControl:PWMUDB:fifo_full\[665]
Removing Rhs of wire \MotorControl:PWMUDB:status_1\[647] = \MotorControl:PWMUDB:cmp2_status_reg\[657]
Removing Rhs of wire \MotorControl:PWMUDB:status_0\[648] = \MotorControl:PWMUDB:cmp1_status_reg\[656]
Removing Lhs of wire \MotorControl:PWMUDB:cmp1_status_reg\\R\[659] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:cmp1_status_reg\\S\[660] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:cmp2_status_reg\\R\[661] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:cmp2_status_reg\\S\[662] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:final_kill_reg\\R\[663] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:final_kill_reg\\S\[664] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:cs_addr_2\[666] = \MotorControl:PWMUDB:tc_i\[621]
Removing Lhs of wire \MotorControl:PWMUDB:cs_addr_1\[667] = \MotorControl:PWMUDB:runmode_enable\[615]
Removing Lhs of wire \MotorControl:PWMUDB:cs_addr_0\[668] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:compare1\[701] = \MotorControl:PWMUDB:cmp1_less\[672]
Removing Lhs of wire \MotorControl:PWMUDB:compare2\[702] = \MotorControl:PWMUDB:cmp2_less\[675]
Removing Lhs of wire \MotorControl:PWMUDB:pwm_temp\[712] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_23\[753] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_22\[754] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_21\[755] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_20\[756] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_19\[757] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_18\[758] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_17\[759] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_16\[760] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_15\[761] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_14\[762] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_13\[763] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_12\[764] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_11\[765] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_10\[766] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_9\[767] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_8\[768] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_7\[769] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_6\[770] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_5\[771] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_4\[772] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_3\[773] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_2\[774] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_1\[775] = \MotorControl:PWMUDB:MODIN3_1\[776]
Removing Lhs of wire \MotorControl:PWMUDB:MODIN3_1\[776] = \MotorControl:PWMUDB:dith_count_1\[632]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_0\[777] = \MotorControl:PWMUDB:MODIN3_0\[778]
Removing Lhs of wire \MotorControl:PWMUDB:MODIN3_0\[778] = \MotorControl:PWMUDB:dith_count_0\[634]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\[910] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\[911] = tmpOE__IR1_net_0[1]
Removing Lhs of wire tmpOE__IN4_net_0[919] = tmpOE__IR1_net_0[1]
Removing Rhs of wire Net_666[929] = \Debouncer_1:DEBOUNCER[0]:d_sync_0\[927]
Removing Lhs of wire \BleVDAC:Net_83\[936] = zero[2]
Removing Lhs of wire \BleVDAC:Net_81\[937] = zero[2]
Removing Lhs of wire \BleVDAC:Net_82\[938] = zero[2]
Removing Lhs of wire \BleUart:Net_61\[948] = \BleUart:Net_9\[947]
Removing Lhs of wire Net_784[952] = zero[2]
Removing Lhs of wire \BleUart:BUART:tx_hd_send_break\[953] = zero[2]
Removing Lhs of wire \BleUart:BUART:HalfDuplexSend\[954] = zero[2]
Removing Lhs of wire \BleUart:BUART:FinalParityType_1\[955] = zero[2]
Removing Lhs of wire \BleUart:BUART:FinalParityType_0\[956] = zero[2]
Removing Lhs of wire \BleUart:BUART:FinalAddrMode_2\[957] = zero[2]
Removing Lhs of wire \BleUart:BUART:FinalAddrMode_1\[958] = zero[2]
Removing Lhs of wire \BleUart:BUART:FinalAddrMode_0\[959] = zero[2]
Removing Lhs of wire \BleUart:BUART:tx_ctrl_mark\[960] = zero[2]
Removing Rhs of wire Net_786[965] = \BleUart:BUART:tx_interrupt_out\[966]
Removing Rhs of wire Net_893[967] = \BleUart:BUART:rx_interrupt_out\[968]
Removing Rhs of wire \BleUart:BUART:tx_bitclk_enable_pre\[972] = \BleUart:BUART:tx_bitclk_dp\[1008]
Removing Lhs of wire \BleUart:BUART:tx_counter_tc\[1018] = \BleUart:BUART:tx_counter_dp\[1009]
Removing Lhs of wire \BleUart:BUART:tx_status_6\[1019] = zero[2]
Removing Lhs of wire \BleUart:BUART:tx_status_5\[1020] = zero[2]
Removing Lhs of wire \BleUart:BUART:tx_status_4\[1021] = zero[2]
Removing Lhs of wire \BleUart:BUART:tx_status_1\[1023] = \BleUart:BUART:tx_fifo_empty\[986]
Removing Lhs of wire \BleUart:BUART:tx_status_3\[1025] = \BleUart:BUART:tx_fifo_notfull\[985]
Removing Lhs of wire \BleUart:BUART:rx_count7_bit8_wire\[1085] = zero[2]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:add_vv_vv_MODGEN_3_1\[1093] = \BleUart:BUART:sRX:s23Poll:MODULE_3:g2:a0:s_1\[1104]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:add_vv_vv_MODGEN_3_0\[1095] = \BleUart:BUART:sRX:s23Poll:MODULE_3:g2:a0:s_0\[1105]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_4\[1096] = \BleUart:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\[1121]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_5\[1097] = \BleUart:BUART:sRX:s23Poll:MODULE_5:g2:a0:lta_0\[1135]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:MODULE_3:g2:a0:a_1\[1098] = \BleUart:BUART:sRX:s23Poll:MODIN4_1\[1099]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:MODIN4_1\[1099] = \BleUart:BUART:pollcount_1\[1091]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:MODULE_3:g2:a0:a_0\[1100] = \BleUart:BUART:sRX:s23Poll:MODIN4_0\[1101]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:MODIN4_0\[1101] = \BleUart:BUART:pollcount_0\[1094]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_0\[1107] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_0\[1108] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_1\[1109] = \BleUart:BUART:pollcount_1\[1091]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:MODIN5_1\[1110] = \BleUart:BUART:pollcount_1\[1091]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_0\[1111] = \BleUart:BUART:pollcount_0\[1094]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:MODIN5_0\[1112] = \BleUart:BUART:pollcount_0\[1094]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\[1113] = zero[2]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\[1114] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_1\[1115] = \BleUart:BUART:pollcount_1\[1091]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_0\[1116] = \BleUart:BUART:pollcount_0\[1094]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_1\[1117] = zero[2]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_0\[1118] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:MODULE_5:g2:a0:newa_1\[1123] = \BleUart:BUART:pollcount_1\[1091]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:MODIN6_1\[1124] = \BleUart:BUART:pollcount_1\[1091]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:MODULE_5:g2:a0:newa_0\[1125] = \BleUart:BUART:pollcount_0\[1094]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:MODIN6_0\[1126] = \BleUart:BUART:pollcount_0\[1094]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:MODULE_5:g2:a0:newb_1\[1127] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:MODULE_5:g2:a0:newb_0\[1128] = zero[2]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:MODULE_5:g2:a0:dataa_1\[1129] = \BleUart:BUART:pollcount_1\[1091]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:MODULE_5:g2:a0:dataa_0\[1130] = \BleUart:BUART:pollcount_0\[1094]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:MODULE_5:g2:a0:datab_1\[1131] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \BleUart:BUART:sRX:s23Poll:MODULE_5:g2:a0:datab_0\[1132] = zero[2]
Removing Lhs of wire \BleUart:BUART:rx_status_1\[1139] = zero[2]
Removing Rhs of wire \BleUart:BUART:rx_status_2\[1140] = \BleUart:BUART:rx_parity_error_status\[1141]
Removing Rhs of wire \BleUart:BUART:rx_status_3\[1142] = \BleUart:BUART:rx_stop_bit_error\[1143]
Removing Lhs of wire \BleUart:BUART:sRX:cmp_vv_vv_MODGEN_6\[1153] = \BleUart:BUART:sRX:MODULE_6:g2:a0:lta_0\[1202]
Removing Lhs of wire \BleUart:BUART:sRX:cmp_vv_vv_MODGEN_7\[1157] = \BleUart:BUART:sRX:MODULE_7:g1:a0:xneq\[1224]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:newa_6\[1158] = zero[2]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:newa_5\[1159] = zero[2]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:newa_4\[1160] = zero[2]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:newa_3\[1161] = \BleUart:BUART:sRX:MODIN7_6\[1162]
Removing Lhs of wire \BleUart:BUART:sRX:MODIN7_6\[1162] = \BleUart:BUART:rx_count_6\[1080]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:newa_2\[1163] = \BleUart:BUART:sRX:MODIN7_5\[1164]
Removing Lhs of wire \BleUart:BUART:sRX:MODIN7_5\[1164] = \BleUart:BUART:rx_count_5\[1081]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:newa_1\[1165] = \BleUart:BUART:sRX:MODIN7_4\[1166]
Removing Lhs of wire \BleUart:BUART:sRX:MODIN7_4\[1166] = \BleUart:BUART:rx_count_4\[1082]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:newa_0\[1167] = \BleUart:BUART:sRX:MODIN7_3\[1168]
Removing Lhs of wire \BleUart:BUART:sRX:MODIN7_3\[1168] = \BleUart:BUART:rx_count_3\[1083]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:newb_6\[1169] = zero[2]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:newb_5\[1170] = zero[2]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:newb_4\[1171] = zero[2]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:newb_3\[1172] = zero[2]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:newb_2\[1173] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:newb_1\[1174] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:newb_0\[1175] = zero[2]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:dataa_6\[1176] = zero[2]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:dataa_5\[1177] = zero[2]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:dataa_4\[1178] = zero[2]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:dataa_3\[1179] = \BleUart:BUART:rx_count_6\[1080]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:dataa_2\[1180] = \BleUart:BUART:rx_count_5\[1081]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:dataa_1\[1181] = \BleUart:BUART:rx_count_4\[1082]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:dataa_0\[1182] = \BleUart:BUART:rx_count_3\[1083]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:datab_6\[1183] = zero[2]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:datab_5\[1184] = zero[2]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:datab_4\[1185] = zero[2]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:datab_3\[1186] = zero[2]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:datab_2\[1187] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:datab_1\[1188] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_6:g2:a0:datab_0\[1189] = zero[2]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_7:g1:a0:newa_0\[1204] = \BleUart:BUART:rx_postpoll\[1039]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_7:g1:a0:newb_0\[1205] = \BleUart:BUART:rx_parity_bit\[1156]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_7:g1:a0:dataa_0\[1206] = \BleUart:BUART:rx_postpoll\[1039]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_7:g1:a0:datab_0\[1207] = \BleUart:BUART:rx_parity_bit\[1156]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_7:g1:a0:gx:u0:a_0\[1208] = \BleUart:BUART:rx_postpoll\[1039]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_7:g1:a0:gx:u0:b_0\[1209] = \BleUart:BUART:rx_parity_bit\[1156]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_7:g1:a0:gx:u0:aeqb_0\[1211] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_7:g1:a0:gx:u0:eq_0\[1212] = \BleUart:BUART:sRX:MODULE_7:g1:a0:gx:u0:xnor_array_0\[1210]
Removing Lhs of wire \BleUart:BUART:sRX:MODULE_7:g1:a0:gx:u0:eqi_0\[1213] = \BleUart:BUART:sRX:MODULE_7:g1:a0:gx:u0:xnor_array_0\[1210]
Removing Lhs of wire tmpOE__BleRx_net_0[1235] = tmpOE__IR1_net_0[1]
Removing Lhs of wire tmpOE__BleTx_net_0[1240] = tmpOE__IR1_net_0[1]
Removing Lhs of wire tmpOE__BleKey_net_0[1246] = tmpOE__IR1_net_0[1]
Removing Lhs of wire tmpOE__BleState_net_0[1251] = tmpOE__IR1_net_0[1]
Removing Lhs of wire Net_12[1259] = zero[2]
Removing Lhs of wire \sendBleDataTimer:Net_260\[1261] = zero[2]
Removing Lhs of wire \sendBleDataTimer:Net_266\[1262] = tmpOE__IR1_net_0[1]
Removing Rhs of wire Net_1144[1267] = \sendBleDataTimer:Net_51\[1263]
Removing Lhs of wire \sendBleDataTimer:Net_102\[1268] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \ADC_IR:AMuxHw_2_Decoder_old_id_5\\D\[1270] = \ADC_IR:ch_addr_5\[63]
Removing Lhs of wire \ADC_IR:AMuxHw_2_Decoder_old_id_4\\D\[1271] = \ADC_IR:ch_addr_4\[65]
Removing Lhs of wire \ADC_IR:AMuxHw_2_Decoder_old_id_3\\D\[1272] = \ADC_IR:ch_addr_3\[67]
Removing Lhs of wire \ADC_IR:AMuxHw_2_Decoder_old_id_2\\D\[1273] = \ADC_IR:ch_addr_2\[69]
Removing Lhs of wire \ADC_IR:AMuxHw_2_Decoder_old_id_1\\D\[1274] = \ADC_IR:ch_addr_1\[71]
Removing Lhs of wire \ADC_IR:AMuxHw_2_Decoder_old_id_0\\D\[1275] = \ADC_IR:ch_addr_0\[73]
Removing Lhs of wire \ADC_IR:bSAR_SEQ:nrq_edge_detect_reg\\D\[1340] = \ADC_IR:bSAR_SEQ:nrq_edge_detect\[274]
Removing Lhs of wire \ADC_IR:bSAR_SEQ:nrq_reg\\D\[1342] = \ADC_IR:bSAR_SEQ:bus_clk_nrq_reg\[271]
Removing Lhs of wire \MotorControl:PWMUDB:min_kill_reg\\D\[1343] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \MotorControl:PWMUDB:prevCapture\\D\[1344] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:trig_last\\D\[1345] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:ltch_kill_reg\\D\[1348] = tmpOE__IR1_net_0[1]
Removing Lhs of wire \MotorControl:PWMUDB:prevCompare1\\D\[1351] = \MotorControl:PWMUDB:cmp1\[651]
Removing Lhs of wire \MotorControl:PWMUDB:prevCompare2\\D\[1352] = \MotorControl:PWMUDB:cmp2\[654]
Removing Lhs of wire \MotorControl:PWMUDB:cmp1_status_reg\\D\[1353] = \MotorControl:PWMUDB:cmp1_status\[652]
Removing Lhs of wire \MotorControl:PWMUDB:cmp2_status_reg\\D\[1354] = \MotorControl:PWMUDB:cmp2_status\[655]
Removing Lhs of wire \MotorControl:PWMUDB:pwm_i_reg\\D\[1356] = \MotorControl:PWMUDB:pwm_i\[704]
Removing Lhs of wire \MotorControl:PWMUDB:pwm1_i_reg\\D\[1357] = \MotorControl:PWMUDB:pwm1_i\[706]
Removing Lhs of wire \MotorControl:PWMUDB:pwm2_i_reg\\D\[1358] = \MotorControl:PWMUDB:pwm2_i\[708]
Removing Lhs of wire \MotorControl:PWMUDB:tc_i_reg\\D\[1359] = \MotorControl:PWMUDB:status_2\[646]
Removing Lhs of wire \Debouncer_1:DEBOUNCER[0]:d_sync_0\\D\[1360] = Net_664[436]
Removing Lhs of wire \Debouncer_1:DEBOUNCER[0]:d_sync_1\\D\[1361] = Net_666[929]
Removing Lhs of wire Net_667D[1363] = zero[2]
Removing Lhs of wire Net_668D[1364] = zero[2]
Removing Lhs of wire \BleUart:BUART:reset_reg\\D\[1365] = zero[2]
Removing Lhs of wire Net_782D[1370] = zero[2]
Removing Lhs of wire \BleUart:BUART:rx_bitclk\\D\[1380] = \BleUart:BUART:rx_bitclk_pre\[1074]
Removing Lhs of wire \BleUart:BUART:rx_parity_error_pre\\D\[1389] = \BleUart:BUART:rx_parity_error_pre\[1151]
Removing Lhs of wire \BleUart:BUART:rx_break_status\\D\[1390] = zero[2]

------------------------------------------------------
Aliased 0 equations, 334 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Substituting virtuals - pass 1:

Note:  Expanding virtual equation for 'tmpOE__IR1_net_0' (cost = 0):
tmpOE__IR1_net_0 <=  ('1') ;

Note:  Expanding virtual equation for 'zero' (cost = 0):
zero <=  ('0') ;

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\ADC_IR:MODULE_1:g1:a0:gx:u0:xnor_array_5\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\)
	OR (\ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\ADC_IR:MODULE_1:g1:a0:gx:u0:xnor_array_4\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\)
	OR (\ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\ADC_IR:MODULE_1:g1:a0:gx:u0:xnor_array_3\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\)
	OR (\ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\ADC_IR:MODULE_1:g1:a0:gx:u0:xnor_array_2\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\)
	OR (\ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\ADC_IR:MODULE_1:g1:a0:gx:u0:xnor_array_1\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\)
	OR (\ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\ADC_IR:MODULE_1:g1:a0:gx:u0:xnor_array_0\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\)
	OR (\ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:eq_1\' (cost = 8):
\ADC_IR:MODULE_1:g1:a0:gx:u0:eq_1\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (\ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:eq_2\' (cost = 16):
\ADC_IR:MODULE_1:g1:a0:gx:u0:eq_2\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (\ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:eq_3\' (cost = 32):
\ADC_IR:MODULE_1:g1:a0:gx:u0:eq_3\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (\ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:eq_4\' (cost = 64):
\ADC_IR:MODULE_1:g1:a0:gx:u0:eq_4\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (\ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:eq_5\' (cost = 64):
\ADC_IR:MODULE_1:g1:a0:gx:u0:eq_5\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (\ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:lt_3\' (cost = 2):
\ADC_IR:MODULE_1:g1:a0:gx:u0:lt_3\ <= ((not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:gt_3\' (cost = 2):
\ADC_IR:MODULE_1:g1:a0:gx:u0:gt_3\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:lt_4\' (cost = 6):
\ADC_IR:MODULE_1:g1:a0:gx:u0:lt_4\ <= ((not \ADC_IR:ch_addr_4\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:gt_4\' (cost = 6):
\ADC_IR:MODULE_1:g1:a0:gx:u0:gt_4\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_4\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:lt_0\' (cost = 2):
\ADC_IR:MODULE_1:g1:a0:gx:u0:lt_0\ <= ((not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:gt_0\' (cost = 2):
\ADC_IR:MODULE_1:g1:a0:gx:u0:gt_0\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:lt_1\' (cost = 6):
\ADC_IR:MODULE_1:g1:a0:gx:u0:lt_1\ <= ((not \ADC_IR:ch_addr_1\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:gt_1\' (cost = 6):
\ADC_IR:MODULE_1:g1:a0:gx:u0:gt_1\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_1\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\));

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:cmp1\' (cost = 0):
\MotorControl:PWMUDB:cmp1\ <= (\MotorControl:PWMUDB:cmp1_less\);

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:cmp2\' (cost = 0):
\MotorControl:PWMUDB:cmp2\ <= (\MotorControl:PWMUDB:cmp2_less\);

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\MotorControl:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:s_0\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:s_0\ <= (not \MotorControl:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_17\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_17\ <=  ('0') ;

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_9\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_9\ <=  ('0') ;

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\MotorControl:PWMUDB:dith_count_1\ and \MotorControl:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\BleUart:BUART:rx_addressmatch\' (cost = 0):
\BleUart:BUART:rx_addressmatch\ <= (\BleUart:BUART:rx_addressmatch2\
	OR \BleUart:BUART:rx_addressmatch1\);

Note:  Expanding virtual equation for '\BleUart:BUART:rx_bitclk_pre\' (cost = 1):
\BleUart:BUART:rx_bitclk_pre\ <= ((not \BleUart:BUART:rx_count_2\ and not \BleUart:BUART:rx_count_1\ and not \BleUart:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\BleUart:BUART:rx_bitclk_pre16x\' (cost = 0):
\BleUart:BUART:rx_bitclk_pre16x\ <= ((not \BleUart:BUART:rx_count_2\ and \BleUart:BUART:rx_count_1\ and \BleUart:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\BleUart:BUART:rx_poll_bit1\' (cost = 1):
\BleUart:BUART:rx_poll_bit1\ <= ((not \BleUart:BUART:rx_count_2\ and not \BleUart:BUART:rx_count_1\ and \BleUart:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\BleUart:BUART:rx_poll_bit2\' (cost = 1):
\BleUart:BUART:rx_poll_bit2\ <= ((not \BleUart:BUART:rx_count_2\ and not \BleUart:BUART:rx_count_1\ and not \BleUart:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\BleUart:BUART:pollingrange\' (cost = 4):
\BleUart:BUART:pollingrange\ <= ((not \BleUart:BUART:rx_count_2\ and not \BleUart:BUART:rx_count_1\));

Note:  Expanding virtual equation for '\BleUart:BUART:sRX:s23Poll:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\BleUart:BUART:sRX:s23Poll:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\BleUart:BUART:pollcount_0\);

Note:  Expanding virtual equation for '\BleUart:BUART:sRX:s23Poll:MODULE_3:g2:a0:s_0\' (cost = 0):
\BleUart:BUART:sRX:s23Poll:MODULE_3:g2:a0:s_0\ <= (not \BleUart:BUART:pollcount_0\);

Note:  Expanding virtual equation for '\BleUart:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\' (cost = 0):
\BleUart:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\BleUart:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\' (cost = 0):
\BleUart:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\ <= (\BleUart:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\BleUart:BUART:sRX:s23Poll:MODULE_5:g2:a0:lta_1\' (cost = 0):
\BleUart:BUART:sRX:s23Poll:MODULE_5:g2:a0:lta_1\ <= (not \BleUart:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\BleUart:BUART:sRX:s23Poll:MODULE_5:g2:a0:gta_1\' (cost = 0):
\BleUart:BUART:sRX:s23Poll:MODULE_5:g2:a0:gta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\BleUart:BUART:sRX:MODULE_6:g2:a0:lta_6\' (cost = 0):
\BleUart:BUART:sRX:MODULE_6:g2:a0:lta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\BleUart:BUART:sRX:MODULE_6:g2:a0:gta_6\' (cost = 0):
\BleUart:BUART:sRX:MODULE_6:g2:a0:gta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\BleUart:BUART:sRX:MODULE_6:g2:a0:lta_5\' (cost = 0):
\BleUart:BUART:sRX:MODULE_6:g2:a0:lta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\BleUart:BUART:sRX:MODULE_6:g2:a0:gta_5\' (cost = 0):
\BleUart:BUART:sRX:MODULE_6:g2:a0:gta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\BleUart:BUART:sRX:MODULE_6:g2:a0:lta_4\' (cost = 0):
\BleUart:BUART:sRX:MODULE_6:g2:a0:lta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\BleUart:BUART:sRX:MODULE_6:g2:a0:gta_4\' (cost = 0):
\BleUart:BUART:sRX:MODULE_6:g2:a0:gta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\BleUart:BUART:sRX:MODULE_6:g2:a0:lta_3\' (cost = 0):
\BleUart:BUART:sRX:MODULE_6:g2:a0:lta_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\BleUart:BUART:sRX:MODULE_6:g2:a0:gta_3\' (cost = 0):
\BleUart:BUART:sRX:MODULE_6:g2:a0:gta_3\ <= (\BleUart:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\BleUart:BUART:sRX:MODULE_6:g2:a0:lta_2\' (cost = 1):
\BleUart:BUART:sRX:MODULE_6:g2:a0:lta_2\ <= ((not \BleUart:BUART:rx_count_6\ and not \BleUart:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\BleUart:BUART:sRX:MODULE_6:g2:a0:gta_2\' (cost = 0):
\BleUart:BUART:sRX:MODULE_6:g2:a0:gta_2\ <= (\BleUart:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\BleUart:BUART:sRX:MODULE_6:g2:a0:lta_1\' (cost = 2):
\BleUart:BUART:sRX:MODULE_6:g2:a0:lta_1\ <= ((not \BleUart:BUART:rx_count_6\ and not \BleUart:BUART:rx_count_4\)
	OR (not \BleUart:BUART:rx_count_6\ and not \BleUart:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\BleUart:BUART:sRX:MODULE_6:g2:a0:gta_1\' (cost = 0):
\BleUart:BUART:sRX:MODULE_6:g2:a0:gta_1\ <= (\BleUart:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\BleUart:BUART:sRX:MODULE_6:g2:a0:lta_0\' (cost = 8):
\BleUart:BUART:sRX:MODULE_6:g2:a0:lta_0\ <= ((not \BleUart:BUART:rx_count_6\ and not \BleUart:BUART:rx_count_4\)
	OR (not \BleUart:BUART:rx_count_6\ and not \BleUart:BUART:rx_count_5\));


Substituting virtuals - pass 2:

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:xeq\' (cost = 64):
\ADC_IR:MODULE_1:g1:a0:xeq\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (\ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\));

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:s_1\' (cost = 2):
\MotorControl:PWMUDB:MODULE_2:g2:a0:s_1\ <= ((not \MotorControl:PWMUDB:dith_count_0\ and \MotorControl:PWMUDB:dith_count_1\)
	OR (not \MotorControl:PWMUDB:dith_count_1\ and \MotorControl:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_18\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_18\ <=  ('0') ;

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_10\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_10\ <=  ('0') ;

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\BleUart:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\' (cost = 4):
\BleUart:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\ <= ((not \BleUart:BUART:pollcount_1\ and not \BleUart:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\BleUart:BUART:sRX:s23Poll:MODULE_5:g2:a0:lta_0\' (cost = 0):
\BleUart:BUART:sRX:s23Poll:MODULE_5:g2:a0:lta_0\ <= (not \BleUart:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\BleUart:BUART:sRX:s23Poll:MODULE_3:g2:a0:s_1\' (cost = 2):
\BleUart:BUART:sRX:s23Poll:MODULE_3:g2:a0:s_1\ <= ((not \BleUart:BUART:pollcount_0\ and \BleUart:BUART:pollcount_1\)
	OR (not \BleUart:BUART:pollcount_1\ and \BleUart:BUART:pollcount_0\));


Substituting virtuals - pass 3:

Note:  Virtual signal \ADC_IR:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\ADC_IR:AMuxHw_2_Decoder_is_active\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (\ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\));

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_19\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_19\ <=  ('0') ;

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_11\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_11\ <=  ('0') ;

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_4\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\BleUart:BUART:rx_postpoll\' (cost = 72):
\BleUart:BUART:rx_postpoll\ <= (\BleUart:BUART:pollcount_1\
	OR (Net_785 and \BleUart:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\BleUart:BUART:sRX:MODULE_7:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\BleUart:BUART:sRX:MODULE_7:g1:a0:gx:u0:xnor_array_0\ <= ((not \BleUart:BUART:pollcount_1\ and not Net_785 and not \BleUart:BUART:rx_parity_bit\)
	OR (not \BleUart:BUART:pollcount_1\ and not \BleUart:BUART:pollcount_0\ and not \BleUart:BUART:rx_parity_bit\)
	OR (\BleUart:BUART:pollcount_1\ and \BleUart:BUART:rx_parity_bit\)
	OR (Net_785 and \BleUart:BUART:pollcount_0\ and \BleUart:BUART:rx_parity_bit\));

Note:  Expanding virtual equation for '\BleUart:BUART:sRX:MODULE_7:g1:a0:gx:u0:aeqb_1\' (cost = 4):
\BleUart:BUART:sRX:MODULE_7:g1:a0:gx:u0:aeqb_1\ <= ((not \BleUart:BUART:pollcount_1\ and not Net_785 and not \BleUart:BUART:rx_parity_bit\)
	OR (not \BleUart:BUART:pollcount_1\ and not \BleUart:BUART:pollcount_0\ and not \BleUart:BUART:rx_parity_bit\)
	OR (\BleUart:BUART:pollcount_1\ and \BleUart:BUART:rx_parity_bit\)
	OR (Net_785 and \BleUart:BUART:pollcount_0\ and \BleUart:BUART:rx_parity_bit\));


Substituting virtuals - pass 4:

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_20\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_20\ <=  ('0') ;

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_12\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_12\ <=  ('0') ;

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_5\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_5\ <=  ('0') ;


Substituting virtuals - pass 5:

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_21\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_21\ <=  ('0') ;

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_13\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_13\ <=  ('0') ;

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_6\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_6\ <=  ('0') ;


Substituting virtuals - pass 6:

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_22\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_22\ <=  ('0') ;

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_14\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_14\ <=  ('0') ;

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_7\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_7\ <=  ('0') ;


Substituting virtuals - pass 7:

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_23\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_23\ <=  ('0') ;

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_15\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_15\ <=  ('0') ;


Substituting virtuals - pass 8:


----------------------------------------------------------
Circuit simplification results:

	Expanded 78 signals.
	Turned 1 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \MotorControl:PWMUDB:final_capture\ to zero
Aliasing \MotorControl:PWMUDB:pwm_i\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_24\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_16\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_8\ to zero
Aliasing \BleUart:BUART:rx_status_0\ to zero
Aliasing \BleUart:BUART:rx_status_6\ to zero
Aliasing \MotorControl:PWMUDB:final_kill_reg\\D\ to zero
Aliasing \BleUart:BUART:rx_markspace_status\\D\ to zero
Aliasing \BleUart:BUART:rx_parity_error_status\\D\ to zero
Aliasing \BleUart:BUART:rx_addr_match_status\\D\ to zero
Removing Lhs of wire \MotorControl:PWMUDB:final_capture\[670] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:pwm_i\[704] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_24\[881] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_16\[891] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_8\[901] = zero[2]
Removing Rhs of wire \BleUart:BUART:rx_bitclk_enable\[1038] = \BleUart:BUART:rx_bitclk\[1086]
Removing Lhs of wire \BleUart:BUART:rx_status_0\[1137] = zero[2]
Removing Lhs of wire \BleUart:BUART:rx_status_6\[1146] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:runmode_enable\\D\[1346] = \MotorControl:PWMUDB:control_7\[591]
Removing Lhs of wire \MotorControl:PWMUDB:final_kill_reg\\D\[1355] = zero[2]
Removing Lhs of wire \BleUart:BUART:tx_ctrl_mark_last\\D\[1372] = \BleUart:BUART:tx_ctrl_mark_last\[1029]
Removing Lhs of wire \BleUart:BUART:rx_markspace_status\\D\[1384] = zero[2]
Removing Lhs of wire \BleUart:BUART:rx_parity_error_status\\D\[1385] = zero[2]
Removing Lhs of wire \BleUart:BUART:rx_addr_match_status\\D\[1387] = zero[2]
Removing Lhs of wire \BleUart:BUART:rx_markspace_pre\\D\[1388] = \BleUart:BUART:rx_markspace_pre\[1150]
Removing Lhs of wire \BleUart:BUART:rx_parity_bit\\D\[1393] = \BleUart:BUART:rx_parity_bit\[1156]

------------------------------------------------------
Aliased 0 equations, 16 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Eliminating unused logic - pass 1:

Note:  Deleted unused equation:
\BleUart:BUART:sRX:MODULE_7:g1:a0:xneq\ <= ((not \BleUart:BUART:rx_parity_bit\ and Net_785 and \BleUart:BUART:pollcount_0\)
	OR (not \BleUart:BUART:pollcount_1\ and not \BleUart:BUART:pollcount_0\ and \BleUart:BUART:rx_parity_bit\)
	OR (not \BleUart:BUART:pollcount_1\ and not Net_785 and \BleUart:BUART:rx_parity_bit\)
	OR (not \BleUart:BUART:rx_parity_bit\ and \BleUart:BUART:pollcount_1\));


Eliminating unused logic - pass 2:


Substituting virtuals - pass 1:


----------------------------------------------------------
Circuit simplification results:

	Expanded 0 signals.
	Turned 0 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

topld:  No errors.

CYPRESS_DIR    : C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp
Warp Program   : C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\bin\warp.exe
Warp Arguments : -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Software\PSoc\Roadster\RoadsterRACEMODE\Roadster1.0.cydsn\Roadster1.0.cyprj -dcpsoc3 Roadster1.0.v -verilog
</CYPRESSTAG>
Warp synthesis phase: Elapsed time ==> 1s.778ms
<CYPRESSTAG name="Fitter results...">
<CYPRESSTAG name="Fitter startup details...">
cyp3fit: V4.1.0.3210, Family: PSoC3, Started at: Saturday, 21 April 2018 15:39:32
Options: -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Software\PSoc\Roadster\RoadsterRACEMODE\Roadster1.0.cydsn\Roadster1.0.cyprj -d CY8C5888LTI-LP097 Roadster1.0.v -verilog
</CYPRESSTAG>
<CYPRESSTAG name="Design parsing">
Design parsing phase: Elapsed time ==> 0s.035ms
</CYPRESSTAG>
<CYPRESSTAG name="Tech Mapping">
<CYPRESSTAG name="Initial Mapping" icon="FILE_RPT_TECHM">
    Removed wire end \ADC_IR:MODULE_1:g1:a0:gx:u0:lti_1\ kept \ADC_IR:MODULE_1:g1:a0:gx:u0:lt_5\
    Removed wire end \ADC_IR:MODULE_1:g1:a0:gx:u0:gti_1\ kept \ADC_IR:MODULE_1:g1:a0:gx:u0:gt_5\
    Removed wire end \ADC_IR:MODULE_1:g1:a0:gx:u0:lti_0\ kept \ADC_IR:MODULE_1:g1:a0:gx:u0:lt_2\
    Removed wire end \ADC_IR:MODULE_1:g1:a0:gx:u0:gti_0\ kept \ADC_IR:MODULE_1:g1:a0:gx:u0:gt_2\
    Removed wire end \MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_24\ kept zero
    Removed wire end \MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_16\ kept zero
    Removed wire end \MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_8\ kept zero
    Converted constant MacroCell: \MotorControl:PWMUDB:prevCapture\ from registered to combinatorial
    Converted constant MacroCell: \MotorControl:PWMUDB:trig_last\ from registered to combinatorial
    Converted constant MacroCell: \MotorControl:PWMUDB:status_5\ from registered to combinatorial
    Converted constant MacroCell: \MotorControl:PWMUDB:pwm_i_reg\ from registered to combinatorial
    Converted constant MacroCell: Net_667 from registered to combinatorial
    Converted constant MacroCell: Net_668 from registered to combinatorial
    Converted constant MacroCell: \BleUart:BUART:reset_reg\ from registered to combinatorial
    Converted constant MacroCell: Net_782 from registered to combinatorial
    Converted constant MacroCell: \BleUart:BUART:rx_markspace_status\ from registered to combinatorial
    Converted constant MacroCell: \BleUart:BUART:rx_status_2\ from registered to combinatorial
    Converted constant MacroCell: \BleUart:BUART:rx_addr_match_status\ from registered to combinatorial
    Converted constant MacroCell: \BleUart:BUART:rx_break_status\ from registered to combinatorial
Assigning clock ADC_IR_BusClock to clock BUS_CLK because it is a pass-through
Assigning clock timer_clock to clock BUS_CLK because it is a pass-through
Assigning clock Clock_2 to clock BUS_CLK because it is a pass-through
<CYPRESSTAG name="Global Clock Selection" icon="FILE_RPT_TECHM">
    Digital Clock 0: Automatic-assigning  clock 'ADC_IR_IntClock'. Fanout=73, Signal=\ADC_IR:clock\
    Digital Clock 1: Automatic-assigning  clock 'BleUart_IntClock'. Fanout=1, Signal=\BleUart:Net_9\
    Digital Clock 2: Automatic-assigning  clock 'timer_clock_1'. Fanout=1, Signal=Net_10
    Digital Clock 3: Automatic-assigning  clock 'Clock_1'. Fanout=1, Signal=Net_242
    Digital Clock 4: Automatic-assigning  clock 'Clock_3'. Fanout=1, Signal=Net_665
</CYPRESSTAG>

Removing unused cells resulting from optimization
    Removed unused cell/equation '\selectUS:Sync:ctrl_reg\:controlcell'
Done removing unused cells.
<CYPRESSTAG name="UDB Clock/Enable Remapping Results">
    UDB Clk/Enable \ADC_IR:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: ADC_IR_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \ADC_IR:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: ADC_IR_IntClock, EnableOut: \ADC_IR:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \ADC_IR:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: ADC_IR_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ADC_IR_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \MotorControl:PWMUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: Clock_1 was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Clock_1, EnableOut: Constant 1
    UDB Clk/Enable \Debouncer_1:ClkSync\: with output requested to be synchronous
        ClockIn: Clock_3 was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Clock_3, EnableOut: Constant 1
    UDB Clk/Enable \BleUart:BUART:ClkSync\: with output requested to be synchronous
        ClockIn: BleUart_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: BleUart_IntClock, EnableOut: Constant 1
</CYPRESSTAG>
Info: plm.M0038: The pin named IR1(0) at location P0[0] prevents usage of special purposes: OpAmp:out. (App=cydsfit)
Info: plm.M0038: The pin named IR2(0) at location P0[1] prevents usage of special purposes: OpAmp:out. (App=cydsfit)
Info: plm.M0038: The pin named SW2(0) at location P3[6] prevents usage of special purposes: OpAmp:out. (App=cydsfit)

Removing unused cells resulting from optimization
    Removed unused cell/equation '\statusEcho:sts:sts_reg\:statuscell'
Done removing unused cells.
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Duplicate Macrocell detection">

Removing duplicate macrocells
    Removing \BleUart:BUART:rx_parity_bit\, Duplicate of \BleUart:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\BleUart:BUART:rx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \BleUart:BUART:rx_parity_bit\ (fanout=0)

    Removing \BleUart:BUART:rx_address_detected\, Duplicate of \BleUart:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\BleUart:BUART:rx_address_detected\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \BleUart:BUART:rx_address_detected\ (fanout=0)

    Removing \BleUart:BUART:rx_parity_error_pre\, Duplicate of \BleUart:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\BleUart:BUART:rx_parity_error_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \BleUart:BUART:rx_parity_error_pre\ (fanout=0)

    Removing \BleUart:BUART:rx_markspace_pre\, Duplicate of \BleUart:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\BleUart:BUART:rx_markspace_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \BleUart:BUART:rx_markspace_pre\ (fanout=0)

    Removing \BleUart:BUART:rx_state_1\, Duplicate of \BleUart:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\BleUart:BUART:rx_state_1\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \BleUart:BUART:rx_state_1\ (fanout=8)

    Removing \BleUart:BUART:tx_parity_bit\, Duplicate of \BleUart:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\BleUart:BUART:tx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \BleUart:BUART:tx_parity_bit\ (fanout=0)

    Removing \BleUart:BUART:tx_mark\, Duplicate of \BleUart:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\BleUart:BUART:tx_mark\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \BleUart:BUART:tx_mark\ (fanout=0)


Removing unused cells resulting from optimization
Done removing unused cells.
End removing duplicate macrocells: used 1 pass
</CYPRESSTAG>
<CYPRESSTAG name="Design Equations" icon="FILE_RPT_EQUATION">

------------------------------------------------------------
Design Equations
------------------------------------------------------------
    <CYPRESSTAG name="Pin listing">

    ------------------------------------------------------------
    Pin listing
    ------------------------------------------------------------

    Pin : Name = IR1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => IR1(0)__PA ,
            analog_term => Net_14 ,
            pad => IR1(0)_PAD ,
            pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_0\ );
        Properties:
        {
        }

    Pin : Name = IR2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => IR2(0)__PA ,
            analog_term => Net_15 ,
            pad => IR2(0)_PAD ,
            pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_1\ );
        Properties:
        {
        }

    Pin : Name = IR3(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => IR3(0)__PA ,
            analog_term => Net_17 ,
            pad => IR3(0)_PAD ,
            pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_2\ );
        Properties:
        {
        }

    Pin : Name = IR4(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => IR4(0)__PA ,
            analog_term => Net_18 ,
            pad => IR4(0)_PAD ,
            pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_3\ );
        Properties:
        {
        }

    Pin : Name = IR5(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => IR5(0)__PA ,
            analog_term => Net_20 ,
            pad => IR5(0)_PAD ,
            pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_4\ );
        Properties:
        {
        }

    Pin : Name = IR6(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => IR6(0)__PA ,
            analog_term => Net_22 ,
            pad => IR6(0)_PAD ,
            pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_5\ );
        Properties:
        {
        }

    Pin : Name = IR7(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => IR7(0)__PA ,
            analog_term => Net_23 ,
            pad => IR7(0)_PAD ,
            pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_6\ );
        Properties:
        {
        }

    Pin : Name = IR8(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => IR8(0)__PA ,
            analog_term => Net_25 ,
            pad => IR8(0)_PAD ,
            pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_7\ );
        Properties:
        {
        }

    Pin : Name = LED5(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => LED5(0)__PA ,
            pad => LED5(0)_PAD );
        Properties:
        {
        }

    Pin : Name = LED4(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => LED4(0)__PA ,
            pad => LED4(0)_PAD );
        Properties:
        {
        }

    Pin : Name = LED3(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => LED3(0)__PA ,
            pad => LED3(0)_PAD );
        Properties:
        {
        }

    Pin : Name = LED2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => LED2(0)__PA ,
            pad => LED2(0)_PAD );
        Properties:
        {
        }

    Pin : Name = LED1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => LED1(0)__PA ,
            pad => LED1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = SW1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_UP
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => SW1(0)__PA ,
            pad => SW1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = SW2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_UP
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => SW2(0)__PA ,
            fb => Net_664 ,
            pad => SW2(0)_PAD );
        Properties:
        {
        }

    Pin : Name = IN3(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => IN3(0)__PA ,
            pin_input => Net_690 ,
            pad => IN3(0)_PAD );
        Properties:
        {
        }

    Pin : Name = IN2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => IN2(0)__PA ,
            pad => IN2(0)_PAD );
        Properties:
        {
        }

    Pin : Name = \LCD:LCDPort(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(0)\__PA ,
            pad => \LCD:LCDPort(0)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD:LCDPort(1)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(1)\__PA ,
            pad => \LCD:LCDPort(1)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD:LCDPort(2)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(2)\__PA ,
            pad => \LCD:LCDPort(2)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD:LCDPort(3)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(3)\__PA ,
            pad => \LCD:LCDPort(3)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD:LCDPort(4)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(4)\__PA ,
            pad => \LCD:LCDPort(4)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD:LCDPort(5)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(5)\__PA ,
            pad => \LCD:LCDPort(5)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD:LCDPort(6)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(6)\__PA ,
            pad => \LCD:LCDPort(6)_PAD\ );
        Properties:
        {
        }

    Pin : Name = IN1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => IN1(0)__PA ,
            pin_input => Net_691 ,
            pad => IN1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = ENB(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => ENB(0)__PA ,
            pad => ENB(0)_PAD );
        Properties:
        {
        }

    Pin : Name = ENA(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => ENA(0)__PA ,
            pad => ENA(0)_PAD );
        Properties:
        {
        }

    Pin : Name = IN4(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => IN4(0)__PA ,
            pad => IN4(0)_PAD );
        Properties:
        {
        }

    Pin : Name = BleRx(0)
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: LVTTL
            Slew: FAST
            Input Sync needed: True
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => BleRx(0)__PA ,
            fb => Net_785 ,
            pad => BleRx(0)_PAD );
        Properties:
        {
        }

    Pin : Name = BleTx(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: True
            SIO Output Buf: REGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: HIGH
            SIO Hyst: ENABLED
            SIO Vtrip: MULTIPLIER_0_4_OR_1
            SIO Multiplier Index: 0
            SIO RefSel: VOHREF
            Required Capabilities: DIGITAL, ROUTABLE, SIO
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => BleTx(0)__PA ,
            pin_input => Net_780 ,
            pad => BleTx(0)_PAD );
        Properties:
        {
        }

    Pin : Name = BleKey(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: True
            SIO Output Buf: REGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: HIGH
            SIO Hyst: ENABLED
            SIO Vtrip: MULTIPLIER_0_4_OR_1
            SIO Multiplier Index: 0
            SIO RefSel: VOHREF
            Required Capabilities: DIGITAL, SIO
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => BleKey(0)__PA ,
            pad => BleKey(0)_PAD );
        Properties:
        {
        }

    Pin : Name = BleState(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: LVTTL
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => BleState(0)__PA ,
            pad => BleState(0)_PAD );
        Properties:
        {
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Macrocell listing" icon="FILE_RPT_EQUATION">

    ------------------------------------------------------------
    Macrocell listing
    ------------------------------------------------------------

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * !\ADC_IR:ch_addr_5\
            + \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * !\ADC_IR:ch_addr_4\
            + \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * !\ADC_IR:ch_addr_3\
            + \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * !\ADC_IR:ch_addr_2\
            + !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * \ADC_IR:ch_addr_1\
            + \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * !\ADC_IR:ch_addr_1\
            + !\ADC_IR:AMuxHw_2_Decoder_old_id_0\ * \ADC_IR:ch_addr_0\
            + \ADC_IR:AMuxHw_2_Decoder_old_id_0\ * !\ADC_IR:ch_addr_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * \ADC_IR:ch_addr_5\
            + !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * \ADC_IR:ch_addr_4\
            + !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * \ADC_IR:ch_addr_3\
            + !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * \ADC_IR:ch_addr_2\
            + \ADC_IR:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\ADC_IR:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_529 * !\ADC_IR:bSAR_SEQ:load_period\
        );
        Output = \ADC_IR:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=\MotorControl:PWMUDB:status_2\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \MotorControl:PWMUDB:runmode_enable\ * 
              \MotorControl:PWMUDB:tc_i\
        );
        Output = \MotorControl:PWMUDB:status_2\ (fanout=1)

    MacroCell: Name=Net_780, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\BleUart:BUART:txn\
        );
        Output = Net_780 (fanout=1)

    MacroCell: Name=\BleUart:BUART:counter_load_not\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\BleUart:BUART:tx_state_1\ * !\BleUart:BUART:tx_state_0\ * 
              \BleUart:BUART:tx_bitclk_enable_pre\
            + !\BleUart:BUART:tx_state_1\ * !\BleUart:BUART:tx_state_0\ * 
              !\BleUart:BUART:tx_state_2\
        );
        Output = \BleUart:BUART:counter_load_not\ (fanout=1)

    MacroCell: Name=\BleUart:BUART:tx_status_0\, Mode=(Combinatorial)
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\BleUart:BUART:tx_state_1\ * !\BleUart:BUART:tx_state_0\ * 
              \BleUart:BUART:tx_bitclk_enable_pre\ * 
              \BleUart:BUART:tx_fifo_empty\ * \BleUart:BUART:tx_state_2\
        );
        Output = \BleUart:BUART:tx_status_0\ (fanout=1)

    MacroCell: Name=\BleUart:BUART:tx_status_2\, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\BleUart:BUART:tx_fifo_notfull\
        );
        Output = \BleUart:BUART:tx_status_2\ (fanout=1)

    MacroCell: Name=\BleUart:BUART:rx_counter_load\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\BleUart:BUART:tx_ctrl_mark_last\ * 
              !\BleUart:BUART:rx_state_0\ * !\BleUart:BUART:rx_state_3\ * 
              !\BleUart:BUART:rx_state_2\
        );
        Output = \BleUart:BUART:rx_counter_load\ (fanout=1)

    MacroCell: Name=\BleUart:BUART:rx_postpoll\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \BleUart:BUART:pollcount_1\
            + Net_785 * \BleUart:BUART:pollcount_0\
        );
        Output = \BleUart:BUART:rx_postpoll\ (fanout=1)

    MacroCell: Name=\BleUart:BUART:rx_status_4\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \BleUart:BUART:rx_load_fifo\ * \BleUart:BUART:rx_fifofull\
        );
        Output = \BleUart:BUART:rx_status_4\ (fanout=1)

    MacroCell: Name=\BleUart:BUART:rx_status_5\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \BleUart:BUART:rx_fifonotempty\ * 
              \BleUart:BUART:rx_state_stop1_reg\
        );
        Output = \BleUart:BUART:rx_status_5\ (fanout=1)

    MacroCell: Name=__ZERO__, Mode=(Combinatorial)
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = __ZERO__ (fanout=1)

    MacroCell: Name=__ONE__, Mode=(Combinatorial)
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = __ONE__ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:ch_addr_5\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:ch_addr_4\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:ch_addr_3\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:ch_addr_2\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:ch_addr_1\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:ch_addr_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=Net_13, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: PosEdge(\ADC_IR:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_IR:bSAR_SEQ:bus_clk_nrq_reg\ * !\ADC_IR:bSAR_SEQ:nrq_reg\
        );
        Output = Net_13 (fanout=4)

    MacroCell: Name=\ADC_IR:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC_IR:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_13
            + \ADC_IR:Net_3935\
        );
        Output = \ADC_IR:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\ADC_IR:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: PosEdge(\ADC_IR:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_IR:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_IR:bSAR_SEQ:nrq_reg\ (fanout=1)

    MacroCell: Name=\MotorControl:PWMUDB:runmode_enable\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_242) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \MotorControl:PWMUDB:control_7\
        );
        Output = \MotorControl:PWMUDB:runmode_enable\ (fanout=4)

    MacroCell: Name=\MotorControl:PWMUDB:prevCompare1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_242) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \MotorControl:PWMUDB:cmp1_less\
        );
        Output = \MotorControl:PWMUDB:prevCompare1\ (fanout=1)

    MacroCell: Name=\MotorControl:PWMUDB:prevCompare2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_242) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \MotorControl:PWMUDB:cmp2_less\
        );
        Output = \MotorControl:PWMUDB:prevCompare2\ (fanout=1)

    MacroCell: Name=\MotorControl:PWMUDB:status_0\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_242) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\MotorControl:PWMUDB:prevCompare1\ * 
              \MotorControl:PWMUDB:cmp1_less\
        );
        Output = \MotorControl:PWMUDB:status_0\ (fanout=1)

    MacroCell: Name=\MotorControl:PWMUDB:status_1\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_242) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\MotorControl:PWMUDB:prevCompare2\ * 
              \MotorControl:PWMUDB:cmp2_less\
        );
        Output = \MotorControl:PWMUDB:status_1\ (fanout=1)

    MacroCell: Name=Net_691, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_242) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \MotorControl:PWMUDB:runmode_enable\ * 
              \MotorControl:PWMUDB:cmp1_less\
        );
        Output = Net_691 (fanout=1)

    MacroCell: Name=Net_690, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_242) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \MotorControl:PWMUDB:runmode_enable\ * 
              \MotorControl:PWMUDB:cmp2_less\
        );
        Output = Net_690 (fanout=1)

    MacroCell: Name=Net_666, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_665) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_664
        );
        Output = Net_666 (fanout=1)

    MacroCell: Name=\BleUart:BUART:txn\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \BleUart:BUART:txn\ * \BleUart:BUART:tx_state_1\ * 
              !\BleUart:BUART:tx_bitclk\
            + \BleUart:BUART:txn\ * \BleUart:BUART:tx_state_2\
            + !\BleUart:BUART:tx_state_1\ * \BleUart:BUART:tx_state_0\ * 
              !\BleUart:BUART:tx_shift_out\ * !\BleUart:BUART:tx_state_2\
            + !\BleUart:BUART:tx_state_1\ * \BleUart:BUART:tx_state_0\ * 
              !\BleUart:BUART:tx_state_2\ * !\BleUart:BUART:tx_bitclk\
            + \BleUart:BUART:tx_state_1\ * !\BleUart:BUART:tx_state_0\ * 
              !\BleUart:BUART:tx_shift_out\ * !\BleUart:BUART:tx_state_2\ * 
              !\BleUart:BUART:tx_counter_dp\ * \BleUart:BUART:tx_bitclk\
        );
        Output = \BleUart:BUART:txn\ (fanout=2)

    MacroCell: Name=\BleUart:BUART:tx_state_1\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \BleUart:BUART:tx_state_1\ * \BleUart:BUART:tx_state_0\ * 
              \BleUart:BUART:tx_bitclk_enable_pre\ * 
              \BleUart:BUART:tx_state_2\
            + \BleUart:BUART:tx_state_1\ * !\BleUart:BUART:tx_state_2\ * 
              \BleUart:BUART:tx_counter_dp\ * \BleUart:BUART:tx_bitclk\
            + \BleUart:BUART:tx_state_0\ * !\BleUart:BUART:tx_state_2\ * 
              \BleUart:BUART:tx_bitclk\
        );
        Output = \BleUart:BUART:tx_state_1\ (fanout=8)

    MacroCell: Name=\BleUart:BUART:tx_state_0\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\BleUart:BUART:tx_state_1\ * !\BleUart:BUART:tx_state_0\ * 
              \BleUart:BUART:tx_bitclk_enable_pre\ * 
              !\BleUart:BUART:tx_fifo_empty\
            + !\BleUart:BUART:tx_state_1\ * !\BleUart:BUART:tx_state_0\ * 
              !\BleUart:BUART:tx_fifo_empty\ * !\BleUart:BUART:tx_state_2\
            + \BleUart:BUART:tx_state_1\ * \BleUart:BUART:tx_state_0\ * 
              \BleUart:BUART:tx_bitclk_enable_pre\ * 
              \BleUart:BUART:tx_fifo_empty\ * \BleUart:BUART:tx_state_2\
            + \BleUart:BUART:tx_state_0\ * !\BleUart:BUART:tx_state_2\ * 
              \BleUart:BUART:tx_bitclk\
        );
        Output = \BleUart:BUART:tx_state_0\ (fanout=8)

    MacroCell: Name=\BleUart:BUART:tx_state_2\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\BleUart:BUART:tx_state_1\ * !\BleUart:BUART:tx_state_0\ * 
              \BleUart:BUART:tx_bitclk_enable_pre\ * 
              \BleUart:BUART:tx_state_2\
            + \BleUart:BUART:tx_state_1\ * \BleUart:BUART:tx_state_0\ * 
              \BleUart:BUART:tx_bitclk_enable_pre\ * 
              \BleUart:BUART:tx_state_2\
            + \BleUart:BUART:tx_state_1\ * \BleUart:BUART:tx_state_0\ * 
              !\BleUart:BUART:tx_state_2\ * \BleUart:BUART:tx_bitclk\
            + \BleUart:BUART:tx_state_1\ * !\BleUart:BUART:tx_state_2\ * 
              \BleUart:BUART:tx_counter_dp\ * \BleUart:BUART:tx_bitclk\
        );
        Output = \BleUart:BUART:tx_state_2\ (fanout=7)

    MacroCell: Name=\BleUart:BUART:tx_bitclk\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\BleUart:BUART:tx_state_1\ * !\BleUart:BUART:tx_state_0\ * 
              \BleUart:BUART:tx_state_2\
            + !\BleUart:BUART:tx_bitclk_enable_pre\
        );
        Output = \BleUart:BUART:tx_bitclk\ (fanout=4)

    MacroCell: Name=\BleUart:BUART:tx_ctrl_mark_last\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \BleUart:BUART:tx_ctrl_mark_last\ (fanout=8)

    MacroCell: Name=\BleUart:BUART:rx_state_0\, Mode=(T-Register)
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\BleUart:BUART:tx_ctrl_mark_last\ * 
              !\BleUart:BUART:rx_state_0\ * \BleUart:BUART:rx_bitclk_enable\ * 
              !\BleUart:BUART:rx_state_3\ * \BleUart:BUART:rx_state_2\ * 
              !\BleUart:BUART:pollcount_1\ * !Net_785
            + !\BleUart:BUART:tx_ctrl_mark_last\ * 
              !\BleUart:BUART:rx_state_0\ * \BleUart:BUART:rx_bitclk_enable\ * 
              !\BleUart:BUART:rx_state_3\ * \BleUart:BUART:rx_state_2\ * 
              !\BleUart:BUART:pollcount_1\ * !\BleUart:BUART:pollcount_0\
            + !\BleUart:BUART:tx_ctrl_mark_last\ * \BleUart:BUART:rx_state_0\ * 
              !\BleUart:BUART:rx_state_3\ * !\BleUart:BUART:rx_state_2\ * 
              !\BleUart:BUART:rx_count_6\ * !\BleUart:BUART:rx_count_5\
            + !\BleUart:BUART:tx_ctrl_mark_last\ * \BleUart:BUART:rx_state_0\ * 
              !\BleUart:BUART:rx_state_3\ * !\BleUart:BUART:rx_state_2\ * 
              !\BleUart:BUART:rx_count_6\ * !\BleUart:BUART:rx_count_4\
        );
        Output = \BleUart:BUART:rx_state_0\ (fanout=8)

    MacroCell: Name=\BleUart:BUART:rx_load_fifo\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\BleUart:BUART:tx_ctrl_mark_last\ * 
              !\BleUart:BUART:rx_state_0\ * \BleUart:BUART:rx_bitclk_enable\ * 
              \BleUart:BUART:rx_state_3\ * !\BleUart:BUART:rx_state_2\
            + !\BleUart:BUART:tx_ctrl_mark_last\ * \BleUart:BUART:rx_state_0\ * 
              !\BleUart:BUART:rx_state_3\ * !\BleUart:BUART:rx_state_2\ * 
              !\BleUart:BUART:rx_count_6\ * !\BleUart:BUART:rx_count_5\
            + !\BleUart:BUART:tx_ctrl_mark_last\ * \BleUart:BUART:rx_state_0\ * 
              !\BleUart:BUART:rx_state_3\ * !\BleUart:BUART:rx_state_2\ * 
              !\BleUart:BUART:rx_count_6\ * !\BleUart:BUART:rx_count_4\
        );
        Output = \BleUart:BUART:rx_load_fifo\ (fanout=2)

    MacroCell: Name=\BleUart:BUART:rx_state_3\, Mode=(T-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\BleUart:BUART:tx_ctrl_mark_last\ * 
              !\BleUart:BUART:rx_state_0\ * \BleUart:BUART:rx_bitclk_enable\ * 
              \BleUart:BUART:rx_state_3\ * \BleUart:BUART:rx_state_2\
            + !\BleUart:BUART:tx_ctrl_mark_last\ * \BleUart:BUART:rx_state_0\ * 
              !\BleUart:BUART:rx_state_3\ * !\BleUart:BUART:rx_state_2\ * 
              !\BleUart:BUART:rx_count_6\ * !\BleUart:BUART:rx_count_5\
            + !\BleUart:BUART:tx_ctrl_mark_last\ * \BleUart:BUART:rx_state_0\ * 
              !\BleUart:BUART:rx_state_3\ * !\BleUart:BUART:rx_state_2\ * 
              !\BleUart:BUART:rx_count_6\ * !\BleUart:BUART:rx_count_4\
        );
        Output = \BleUart:BUART:rx_state_3\ (fanout=7)

    MacroCell: Name=\BleUart:BUART:rx_state_2\, Mode=(T-Register)
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\BleUart:BUART:tx_ctrl_mark_last\ * 
              !\BleUart:BUART:rx_state_0\ * \BleUart:BUART:rx_bitclk_enable\ * 
              \BleUart:BUART:rx_state_3\
            + !\BleUart:BUART:tx_ctrl_mark_last\ * 
              !\BleUart:BUART:rx_state_0\ * \BleUart:BUART:rx_bitclk_enable\ * 
              \BleUart:BUART:rx_state_2\
            + !\BleUart:BUART:tx_ctrl_mark_last\ * 
              !\BleUart:BUART:rx_state_0\ * !\BleUart:BUART:rx_state_3\ * 
              !\BleUart:BUART:rx_state_2\ * !Net_785 * 
              \BleUart:BUART:rx_last\
            + !\BleUart:BUART:tx_ctrl_mark_last\ * \BleUart:BUART:rx_state_0\ * 
              !\BleUart:BUART:rx_state_3\ * !\BleUart:BUART:rx_state_2\ * 
              !\BleUart:BUART:rx_count_6\ * !\BleUart:BUART:rx_count_5\
            + !\BleUart:BUART:tx_ctrl_mark_last\ * \BleUart:BUART:rx_state_0\ * 
              !\BleUart:BUART:rx_state_3\ * !\BleUart:BUART:rx_state_2\ * 
              !\BleUart:BUART:rx_count_6\ * !\BleUart:BUART:rx_count_4\
        );
        Output = \BleUart:BUART:rx_state_2\ (fanout=7)

    MacroCell: Name=\BleUart:BUART:rx_bitclk_enable\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\BleUart:BUART:rx_count_2\ * !\BleUart:BUART:rx_count_1\ * 
              !\BleUart:BUART:rx_count_0\
        );
        Output = \BleUart:BUART:rx_bitclk_enable\ (fanout=6)

    MacroCell: Name=\BleUart:BUART:rx_state_stop1_reg\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\BleUart:BUART:tx_ctrl_mark_last\ * 
              !\BleUart:BUART:rx_state_0\ * \BleUart:BUART:rx_state_3\ * 
              \BleUart:BUART:rx_state_2\
        );
        Output = \BleUart:BUART:rx_state_stop1_reg\ (fanout=1)

    MacroCell: Name=\BleUart:BUART:pollcount_1\, Mode=(D-Register)
        Total # of inputs        : 5
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\BleUart:BUART:rx_count_2\ * !\BleUart:BUART:rx_count_1\ * 
              !\BleUart:BUART:pollcount_1\ * Net_785 * 
              \BleUart:BUART:pollcount_0\
            + !\BleUart:BUART:rx_count_2\ * !\BleUart:BUART:rx_count_1\ * 
              \BleUart:BUART:pollcount_1\ * !Net_785
            + !\BleUart:BUART:rx_count_2\ * !\BleUart:BUART:rx_count_1\ * 
              \BleUart:BUART:pollcount_1\ * !\BleUart:BUART:pollcount_0\
        );
        Output = \BleUart:BUART:pollcount_1\ (fanout=4)

    MacroCell: Name=\BleUart:BUART:pollcount_0\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\BleUart:BUART:rx_count_2\ * !\BleUart:BUART:rx_count_1\ * 
              !Net_785 * \BleUart:BUART:pollcount_0\
            + !\BleUart:BUART:rx_count_2\ * !\BleUart:BUART:rx_count_1\ * 
              Net_785 * !\BleUart:BUART:pollcount_0\
        );
        Output = \BleUart:BUART:pollcount_0\ (fanout=5)

    MacroCell: Name=\BleUart:BUART:rx_status_3\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\BleUart:BUART:tx_ctrl_mark_last\ * 
              !\BleUart:BUART:rx_state_0\ * \BleUart:BUART:rx_bitclk_enable\ * 
              \BleUart:BUART:rx_state_3\ * \BleUart:BUART:rx_state_2\ * 
              !\BleUart:BUART:pollcount_1\ * !Net_785
            + !\BleUart:BUART:tx_ctrl_mark_last\ * 
              !\BleUart:BUART:rx_state_0\ * \BleUart:BUART:rx_bitclk_enable\ * 
              \BleUart:BUART:rx_state_3\ * \BleUart:BUART:rx_state_2\ * 
              !\BleUart:BUART:pollcount_1\ * !\BleUart:BUART:pollcount_0\
        );
        Output = \BleUart:BUART:rx_status_3\ (fanout=1)

    MacroCell: Name=\BleUart:BUART:rx_last\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_785
        );
        Output = \BleUart:BUART:rx_last\ (fanout=1)
    </CYPRESSTAG>
    <CYPRESSTAG name="Datapath listing">

    ------------------------------------------------------------
    Datapath listing
    ------------------------------------------------------------

    datapathcell: Name =\MotorControl:PWMUDB:sP8:pwmdp:u0\
        PORT MAP (
            clock => Net_242 ,
            cs_addr_2 => \MotorControl:PWMUDB:tc_i\ ,
            cs_addr_1 => \MotorControl:PWMUDB:runmode_enable\ ,
            cl0_comb => \MotorControl:PWMUDB:cmp1_less\ ,
            z0_comb => \MotorControl:PWMUDB:tc_i\ ,
            cl1_comb => \MotorControl:PWMUDB:cmp2_less\ ,
            f1_blk_stat_comb => \MotorControl:PWMUDB:status_3\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\BleUart:BUART:sTX:TxShifter:u0\
        PORT MAP (
            clock => \BleUart:Net_9\ ,
            cs_addr_2 => \BleUart:BUART:tx_state_1\ ,
            cs_addr_1 => \BleUart:BUART:tx_state_0\ ,
            cs_addr_0 => \BleUart:BUART:tx_bitclk_enable_pre\ ,
            so_comb => \BleUart:BUART:tx_shift_out\ ,
            f0_bus_stat_comb => \BleUart:BUART:tx_fifo_notfull\ ,
            f0_blk_stat_comb => \BleUart:BUART:tx_fifo_empty\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\BleUart:BUART:sTX:sCLOCK:TxBitClkGen\
        PORT MAP (
            clock => \BleUart:Net_9\ ,
            cs_addr_0 => \BleUart:BUART:counter_load_not\ ,
            ce0_reg => \BleUart:BUART:tx_bitclk_enable_pre\ ,
            ce1_reg => \BleUart:BUART:tx_counter_dp\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\BleUart:BUART:sRX:RxShifter:u0\
        PORT MAP (
            clock => \BleUart:Net_9\ ,
            cs_addr_2 => \BleUart:BUART:tx_ctrl_mark_last\ ,
            cs_addr_1 => \BleUart:BUART:rx_state_0\ ,
            cs_addr_0 => \BleUart:BUART:rx_bitclk_enable\ ,
            route_si => \BleUart:BUART:rx_postpoll\ ,
            f0_load => \BleUart:BUART:rx_load_fifo\ ,
            f0_bus_stat_comb => \BleUart:BUART:rx_fifonotempty\ ,
            f0_blk_stat_comb => \BleUart:BUART:rx_fifofull\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Status register listing">

    ------------------------------------------------------------
    Status register listing
    ------------------------------------------------------------

    statuscell: Name =\ADC_IR:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => \ADC_IR:clock\ ,
            status_0 => Net_13 ,
            clk_en => \ADC_IR:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_IR:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="StatusI register listing">

    ------------------------------------------------------------
    StatusI register listing
    ------------------------------------------------------------

    statusicell: Name =\MotorControl:PWMUDB:genblk8:stsreg\
        PORT MAP (
            clock => Net_242 ,
            status_3 => \MotorControl:PWMUDB:status_3\ ,
            status_2 => \MotorControl:PWMUDB:status_2\ ,
            status_1 => \MotorControl:PWMUDB:status_1\ ,
            status_0 => \MotorControl:PWMUDB:status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0100111"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\BleUart:BUART:sTX:TxSts\
        PORT MAP (
            clock => \BleUart:Net_9\ ,
            status_3 => \BleUart:BUART:tx_fifo_notfull\ ,
            status_2 => \BleUart:BUART:tx_status_2\ ,
            status_1 => \BleUart:BUART:tx_fifo_empty\ ,
            status_0 => \BleUart:BUART:tx_status_0\ ,
            interrupt => Net_786 );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0000001"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\BleUart:BUART:sRX:RxSts\
        PORT MAP (
            clock => \BleUart:Net_9\ ,
            status_5 => \BleUart:BUART:rx_status_5\ ,
            status_4 => \BleUart:BUART:rx_status_4\ ,
            status_3 => \BleUart:BUART:rx_status_3\ ,
            interrupt => Net_893 );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "1011111"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Sync listing">

    ------------------------------------------------------------
    Sync listing
    ------------------------------------------------------------

    synccell: Name =\ADC_IR:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \ADC_IR:nrq\ ,
            out => \ADC_IR:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Control register listing">

    ------------------------------------------------------------
    Control register listing
    ------------------------------------------------------------

    controlcell: Name =\ADC_IR:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => \ADC_IR:clock\ ,
            control_7 => \ADC_IR:bSAR_SEQ:control_7\ ,
            control_6 => \ADC_IR:bSAR_SEQ:control_6\ ,
            control_5 => \ADC_IR:bSAR_SEQ:control_5\ ,
            control_4 => \ADC_IR:bSAR_SEQ:control_4\ ,
            control_3 => \ADC_IR:bSAR_SEQ:control_3\ ,
            control_2 => \ADC_IR:bSAR_SEQ:control_2\ ,
            control_1 => \ADC_IR:bSAR_SEQ:load_period\ ,
            control_0 => \ADC_IR:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\TriggerReg:Sync:ctrl_reg\
        PORT MAP (
            control_7 => \TriggerReg:control_7\ ,
            control_6 => \TriggerReg:control_6\ ,
            control_5 => \TriggerReg:control_5\ ,
            control_4 => \TriggerReg:control_4\ ,
            control_3 => \TriggerReg:control_3\ ,
            control_2 => \TriggerReg:control_2\ ,
            control_1 => \TriggerReg:control_1\ ,
            control_0 => Net_411 );
        Properties:
        {
            cy_ctrl_mode_0 = "00000000"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Enable: True

    controlcell: Name =\MotorControl:PWMUDB:genblk1:ctrlreg\
        PORT MAP (
            clock => Net_242 ,
            control_7 => \MotorControl:PWMUDB:control_7\ ,
            control_6 => \MotorControl:PWMUDB:control_6\ ,
            control_5 => \MotorControl:PWMUDB:control_5\ ,
            control_4 => \MotorControl:PWMUDB:control_4\ ,
            control_3 => \MotorControl:PWMUDB:control_3\ ,
            control_2 => \MotorControl:PWMUDB:control_2\ ,
            control_1 => \MotorControl:PWMUDB:control_1\ ,
            control_0 => \MotorControl:PWMUDB:control_0\ );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Count7 listing">

    ------------------------------------------------------------
    Count7 listing
    ------------------------------------------------------------

    count7cell: Name =\ADC_IR:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => \ADC_IR:clock\ ,
            load => \ADC_IR:bSAR_SEQ:load_period\ ,
            enable => \ADC_IR:bSAR_SEQ:cnt_enable\ ,
            count_6 => \ADC_IR:bSAR_SEQ:count_6\ ,
            count_5 => \ADC_IR:ch_addr_5\ ,
            count_4 => \ADC_IR:ch_addr_4\ ,
            count_3 => \ADC_IR:ch_addr_3\ ,
            count_2 => \ADC_IR:ch_addr_2\ ,
            count_1 => \ADC_IR:ch_addr_1\ ,
            count_0 => \ADC_IR:ch_addr_0\ ,
            tc => \ADC_IR:bSAR_SEQ:cnt_tc\ ,
            clk_en => \ADC_IR:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000111"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_IR:bSAR_SEQ:enable\)

    count7cell: Name =\BleUart:BUART:sRX:RxBitCounter\
        PORT MAP (
            clock => \BleUart:Net_9\ ,
            load => \BleUart:BUART:rx_counter_load\ ,
            count_6 => \BleUart:BUART:rx_count_6\ ,
            count_5 => \BleUart:BUART:rx_count_5\ ,
            count_4 => \BleUart:BUART:rx_count_4\ ,
            count_3 => \BleUart:BUART:rx_count_3\ ,
            count_2 => \BleUart:BUART:rx_count_2\ ,
            count_1 => \BleUart:BUART:rx_count_1\ ,
            count_0 => \BleUart:BUART:rx_count_0\ ,
            tc => \BleUart:BUART:rx_count7_tc\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "1110010"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="DRQ listing">

    ------------------------------------------------------------
    DRQ listing
    ------------------------------------------------------------

    drqcell: Name =\ADC_IR:TempBuf\
        PORT MAP (
            dmareq => \ADC_IR:Net_3830\ ,
            termin => zero ,
            termout => \ADC_IR:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\ADC_IR:FinalBuf\
        PORT MAP (
            dmareq => \ADC_IR:Net_3698\ ,
            termin => zero ,
            termout => \ADC_IR:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Interrupt listing">

    ------------------------------------------------------------
    Interrupt listing
    ------------------------------------------------------------

    interrupt: Name =\ADC_IR:IRQ\
        PORT MAP (
            interrupt => Net_13 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =readIRSensors
        PORT MAP (
            interrupt => Net_13 );
        Properties:
        {
            int_type = "00"
            is_nmi = 0
        }

    interrupt: Name =isrUltraSonen
        PORT MAP (
            interrupt => Net_430 );
        Properties:
        {
            int_type = "00"
            is_nmi = 0
        }

    interrupt: Name =EnMotorISR
        PORT MAP (
            interrupt => Net_666 );
        Properties:
        {
            int_type = "00"
            is_nmi = 0
        }

    interrupt: Name =BleRxISR
        PORT MAP (
            interrupt => Net_893 );
        Properties:
        {
            int_type = "00"
            is_nmi = 0
        }

    interrupt: Name =BleTxISR
        PORT MAP (
            interrupt => Net_786 );
        Properties:
        {
            int_type = "00"
            is_nmi = 0
        }

    interrupt: Name =SendBleDataISR
        PORT MAP (
            interrupt => Net_1144 );
        Properties:
        {
            int_type = "00"
            is_nmi = 0
        }
    </CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Technology mapping summary" expanded>

------------------------------------------------------------
Technology mapping summary
------------------------------------------------------------

Resource Type                 : Used : Free :  Max :  % Used
============================================================
Digital Clocks                :    5 :    3 :    8 : 62.50 %
Analog Clocks                 :    0 :    4 :    4 :  0.00 %
CapSense Buffers              :    0 :    2 :    2 :  0.00 %
Digital Filter Block          :    0 :    1 :    1 :  0.00 %
Interrupts                    :    7 :   25 :   32 : 21.88 %
IO                            :   32 :   16 :   48 : 66.67 %
Segment LCD                   :    0 :    1 :    1 :  0.00 %
CAN 2.0b                      :    0 :    1 :    1 :  0.00 %
I2C                           :    0 :    1 :    1 :  0.00 %
USB                           :    0 :    1 :    1 :  0.00 %
DMA Channels                  :    2 :   22 :   24 :  8.33 %
Timer                         :    2 :    2 :    4 : 50.00 %
UDB                           :      :      :      :        
  Macrocells                  :  111 :   81 :  192 : 57.81 %
  Unique P-terms              :  141 :  243 :  384 : 36.72 %
  Total P-terms               :  150 :      :      :        
  Datapath Cells              :    4 :   20 :   24 : 16.67 %
  Status Cells                :    7 :   17 :   24 : 29.17 %
    Status Registers          :    1 :      :      :        
    StatusI Registers         :    3 :      :      :        
    Sync Cells (x1)           :    1 :      :      :        
    Routed Count7 Load/Enable :    2 :      :      :        
  Control Cells               :    5 :   19 :   24 : 20.83 %
    Control Registers         :    3 :      :      :        
    Count7 Cells              :    2 :      :      :        
Opamp                         :    1 :    3 :    4 : 25.00 %
Comparator                    :    0 :    4 :    4 :  0.00 %
Delta-Sigma ADC               :    0 :    1 :    1 :  0.00 %
LPF                           :    0 :    2 :    2 :  0.00 %
SAR ADC                       :    1 :    1 :    2 : 50.00 %
Analog (SC/CT) Blocks         :    0 :    4 :    4 :  0.00 %
DAC                           :      :      :      :        
  VIDAC                       :    1 :    3 :    4 : 25.00 %
</CYPRESSTAG>
Technology Mapping: Elapsed time ==> 0s.399ms
ADD: mpr.M0037: information: Unused pieces of the design have been optimized out. See the Tech mapping section of the report file for details.
 * C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Software\PSoc\Roadster\RoadsterRACEMODE\Roadster1.0.cydsn\codegentemp\Roadster1.0.rpt (Tech mapping)

Tech Mapping phase: Elapsed time ==> 0s.485ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Placement">
Info: apr.M0002: Analog signal "Net_535" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_536" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_538" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_540" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_541" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_543" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_545" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_546" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_548" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_550" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_551" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_553" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_555" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_556" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_558" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_560" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_561" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_563" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_565" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_566" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_568" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_570" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_571" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_573" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_575" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_576" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_578" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_580" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_581" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_583" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_585" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_586" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_588" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_590" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_591" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_593" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_595" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_596" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_598" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_600" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_601" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_602" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_603" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_604" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_605" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_606" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_607" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_608" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_609" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_610" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_611" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_612" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_613" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_614" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_615" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_616" is connected to one terminal only. (App=cydsfit)
Initial Analog Placement Results:
[IOP=(12)][IoId=(4)] : BleKey(0) (fixed)
IO_4@[IOP=(12)][IoId=(4)] : BleKey_SIOREF_0 (fixed)
IO_7@[IOP=(12)][IoId=(7)] : BleRx(0) (fixed)
IO_5@[IOP=(12)][IoId=(5)] : BleState(0) (fixed)
[IOP=(12)][IoId=(6)] : BleTx(0) (fixed)
IO_6@[IOP=(12)][IoId=(6)] : BleTx_SIOREF_0 (fixed)
IO_2@[IOP=(1)][IoId=(2)] : ENA(0) (fixed)
IO_7@[IOP=(1)][IoId=(7)] : ENB(0) (fixed)
IO_3@[IOP=(1)][IoId=(3)] : IN1(0) (fixed)
IO_4@[IOP=(1)][IoId=(4)] : IN2(0) (fixed)
IO_5@[IOP=(1)][IoId=(5)] : IN3(0) (fixed)
IO_6@[IOP=(1)][IoId=(6)] : IN4(0) (fixed)
IO_0@[IOP=(0)][IoId=(0)] : IR1(0) (fixed)
IO_1@[IOP=(0)][IoId=(1)] : IR2(0) (fixed)
IO_2@[IOP=(0)][IoId=(2)] : IR3(0) (fixed)
IO_3@[IOP=(0)][IoId=(3)] : IR4(0) (fixed)
IO_4@[IOP=(0)][IoId=(4)] : IR5(0) (fixed)
IO_5@[IOP=(0)][IoId=(5)] : IR6(0) (fixed)
IO_6@[IOP=(0)][IoId=(6)] : IR7(0) (fixed)
IO_7@[IOP=(0)][IoId=(7)] : IR8(0) (fixed)
IO_0@[IOP=(3)][IoId=(0)] : LED1(0) (fixed)
IO_1@[IOP=(3)][IoId=(1)] : LED2(0) (fixed)
IO_2@[IOP=(3)][IoId=(2)] : LED3(0) (fixed)
IO_3@[IOP=(3)][IoId=(3)] : LED4(0) (fixed)
IO_4@[IOP=(3)][IoId=(4)] : LED5(0) (fixed)
IO_5@[IOP=(3)][IoId=(5)] : SW1(0) (fixed)
IO_6@[IOP=(3)][IoId=(6)] : SW2(0) (fixed)
IO_0@[IOP=(2)][IoId=(0)] : \LCD:LCDPort(0)\ (fixed)
IO_1@[IOP=(2)][IoId=(1)] : \LCD:LCDPort(1)\ (fixed)
IO_2@[IOP=(2)][IoId=(2)] : \LCD:LCDPort(2)\ (fixed)
IO_3@[IOP=(2)][IoId=(3)] : \LCD:LCDPort(3)\ (fixed)
IO_4@[IOP=(2)][IoId=(4)] : \LCD:LCDPort(4)\ (fixed)
IO_5@[IOP=(2)][IoId=(5)] : \LCD:LCDPort(5)\ (fixed)
IO_6@[IOP=(2)][IoId=(6)] : \LCD:LCDPort(6)\ (fixed)
IO_7@[IOP=(3)][IoId=(7)] : Dedicated_Output (fixed, OPAMP-GPIO)
SAR[0]@[FFB(SAR,0)] : \ADC_IR:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \ADC_IR:SAR:vRef_Vdda_1\
OpAmp[3]@[FFB(OpAmp,3)] : \BleBuffer:ABuf\ (OPAMP-GPIO)
VIDAC[2]@[FFB(VIDAC,2)] : \BleVDAC:viDAC8\
Log: apr.M0058: The analog placement iterative improvement is 33% done. (App=cydsfit)
Log: apr.M0058: The analog placement iterative improvement is 89% done. (App=cydsfit)
Analog Placement Results:
[IOP=(12)][IoId=(4)] : BleKey(0) (fixed)
IO_4@[IOP=(12)][IoId=(4)] : BleKey_SIOREF_0 (fixed)
IO_7@[IOP=(12)][IoId=(7)] : BleRx(0) (fixed)
IO_5@[IOP=(12)][IoId=(5)] : BleState(0) (fixed)
[IOP=(12)][IoId=(6)] : BleTx(0) (fixed)
IO_6@[IOP=(12)][IoId=(6)] : BleTx_SIOREF_0 (fixed)
IO_2@[IOP=(1)][IoId=(2)] : ENA(0) (fixed)
IO_7@[IOP=(1)][IoId=(7)] : ENB(0) (fixed)
IO_3@[IOP=(1)][IoId=(3)] : IN1(0) (fixed)
IO_4@[IOP=(1)][IoId=(4)] : IN2(0) (fixed)
IO_5@[IOP=(1)][IoId=(5)] : IN3(0) (fixed)
IO_6@[IOP=(1)][IoId=(6)] : IN4(0) (fixed)
IO_0@[IOP=(0)][IoId=(0)] : IR1(0) (fixed)
IO_1@[IOP=(0)][IoId=(1)] : IR2(0) (fixed)
IO_2@[IOP=(0)][IoId=(2)] : IR3(0) (fixed)
IO_3@[IOP=(0)][IoId=(3)] : IR4(0) (fixed)
IO_4@[IOP=(0)][IoId=(4)] : IR5(0) (fixed)
IO_5@[IOP=(0)][IoId=(5)] : IR6(0) (fixed)
IO_6@[IOP=(0)][IoId=(6)] : IR7(0) (fixed)
IO_7@[IOP=(0)][IoId=(7)] : IR8(0) (fixed)
IO_0@[IOP=(3)][IoId=(0)] : LED1(0) (fixed)
IO_1@[IOP=(3)][IoId=(1)] : LED2(0) (fixed)
IO_2@[IOP=(3)][IoId=(2)] : LED3(0) (fixed)
IO_3@[IOP=(3)][IoId=(3)] : LED4(0) (fixed)
IO_4@[IOP=(3)][IoId=(4)] : LED5(0) (fixed)
IO_5@[IOP=(3)][IoId=(5)] : SW1(0) (fixed)
IO_6@[IOP=(3)][IoId=(6)] : SW2(0) (fixed)
IO_0@[IOP=(2)][IoId=(0)] : \LCD:LCDPort(0)\ (fixed)
IO_1@[IOP=(2)][IoId=(1)] : \LCD:LCDPort(1)\ (fixed)
IO_2@[IOP=(2)][IoId=(2)] : \LCD:LCDPort(2)\ (fixed)
IO_3@[IOP=(2)][IoId=(3)] : \LCD:LCDPort(3)\ (fixed)
IO_4@[IOP=(2)][IoId=(4)] : \LCD:LCDPort(4)\ (fixed)
IO_5@[IOP=(2)][IoId=(5)] : \LCD:LCDPort(5)\ (fixed)
IO_6@[IOP=(2)][IoId=(6)] : \LCD:LCDPort(6)\ (fixed)
IO_7@[IOP=(3)][IoId=(7)] : Dedicated_Output (fixed, OPAMP-GPIO)
SAR[0]@[FFB(SAR,0)] : \ADC_IR:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \ADC_IR:SAR:vRef_Vdda_1\
OpAmp[3]@[FFB(OpAmp,3)] : \BleBuffer:ABuf\ (OPAMP-GPIO)
VIDAC[3]@[FFB(VIDAC,3)] : \BleVDAC:viDAC8\

Analog Placement phase: Elapsed time ==> 3s.862ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Routing">
Analog Routing phase: Elapsed time ==> 0s.011ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Code Generation">
============ Analog Final Answer Routes ============
Dump of CyAnalogRoutingResultsDB
Map of net to items {
  Net: \ADC_IR:Net_2803\ {
    sar_0_vplus
  }
  Net: Net_14 {
    p0_0
  }
  Net: Net_15 {
    p0_1
  }
  Net: Net_17 {
    p0_2
  }
  Net: Net_18 {
    p0_3
  }
  Net: Net_20 {
    p0_4
  }
  Net: Net_22 {
    p0_5
  }
  Net: Net_23 {
    p0_6
  }
  Net: Net_25 {
    p0_7
  }
  Net: Net_535 {
  }
  Net: Net_536 {
  }
  Net: Net_538 {
  }
  Net: Net_540 {
  }
  Net: Net_541 {
  }
  Net: Net_543 {
  }
  Net: Net_545 {
  }
  Net: Net_546 {
  }
  Net: Net_548 {
  }
  Net: Net_550 {
  }
  Net: Net_551 {
  }
  Net: Net_553 {
  }
  Net: Net_555 {
  }
  Net: Net_556 {
  }
  Net: Net_558 {
  }
  Net: Net_560 {
  }
  Net: Net_561 {
  }
  Net: Net_563 {
  }
  Net: Net_565 {
  }
  Net: Net_566 {
  }
  Net: Net_568 {
  }
  Net: Net_570 {
  }
  Net: Net_571 {
  }
  Net: Net_573 {
  }
  Net: Net_575 {
  }
  Net: Net_576 {
  }
  Net: Net_578 {
  }
  Net: Net_580 {
  }
  Net: Net_581 {
  }
  Net: Net_583 {
  }
  Net: Net_585 {
  }
  Net: Net_586 {
  }
  Net: Net_588 {
  }
  Net: Net_590 {
  }
  Net: Net_591 {
  }
  Net: Net_593 {
  }
  Net: Net_595 {
  }
  Net: Net_596 {
  }
  Net: Net_598 {
  }
  Net: Net_600 {
  }
  Net: Net_601 {
  }
  Net: Net_602 {
  }
  Net: Net_603 {
  }
  Net: Net_604 {
  }
  Net: Net_605 {
  }
  Net: Net_606 {
  }
  Net: Net_607 {
  }
  Net: Net_608 {
  }
  Net: Net_609 {
  }
  Net: Net_610 {
  }
  Net: Net_611 {
  }
  Net: Net_612 {
  }
  Net: Net_613 {
  }
  Net: Net_614 {
  }
  Net: Net_615 {
  }
  Net: Net_616 {
  }
  Net: Net_812 {
    p3_7
    amuxbusr_x_p3_7
    amuxbusr
    amuxbusr_x_p5_4
    p5_4
    agr0_x_p5_4
    agr0
    agr0_x_sio_p12_67
    sio_p12_67
    agl0_x_agr0
    agl0
    agl0_x_sio_p12_45
    sio_p12_45
    opamp_3_vminus_x_p3_7
    opamp_3_vminus
  }
  Net: \ADC_IR:SAR:Net_126\ {
    sar_0_vrefhi
    sar_0_vminus_x_sar_0_vrefhi
    sar_0_vminus
  }
  Net: \ADC_IR:SAR:Net_209\ {
  }
  Net: \ADC_IR:SAR:Net_235\ {
    common_sar_vref_vdda/2
    common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2
    sar_0_vref_vdda_vdda_2
    sar_0_vref_x_sar_0_vref_vdda_vdda_2
    sar_0_vref
  }
  Net: Net_705 {
    vidac_3_vout
    agr5_x_vidac_3_vout
    agr5
    agr5_x_opamp_3_vplus
    opamp_3_vplus
  }
  Net: \BleVDAC:Net_77\ {
  }
  Net: AmuxNet::\ADC_IR:AMuxHw_2\ {
    sar_0_vplus
    agl5_x_sar_0_vplus
    agl5
    agl5_x_p0_5
    agl4_x_sar_0_vplus
    agl4
    agl4_x_p0_0
    agl6_x_sar_0_vplus
    agl6
    agl6_x_p0_6
    agl7_x_sar_0_vplus
    agl7
    agl7_x_p0_7
    agl4_x_p0_4
    agl7_x_p0_3
    agl5_x_p0_1
    agl6_x_p0_2
    p0_5
    p0_0
    p0_6
    p0_7
    p0_4
    p0_3
    p0_1
    p0_2
  }
}
Map of item to net {
  p3_7                                             -> Net_812
  amuxbusr_x_p3_7                                  -> Net_812
  amuxbusr                                         -> Net_812
  amuxbusr_x_p5_4                                  -> Net_812
  p5_4                                             -> Net_812
  agr0_x_p5_4                                      -> Net_812
  agr0                                             -> Net_812
  agr0_x_sio_p12_67                                -> Net_812
  sio_p12_67                                       -> Net_812
  agl0_x_agr0                                      -> Net_812
  agl0                                             -> Net_812
  agl0_x_sio_p12_45                                -> Net_812
  sio_p12_45                                       -> Net_812
  opamp_3_vminus_x_p3_7                            -> Net_812
  opamp_3_vminus                                   -> Net_812
  sar_0_vrefhi                                     -> \ADC_IR:SAR:Net_126\
  sar_0_vminus_x_sar_0_vrefhi                      -> \ADC_IR:SAR:Net_126\
  sar_0_vminus                                     -> \ADC_IR:SAR:Net_126\
  common_sar_vref_vdda/2                           -> \ADC_IR:SAR:Net_235\
  common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2  -> \ADC_IR:SAR:Net_235\
  sar_0_vref_vdda_vdda_2                           -> \ADC_IR:SAR:Net_235\
  sar_0_vref_x_sar_0_vref_vdda_vdda_2              -> \ADC_IR:SAR:Net_235\
  sar_0_vref                                       -> \ADC_IR:SAR:Net_235\
  vidac_3_vout                                     -> Net_705
  agr5_x_vidac_3_vout                              -> Net_705
  agr5                                             -> Net_705
  agr5_x_opamp_3_vplus                             -> Net_705
  opamp_3_vplus                                    -> Net_705
  sar_0_vplus                                      -> \ADC_IR:Net_2803\
  p0_0                                             -> Net_14
  p0_1                                             -> Net_15
  p0_2                                             -> Net_17
  p0_3                                             -> Net_18
  p0_4                                             -> Net_20
  p0_5                                             -> Net_22
  p0_6                                             -> Net_23
  p0_7                                             -> Net_25
  agl5_x_sar_0_vplus                               -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl5                                             -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl5_x_p0_5                                      -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl4_x_sar_0_vplus                               -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl4                                             -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl4_x_p0_0                                      -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl6_x_sar_0_vplus                               -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl6                                             -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl6_x_p0_6                                      -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl7_x_sar_0_vplus                               -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl7                                             -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl7_x_p0_7                                      -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl4_x_p0_4                                      -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl7_x_p0_3                                      -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl5_x_p0_1                                      -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl6_x_p0_2                                      -> AmuxNet::\ADC_IR:AMuxHw_2\
}
Mux Info {
  Mux: \ADC_IR:AMuxHw_2\ {
     Mouth: \ADC_IR:Net_2803\
     Guts:  AmuxNet::\ADC_IR:AMuxHw_2\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_14
      Outer: agl4_x_p0_0
      Inner: __open__
      Path {
        p0_0
        agl4_x_p0_0
        agl4
        agl4_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 1 {
      Net:   Net_15
      Outer: agl5_x_p0_1
      Inner: __open__
      Path {
        p0_1
        agl5_x_p0_1
        agl5
        agl5_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 2 {
      Net:   Net_17
      Outer: agl6_x_p0_2
      Inner: __open__
      Path {
        p0_2
        agl6_x_p0_2
        agl6
        agl6_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 3 {
      Net:   Net_18
      Outer: agl7_x_p0_3
      Inner: __open__
      Path {
        p0_3
        agl7_x_p0_3
        agl7
        agl7_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 4 {
      Net:   Net_20
      Outer: agl4_x_p0_4
      Inner: __open__
      Path {
        p0_4
        agl4_x_p0_4
        agl4
        agl4_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 5 {
      Net:   Net_22
      Outer: agl5_x_p0_5
      Inner: __open__
      Path {
        p0_5
        agl5_x_p0_5
        agl5
        agl5_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 6 {
      Net:   Net_23
      Outer: agl6_x_p0_6
      Inner: __open__
      Path {
        p0_6
        agl6_x_p0_6
        agl6
        agl6_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 7 {
      Net:   Net_25
      Outer: agl7_x_p0_7
      Inner: __open__
      Path {
        p0_7
        agl7_x_p0_7
        agl7
        agl7_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 8 {
      Net:   Net_535
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_536
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_538
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_540
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_541
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_543
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_545
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_546
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_548
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_550
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_551
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_553
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_555
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_556
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_558
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_560
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_561
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_563
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_565
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_566
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_568
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_570
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_571
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_573
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 32 {
      Net:   Net_575
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 33 {
      Net:   Net_576
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 34 {
      Net:   Net_578
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 35 {
      Net:   Net_580
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 36 {
      Net:   Net_581
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 37 {
      Net:   Net_583
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 38 {
      Net:   Net_585
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 39 {
      Net:   Net_586
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 40 {
      Net:   Net_588
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 41 {
      Net:   Net_590
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 42 {
      Net:   Net_591
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 43 {
      Net:   Net_593
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 44 {
      Net:   Net_595
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 45 {
      Net:   Net_596
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 46 {
      Net:   Net_598
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 47 {
      Net:   Net_600
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 48 {
      Net:   Net_601
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 49 {
      Net:   Net_602
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 50 {
      Net:   Net_603
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 51 {
      Net:   Net_604
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 52 {
      Net:   Net_605
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 53 {
      Net:   Net_606
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 54 {
      Net:   Net_607
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 55 {
      Net:   Net_608
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 56 {
      Net:   Net_609
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 57 {
      Net:   Net_610
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 58 {
      Net:   Net_611
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 59 {
      Net:   Net_612
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 60 {
      Net:   Net_613
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 61 {
      Net:   Net_614
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 62 {
      Net:   Net_615
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 63 {
      Net:   Net_616
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
}
Dump of CyP35AnalogRoutingResultsDB
IsVddaHalfUsedForComp = False
IsVddaHalfUsedForSar0 = True
IsVddaHalfUsedForSar1 = False
Analog Code Generation phase: Elapsed time ==> 0s.278ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Placement">
<CYPRESSTAG name="Detailed placement messages">
I2076: Total run-time: 3.4 sec.

</CYPRESSTAG>
<CYPRESSTAG name="PLD Packing">
<CYPRESSTAG name="PLD Packing Summary" expanded>

------------------------------------------------------------
PLD Packing Summary
------------------------------------------------------------
            Resource Type : Used : Free :  Max :  % Used
    ====================================================
                     PLDs :   34 :   14 :   48 :  70.83%

<CYPRESSTAG name="PLD Statistics">

        PLD Resource Type :     Average/LAB
    =======================================
                   Inputs :            7.00
                   Pterms :            4.29
               Macrocells :            3.26
</CYPRESSTAG>
<CYPRESSTAG name="Packed PLD Contents">
Packed PLD Contents not displayed at this verbose level.</CYPRESSTAG>
</CYPRESSTAG>
PLD Packing: Elapsed time ==> 0s.003ms
</CYPRESSTAG>
<CYPRESSTAG name="Partitioning">
<CYPRESSTAG name="Initial Partitioning Summary">
Initial Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
<CYPRESSTAG name="Final Partitioning Summary">
Final Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
Partitioning: Elapsed time ==> 0s.178ms
</CYPRESSTAG>
<CYPRESSTAG name="Final Placement Summary">

------------------------------------------------------------
Final Placement Summary
------------------------------------------------------------

       Resource Type :      Count : Avg Inputs : Avg Outputs
    ========================================================
                 UDB :         18 :       8.28 :       6.17
<CYPRESSTAG name="Final Placement Details">
<CYPRESSTAG name="Component Details">

------------------------------------------------------------
Component Placement Details
------------------------------------------------------------
UDB [UDB=(0,0)] contents:
LAB@[UDB=(0,0)][LB=1] #macrocells=1, #inputs=0, #pterms=0
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=__ZERO__, Mode=(Combinatorial) @ [UDB=(0,0)][LB=1][MC=2]
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = __ZERO__ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

UDB [UDB=(0,1)] contents:
LAB@[UDB=(0,1)][LB=0] #macrocells=4, #inputs=11, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\BleUart:BUART:rx_state_0\, Mode=(T-Register) @ [UDB=(0,1)][LB=0][MC=0]
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\BleUart:BUART:tx_ctrl_mark_last\ * 
              !\BleUart:BUART:rx_state_0\ * \BleUart:BUART:rx_bitclk_enable\ * 
              !\BleUart:BUART:rx_state_3\ * \BleUart:BUART:rx_state_2\ * 
              !\BleUart:BUART:pollcount_1\ * !Net_785
            + !\BleUart:BUART:tx_ctrl_mark_last\ * 
              !\BleUart:BUART:rx_state_0\ * \BleUart:BUART:rx_bitclk_enable\ * 
              !\BleUart:BUART:rx_state_3\ * \BleUart:BUART:rx_state_2\ * 
              !\BleUart:BUART:pollcount_1\ * !\BleUart:BUART:pollcount_0\
            + !\BleUart:BUART:tx_ctrl_mark_last\ * \BleUart:BUART:rx_state_0\ * 
              !\BleUart:BUART:rx_state_3\ * !\BleUart:BUART:rx_state_2\ * 
              !\BleUart:BUART:rx_count_6\ * !\BleUart:BUART:rx_count_5\
            + !\BleUart:BUART:tx_ctrl_mark_last\ * \BleUart:BUART:rx_state_0\ * 
              !\BleUart:BUART:rx_state_3\ * !\BleUart:BUART:rx_state_2\ * 
              !\BleUart:BUART:rx_count_6\ * !\BleUart:BUART:rx_count_4\
        );
        Output = \BleUart:BUART:rx_state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\BleUart:BUART:rx_load_fifo\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=1]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\BleUart:BUART:tx_ctrl_mark_last\ * 
              !\BleUart:BUART:rx_state_0\ * \BleUart:BUART:rx_bitclk_enable\ * 
              \BleUart:BUART:rx_state_3\ * !\BleUart:BUART:rx_state_2\
            + !\BleUart:BUART:tx_ctrl_mark_last\ * \BleUart:BUART:rx_state_0\ * 
              !\BleUart:BUART:rx_state_3\ * !\BleUart:BUART:rx_state_2\ * 
              !\BleUart:BUART:rx_count_6\ * !\BleUart:BUART:rx_count_5\
            + !\BleUart:BUART:tx_ctrl_mark_last\ * \BleUart:BUART:rx_state_0\ * 
              !\BleUart:BUART:rx_state_3\ * !\BleUart:BUART:rx_state_2\ * 
              !\BleUart:BUART:rx_count_6\ * !\BleUart:BUART:rx_count_4\
        );
        Output = \BleUart:BUART:rx_load_fifo\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\BleUart:BUART:rx_state_3\, Mode=(T-Register) @ [UDB=(0,1)][LB=0][MC=2]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\BleUart:BUART:tx_ctrl_mark_last\ * 
              !\BleUart:BUART:rx_state_0\ * \BleUart:BUART:rx_bitclk_enable\ * 
              \BleUart:BUART:rx_state_3\ * \BleUart:BUART:rx_state_2\
            + !\BleUart:BUART:tx_ctrl_mark_last\ * \BleUart:BUART:rx_state_0\ * 
              !\BleUart:BUART:rx_state_3\ * !\BleUart:BUART:rx_state_2\ * 
              !\BleUart:BUART:rx_count_6\ * !\BleUart:BUART:rx_count_5\
            + !\BleUart:BUART:tx_ctrl_mark_last\ * \BleUart:BUART:rx_state_0\ * 
              !\BleUart:BUART:rx_state_3\ * !\BleUart:BUART:rx_state_2\ * 
              !\BleUart:BUART:rx_count_6\ * !\BleUart:BUART:rx_count_4\
        );
        Output = \BleUart:BUART:rx_state_3\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\BleUart:BUART:rx_status_3\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=3]
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\BleUart:BUART:tx_ctrl_mark_last\ * 
              !\BleUart:BUART:rx_state_0\ * \BleUart:BUART:rx_bitclk_enable\ * 
              \BleUart:BUART:rx_state_3\ * \BleUart:BUART:rx_state_2\ * 
              !\BleUart:BUART:pollcount_1\ * !Net_785
            + !\BleUart:BUART:tx_ctrl_mark_last\ * 
              !\BleUart:BUART:rx_state_0\ * \BleUart:BUART:rx_bitclk_enable\ * 
              \BleUart:BUART:rx_state_3\ * \BleUart:BUART:rx_state_2\ * 
              !\BleUart:BUART:pollcount_1\ * !\BleUart:BUART:pollcount_0\
        );
        Output = \BleUart:BUART:rx_status_3\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,1)][LB=1] #macrocells=4, #inputs=10, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\BleUart:BUART:rx_state_2\, Mode=(T-Register) @ [UDB=(0,1)][LB=1][MC=0]
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\BleUart:BUART:tx_ctrl_mark_last\ * 
              !\BleUart:BUART:rx_state_0\ * \BleUart:BUART:rx_bitclk_enable\ * 
              \BleUart:BUART:rx_state_3\
            + !\BleUart:BUART:tx_ctrl_mark_last\ * 
              !\BleUart:BUART:rx_state_0\ * \BleUart:BUART:rx_bitclk_enable\ * 
              \BleUart:BUART:rx_state_2\
            + !\BleUart:BUART:tx_ctrl_mark_last\ * 
              !\BleUart:BUART:rx_state_0\ * !\BleUart:BUART:rx_state_3\ * 
              !\BleUart:BUART:rx_state_2\ * !Net_785 * 
              \BleUart:BUART:rx_last\
            + !\BleUart:BUART:tx_ctrl_mark_last\ * \BleUart:BUART:rx_state_0\ * 
              !\BleUart:BUART:rx_state_3\ * !\BleUart:BUART:rx_state_2\ * 
              !\BleUart:BUART:rx_count_6\ * !\BleUart:BUART:rx_count_5\
            + !\BleUart:BUART:tx_ctrl_mark_last\ * \BleUart:BUART:rx_state_0\ * 
              !\BleUart:BUART:rx_state_3\ * !\BleUart:BUART:rx_state_2\ * 
              !\BleUart:BUART:rx_count_6\ * !\BleUart:BUART:rx_count_4\
        );
        Output = \BleUart:BUART:rx_state_2\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\BleUart:BUART:rx_counter_load\, Mode=(Combinatorial) @ [UDB=(0,1)][LB=1][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\BleUart:BUART:tx_ctrl_mark_last\ * 
              !\BleUart:BUART:rx_state_0\ * !\BleUart:BUART:rx_state_3\ * 
              !\BleUart:BUART:rx_state_2\
        );
        Output = \BleUart:BUART:rx_counter_load\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\BleUart:BUART:rx_state_stop1_reg\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=2]
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\BleUart:BUART:tx_ctrl_mark_last\ * 
              !\BleUart:BUART:rx_state_0\ * \BleUart:BUART:rx_state_3\ * 
              \BleUart:BUART:rx_state_2\
        );
        Output = \BleUart:BUART:rx_state_stop1_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\BleUart:BUART:rx_last\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_785
        );
        Output = \BleUart:BUART:rx_last\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(0,2)] contents:
LAB@[UDB=(0,2)][LB=0] #macrocells=4, #inputs=6, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\BleUart:BUART:pollcount_1\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=0]
        Total # of inputs        : 5
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\BleUart:BUART:rx_count_2\ * !\BleUart:BUART:rx_count_1\ * 
              !\BleUart:BUART:pollcount_1\ * Net_785 * 
              \BleUart:BUART:pollcount_0\
            + !\BleUart:BUART:rx_count_2\ * !\BleUart:BUART:rx_count_1\ * 
              \BleUart:BUART:pollcount_1\ * !Net_785
            + !\BleUart:BUART:rx_count_2\ * !\BleUart:BUART:rx_count_1\ * 
              \BleUart:BUART:pollcount_1\ * !\BleUart:BUART:pollcount_0\
        );
        Output = \BleUart:BUART:pollcount_1\ (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\BleUart:BUART:pollcount_0\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\BleUart:BUART:rx_count_2\ * !\BleUart:BUART:rx_count_1\ * 
              !Net_785 * \BleUart:BUART:pollcount_0\
            + !\BleUart:BUART:rx_count_2\ * !\BleUart:BUART:rx_count_1\ * 
              Net_785 * !\BleUart:BUART:pollcount_0\
        );
        Output = \BleUart:BUART:pollcount_0\ (fanout=5)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\BleUart:BUART:rx_postpoll\, Mode=(Combinatorial) @ [UDB=(0,2)][LB=0][MC=2]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \BleUart:BUART:pollcount_1\
            + Net_785 * \BleUart:BUART:pollcount_0\
        );
        Output = \BleUart:BUART:rx_postpoll\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\BleUart:BUART:rx_bitclk_enable\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=3]
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\BleUart:BUART:rx_count_2\ * !\BleUart:BUART:rx_count_1\ * 
              !\BleUart:BUART:rx_count_0\
        );
        Output = \BleUart:BUART:rx_bitclk_enable\ (fanout=6)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,2)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\BleUart:BUART:sRX:RxShifter:u0\
    PORT MAP (
        clock => \BleUart:Net_9\ ,
        cs_addr_2 => \BleUart:BUART:tx_ctrl_mark_last\ ,
        cs_addr_1 => \BleUart:BUART:rx_state_0\ ,
        cs_addr_0 => \BleUart:BUART:rx_bitclk_enable\ ,
        route_si => \BleUart:BUART:rx_postpoll\ ,
        f0_load => \BleUart:BUART:rx_load_fifo\ ,
        f0_bus_stat_comb => \BleUart:BUART:rx_fifonotempty\ ,
        f0_blk_stat_comb => \BleUart:BUART:rx_fifofull\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

count7cell: Name =\BleUart:BUART:sRX:RxBitCounter\
    PORT MAP (
        clock => \BleUart:Net_9\ ,
        load => \BleUart:BUART:rx_counter_load\ ,
        count_6 => \BleUart:BUART:rx_count_6\ ,
        count_5 => \BleUart:BUART:rx_count_5\ ,
        count_4 => \BleUart:BUART:rx_count_4\ ,
        count_3 => \BleUart:BUART:rx_count_3\ ,
        count_2 => \BleUart:BUART:rx_count_2\ ,
        count_1 => \BleUart:BUART:rx_count_1\ ,
        count_0 => \BleUart:BUART:rx_count_0\ ,
        tc => \BleUart:BUART:rx_count7_tc\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "1110010"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,3)] is empty.
UDB [UDB=(0,4)] is empty.
UDB [UDB=(0,5)] is empty.
UDB [UDB=(1,0)] is empty.
UDB [UDB=(1,1)] contents:
LAB@[UDB=(1,1)][LB=0] #macrocells=3, #inputs=4, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=Net_13, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: PosEdge(\ADC_IR:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_IR:bSAR_SEQ:bus_clk_nrq_reg\ * !\ADC_IR:bSAR_SEQ:nrq_reg\
        );
        Output = Net_13 (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:bSAR_SEQ:nrq_reg\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: PosEdge(\ADC_IR:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_IR:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_IR:bSAR_SEQ:nrq_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\BleUart:BUART:rx_status_4\, Mode=(Combinatorial) @ [UDB=(1,1)][LB=0][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \BleUart:BUART:rx_load_fifo\ * \BleUart:BUART:rx_fifofull\
        );
        Output = \BleUart:BUART:rx_status_4\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,1)][LB=1] #macrocells=2, #inputs=5, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC_IR:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_13
            + \ADC_IR:Net_3935\
        );
        Output = \ADC_IR:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\BleUart:BUART:rx_status_5\, Mode=(Combinatorial) @ [UDB=(1,1)][LB=1][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \BleUart:BUART:rx_fifonotempty\ * 
              \BleUart:BUART:rx_state_stop1_reg\
        );
        Output = \BleUart:BUART:rx_status_5\ (fanout=1)
        Properties               : 
        {
        }
}

statusicell: Name =\BleUart:BUART:sRX:RxSts\
    PORT MAP (
        clock => \BleUart:Net_9\ ,
        status_5 => \BleUart:BUART:rx_status_5\ ,
        status_4 => \BleUart:BUART:rx_status_4\ ,
        status_3 => \BleUart:BUART:rx_status_3\ ,
        interrupt => Net_893 );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "1011111"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,2)] contents:
LAB@[UDB=(1,2)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,2)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)
        Properties               : 
        {
        }
}

statuscell: Name =\ADC_IR:bSAR_SEQ:EOCSts\
    PORT MAP (
        clock => \ADC_IR:clock\ ,
        status_0 => Net_13 ,
        clk_en => \ADC_IR:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000001"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_IR:bSAR_SEQ:enable\)

UDB [UDB=(1,3)] contents:
LAB@[UDB=(1,3)][LB=1] #macrocells=1, #inputs=0, #pterms=0
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=__ONE__, Mode=(Combinatorial) @ [UDB=(1,3)][LB=1][MC=3]
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = __ONE__ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(1,4)] is empty.
UDB [UDB=(1,5)] is empty.
UDB [UDB=(2,0)] contents:
LAB@[UDB=(2,0)][LB=0] #macrocells=4, #inputs=4, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\MotorControl:PWMUDB:status_0\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_242) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\MotorControl:PWMUDB:prevCompare1\ * 
              \MotorControl:PWMUDB:cmp1_less\
        );
        Output = \MotorControl:PWMUDB:status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\MotorControl:PWMUDB:prevCompare1\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_242) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \MotorControl:PWMUDB:cmp1_less\
        );
        Output = \MotorControl:PWMUDB:prevCompare1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=Net_691, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_242) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \MotorControl:PWMUDB:runmode_enable\ * 
              \MotorControl:PWMUDB:cmp1_less\
        );
        Output = Net_691 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\MotorControl:PWMUDB:status_2\, Mode=(Combinatorial) @ [UDB=(2,0)][LB=0][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \MotorControl:PWMUDB:runmode_enable\ * 
              \MotorControl:PWMUDB:tc_i\
        );
        Output = \MotorControl:PWMUDB:status_2\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,0)][LB=1] #macrocells=4, #inputs=4, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=Net_690, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_242) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \MotorControl:PWMUDB:runmode_enable\ * 
              \MotorControl:PWMUDB:cmp2_less\
        );
        Output = Net_690 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\MotorControl:PWMUDB:prevCompare2\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_242) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \MotorControl:PWMUDB:cmp2_less\
        );
        Output = \MotorControl:PWMUDB:prevCompare2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\MotorControl:PWMUDB:status_1\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_242) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\MotorControl:PWMUDB:prevCompare2\ * 
              \MotorControl:PWMUDB:cmp2_less\
        );
        Output = \MotorControl:PWMUDB:status_1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\MotorControl:PWMUDB:runmode_enable\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_242) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \MotorControl:PWMUDB:control_7\
        );
        Output = \MotorControl:PWMUDB:runmode_enable\ (fanout=4)
        Properties               : 
        {
        }
}

datapathcell: Name =\MotorControl:PWMUDB:sP8:pwmdp:u0\
    PORT MAP (
        clock => Net_242 ,
        cs_addr_2 => \MotorControl:PWMUDB:tc_i\ ,
        cs_addr_1 => \MotorControl:PWMUDB:runmode_enable\ ,
        cl0_comb => \MotorControl:PWMUDB:cmp1_less\ ,
        z0_comb => \MotorControl:PWMUDB:tc_i\ ,
        cl1_comb => \MotorControl:PWMUDB:cmp2_less\ ,
        f1_blk_stat_comb => \MotorControl:PWMUDB:status_3\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

statusicell: Name =\MotorControl:PWMUDB:genblk8:stsreg\
    PORT MAP (
        clock => Net_242 ,
        status_3 => \MotorControl:PWMUDB:status_3\ ,
        status_2 => \MotorControl:PWMUDB:status_2\ ,
        status_1 => \MotorControl:PWMUDB:status_1\ ,
        status_0 => \MotorControl:PWMUDB:status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0100111"
    }
    Clock Polarity: Active High
    Clock Enable: True

controlcell: Name =\MotorControl:PWMUDB:genblk1:ctrlreg\
    PORT MAP (
        clock => Net_242 ,
        control_7 => \MotorControl:PWMUDB:control_7\ ,
        control_6 => \MotorControl:PWMUDB:control_6\ ,
        control_5 => \MotorControl:PWMUDB:control_5\ ,
        control_4 => \MotorControl:PWMUDB:control_4\ ,
        control_3 => \MotorControl:PWMUDB:control_3\ ,
        control_2 => \MotorControl:PWMUDB:control_2\ ,
        control_1 => \MotorControl:PWMUDB:control_1\ ,
        control_0 => \MotorControl:PWMUDB:control_0\ );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,1)] contents:
LAB@[UDB=(2,1)][LB=0] #macrocells=3, #inputs=8, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:ch_addr_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_old_id_0\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,1)][LB=1] #macrocells=4, #inputs=10, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=Net_780, Mode=(Combinatorial) @ [UDB=(2,1)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\BleUart:BUART:txn\
        );
        Output = Net_780 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:ch_addr_5\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_old_id_5\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:ch_addr_3\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_old_id_3\ (fanout=66)
        Properties               : 
        {
        }
}

controlcell: Name =\TriggerReg:Sync:ctrl_reg\
    PORT MAP (
        control_7 => \TriggerReg:control_7\ ,
        control_6 => \TriggerReg:control_6\ ,
        control_5 => \TriggerReg:control_5\ ,
        control_4 => \TriggerReg:control_4\ ,
        control_3 => \TriggerReg:control_3\ ,
        control_2 => \TriggerReg:control_2\ ,
        control_1 => \TriggerReg:control_1\ ,
        control_0 => Net_411 );
    Properties:
    {
        cy_ctrl_mode_0 = "00000000"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Enable: True

synccell: Name =\ADC_IR:Sync:genblk1[0]:INST\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        in => \ADC_IR:nrq\ ,
        out => \ADC_IR:Net_3935\ );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,2)] contents:
LAB@[UDB=(2,2)][LB=0] #macrocells=4, #inputs=11, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:ch_addr_4\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_old_id_4\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:ch_addr_2\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_old_id_2\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial) @ [UDB=(2,2)][LB=0][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_529 * !\ADC_IR:bSAR_SEQ:load_period\
        );
        Output = \ADC_IR:bSAR_SEQ:cnt_enable\ (fanout=2)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,2)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)
        Properties               : 
        {
        }
}

count7cell: Name =\ADC_IR:bSAR_SEQ:ChannelCounter\
    PORT MAP (
        clock => \ADC_IR:clock\ ,
        load => \ADC_IR:bSAR_SEQ:load_period\ ,
        enable => \ADC_IR:bSAR_SEQ:cnt_enable\ ,
        count_6 => \ADC_IR:bSAR_SEQ:count_6\ ,
        count_5 => \ADC_IR:ch_addr_5\ ,
        count_4 => \ADC_IR:ch_addr_4\ ,
        count_3 => \ADC_IR:ch_addr_3\ ,
        count_2 => \ADC_IR:ch_addr_2\ ,
        count_1 => \ADC_IR:ch_addr_1\ ,
        count_0 => \ADC_IR:ch_addr_0\ ,
        tc => \ADC_IR:bSAR_SEQ:cnt_tc\ ,
        clk_en => \ADC_IR:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0000111"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_IR:bSAR_SEQ:enable\)

UDB [UDB=(2,3)] contents:
LAB@[UDB=(2,3)][LB=0] #macrocells=2, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial) @ [UDB=(2,3)][LB=0][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * !\ADC_IR:ch_addr_5\
            + \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * !\ADC_IR:ch_addr_4\
            + \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * !\ADC_IR:ch_addr_3\
            + \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * !\ADC_IR:ch_addr_2\
            + !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * \ADC_IR:ch_addr_1\
            + \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * !\ADC_IR:ch_addr_1\
            + !\ADC_IR:AMuxHw_2_Decoder_old_id_0\ * \ADC_IR:ch_addr_0\
            + \ADC_IR:AMuxHw_2_Decoder_old_id_0\ * !\ADC_IR:ch_addr_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_is_active_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\BleUart:BUART:tx_ctrl_mark_last\, Mode=(T-Register) @ [UDB=(2,3)][LB=0][MC=1]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \BleUart:BUART:tx_ctrl_mark_last\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,3)][LB=1] #macrocells=3, #inputs=11, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=Net_666, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_665) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_664
        );
        Output = Net_666 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial) @ [UDB=(2,3)][LB=1][MC=1]
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * \ADC_IR:ch_addr_5\
            + !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * \ADC_IR:ch_addr_4\
            + !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * \ADC_IR:ch_addr_3\
            + !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * \ADC_IR:ch_addr_2\
            + \ADC_IR:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    [McSlotId=2]:     MacroCell: Name=\BleUart:BUART:tx_status_2\, Mode=(Combinatorial) @ [UDB=(2,3)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\BleUart:BUART:tx_fifo_notfull\
        );
        Output = \BleUart:BUART:tx_status_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

controlcell: Name =\ADC_IR:bSAR_SEQ:CtrlReg\
    PORT MAP (
        clock => \ADC_IR:clock\ ,
        control_7 => \ADC_IR:bSAR_SEQ:control_7\ ,
        control_6 => \ADC_IR:bSAR_SEQ:control_6\ ,
        control_5 => \ADC_IR:bSAR_SEQ:control_5\ ,
        control_4 => \ADC_IR:bSAR_SEQ:control_4\ ,
        control_3 => \ADC_IR:bSAR_SEQ:control_3\ ,
        control_2 => \ADC_IR:bSAR_SEQ:control_2\ ,
        control_1 => \ADC_IR:bSAR_SEQ:load_period\ ,
        control_0 => \ADC_IR:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_ctrl_mode_0 = "00000111"
        cy_ctrl_mode_1 = "00000110"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,4)] contents:
LAB@[UDB=(2,4)][LB=0] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:ch_addr_1\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_old_id_1\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,4)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)
        Properties               : 
        {
        }
}

statusicell: Name =\BleUart:BUART:sTX:TxSts\
    PORT MAP (
        clock => \BleUart:Net_9\ ,
        status_3 => \BleUart:BUART:tx_fifo_notfull\ ,
        status_2 => \BleUart:BUART:tx_status_2\ ,
        status_1 => \BleUart:BUART:tx_fifo_empty\ ,
        status_0 => \BleUart:BUART:tx_status_0\ ,
        interrupt => Net_786 );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0000001"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,5)] contents:
LAB@[UDB=(2,5)][LB=0] #macrocells=2, #inputs=7, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\BleUart:BUART:tx_state_0\, Mode=(T-Register) @ [UDB=(2,5)][LB=0][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\BleUart:BUART:tx_state_1\ * !\BleUart:BUART:tx_state_0\ * 
              \BleUart:BUART:tx_bitclk_enable_pre\ * 
              !\BleUart:BUART:tx_fifo_empty\
            + !\BleUart:BUART:tx_state_1\ * !\BleUart:BUART:tx_state_0\ * 
              !\BleUart:BUART:tx_fifo_empty\ * !\BleUart:BUART:tx_state_2\
            + \BleUart:BUART:tx_state_1\ * \BleUart:BUART:tx_state_0\ * 
              \BleUart:BUART:tx_bitclk_enable_pre\ * 
              \BleUart:BUART:tx_fifo_empty\ * \BleUart:BUART:tx_state_2\
            + \BleUart:BUART:tx_state_0\ * !\BleUart:BUART:tx_state_2\ * 
              \BleUart:BUART:tx_bitclk\
        );
        Output = \BleUart:BUART:tx_state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\BleUart:BUART:tx_state_2\, Mode=(T-Register) @ [UDB=(2,5)][LB=0][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\BleUart:BUART:tx_state_1\ * !\BleUart:BUART:tx_state_0\ * 
              \BleUart:BUART:tx_bitclk_enable_pre\ * 
              \BleUart:BUART:tx_state_2\
            + \BleUart:BUART:tx_state_1\ * \BleUart:BUART:tx_state_0\ * 
              \BleUart:BUART:tx_bitclk_enable_pre\ * 
              \BleUart:BUART:tx_state_2\
            + \BleUart:BUART:tx_state_1\ * \BleUart:BUART:tx_state_0\ * 
              !\BleUart:BUART:tx_state_2\ * \BleUart:BUART:tx_bitclk\
            + \BleUart:BUART:tx_state_1\ * !\BleUart:BUART:tx_state_2\ * 
              \BleUart:BUART:tx_counter_dp\ * \BleUart:BUART:tx_bitclk\
        );
        Output = \BleUart:BUART:tx_state_2\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,5)][LB=1] #macrocells=2, #inputs=9, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=\BleUart:BUART:txn\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \BleUart:BUART:txn\ * \BleUart:BUART:tx_state_1\ * 
              !\BleUart:BUART:tx_bitclk\
            + \BleUart:BUART:txn\ * \BleUart:BUART:tx_state_2\
            + !\BleUart:BUART:tx_state_1\ * \BleUart:BUART:tx_state_0\ * 
              !\BleUart:BUART:tx_shift_out\ * !\BleUart:BUART:tx_state_2\
            + !\BleUart:BUART:tx_state_1\ * \BleUart:BUART:tx_state_0\ * 
              !\BleUart:BUART:tx_state_2\ * !\BleUart:BUART:tx_bitclk\
            + \BleUart:BUART:tx_state_1\ * !\BleUart:BUART:tx_state_0\ * 
              !\BleUart:BUART:tx_shift_out\ * !\BleUart:BUART:tx_state_2\ * 
              !\BleUart:BUART:tx_counter_dp\ * \BleUart:BUART:tx_bitclk\
        );
        Output = \BleUart:BUART:txn\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\BleUart:BUART:tx_status_0\, Mode=(Combinatorial) @ [UDB=(2,5)][LB=1][MC=1]
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\BleUart:BUART:tx_state_1\ * !\BleUart:BUART:tx_state_0\ * 
              \BleUart:BUART:tx_bitclk_enable_pre\ * 
              \BleUart:BUART:tx_fifo_empty\ * \BleUart:BUART:tx_state_2\
        );
        Output = \BleUart:BUART:tx_status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

datapathcell: Name =\BleUart:BUART:sTX:TxShifter:u0\
    PORT MAP (
        clock => \BleUart:Net_9\ ,
        cs_addr_2 => \BleUart:BUART:tx_state_1\ ,
        cs_addr_1 => \BleUart:BUART:tx_state_0\ ,
        cs_addr_0 => \BleUart:BUART:tx_bitclk_enable_pre\ ,
        so_comb => \BleUart:BUART:tx_shift_out\ ,
        f0_bus_stat_comb => \BleUart:BUART:tx_fifo_notfull\ ,
        f0_blk_stat_comb => \BleUart:BUART:tx_fifo_empty\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(3,0)] contents:
LAB@[UDB=(3,0)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,0)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

UDB [UDB=(3,1)] contents:
LAB@[UDB=(3,1)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(3,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,2)] contents:
LAB@[UDB=(3,2)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,2)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,3)] contents:
LAB@[UDB=(3,3)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,3)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,4)] contents:
LAB@[UDB=(3,4)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,4)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,5)] contents:
LAB@[UDB=(3,5)][LB=0] #macrocells=3, #inputs=6, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\BleUart:BUART:tx_state_1\, Mode=(T-Register) @ [UDB=(3,5)][LB=0][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \BleUart:BUART:tx_state_1\ * \BleUart:BUART:tx_state_0\ * 
              \BleUart:BUART:tx_bitclk_enable_pre\ * 
              \BleUart:BUART:tx_state_2\
            + \BleUart:BUART:tx_state_1\ * !\BleUart:BUART:tx_state_2\ * 
              \BleUart:BUART:tx_counter_dp\ * \BleUart:BUART:tx_bitclk\
            + \BleUart:BUART:tx_state_0\ * !\BleUart:BUART:tx_state_2\ * 
              \BleUart:BUART:tx_bitclk\
        );
        Output = \BleUart:BUART:tx_state_1\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\BleUart:BUART:tx_bitclk\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\BleUart:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\BleUart:BUART:tx_state_1\ * !\BleUart:BUART:tx_state_0\ * 
              \BleUart:BUART:tx_state_2\
            + !\BleUart:BUART:tx_bitclk_enable_pre\
        );
        Output = \BleUart:BUART:tx_bitclk\ (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\BleUart:BUART:counter_load_not\, Mode=(Combinatorial) @ [UDB=(3,5)][LB=0][MC=2]
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\BleUart:BUART:tx_state_1\ * !\BleUart:BUART:tx_state_0\ * 
              \BleUart:BUART:tx_bitclk_enable_pre\
            + !\BleUart:BUART:tx_state_1\ * !\BleUart:BUART:tx_state_0\ * 
              !\BleUart:BUART:tx_state_2\
        );
        Output = \BleUart:BUART:counter_load_not\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(3,5)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\BleUart:BUART:sTX:sCLOCK:TxBitClkGen\
    PORT MAP (
        clock => \BleUart:Net_9\ ,
        cs_addr_0 => \BleUart:BUART:counter_load_not\ ,
        ce0_reg => \BleUart:BUART:tx_bitclk_enable_pre\ ,
        ce1_reg => \BleUart:BUART:tx_counter_dp\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

Intr container @ [IntrContainer=(0)]: 
  Intr@ [IntrContainer=(0)][IntrId=(0)] 
    interrupt: Name =BleRxISR
        PORT MAP (
            interrupt => Net_893 );
        Properties:
        {
            int_type = "00"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(1)] 
    interrupt: Name =BleTxISR
        PORT MAP (
            interrupt => Net_786 );
        Properties:
        {
            int_type = "00"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(2)] 
    interrupt: Name =EnMotorISR
        PORT MAP (
            interrupt => Net_666 );
        Properties:
        {
            int_type = "00"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(3)] 
    interrupt: Name =SendBleDataISR
        PORT MAP (
            interrupt => Net_1144 );
        Properties:
        {
            int_type = "00"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(4)] 
    interrupt: Name =\ADC_IR:IRQ\
        PORT MAP (
            interrupt => Net_13 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(5)] 
    interrupt: Name =readIRSensors
        PORT MAP (
            interrupt => Net_13 );
        Properties:
        {
            int_type = "00"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(17)] 
    interrupt: Name =isrUltraSonen
        PORT MAP (
            interrupt => Net_430 );
        Properties:
        {
            int_type = "00"
            is_nmi = 0
        }
Drq container @ [DrqContainer=(0)]: 
  Dma@ [DrqContainer=(0)][DrqId=(0)] 
    drqcell: Name =\ADC_IR:FinalBuf\
        PORT MAP (
            dmareq => \ADC_IR:Net_3698\ ,
            termin => zero ,
            termout => \ADC_IR:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqContainer=(0)][DrqId=(1)] 
    drqcell: Name =\ADC_IR:TempBuf\
        PORT MAP (
            dmareq => \ADC_IR:Net_3830\ ,
            termin => zero ,
            termout => \ADC_IR:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
Port 0 contains the following IO cells:
[IoId=0]: 
Pin : Name = IR1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => IR1(0)__PA ,
        analog_term => Net_14 ,
        pad => IR1(0)_PAD ,
        pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_0\ );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = IR2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => IR2(0)__PA ,
        analog_term => Net_15 ,
        pad => IR2(0)_PAD ,
        pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_1\ );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = IR3(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => IR3(0)__PA ,
        analog_term => Net_17 ,
        pad => IR3(0)_PAD ,
        pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_2\ );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = IR4(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => IR4(0)__PA ,
        analog_term => Net_18 ,
        pad => IR4(0)_PAD ,
        pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_3\ );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = IR5(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => IR5(0)__PA ,
        analog_term => Net_20 ,
        pad => IR5(0)_PAD ,
        pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_4\ );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = IR6(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => IR6(0)__PA ,
        analog_term => Net_22 ,
        pad => IR6(0)_PAD ,
        pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_5\ );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = IR7(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => IR7(0)__PA ,
        analog_term => Net_23 ,
        pad => IR7(0)_PAD ,
        pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_6\ );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = IR8(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => IR8(0)__PA ,
        analog_term => Net_25 ,
        pad => IR8(0)_PAD ,
        pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_7\ );
    Properties:
    {
    }

Port 1 contains the following IO cells:
[IoId=2]: 
Pin : Name = ENA(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => ENA(0)__PA ,
        pad => ENA(0)_PAD );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = IN1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => IN1(0)__PA ,
        pin_input => Net_691 ,
        pad => IN1(0)_PAD );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = IN2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => IN2(0)__PA ,
        pad => IN2(0)_PAD );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = IN3(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => IN3(0)__PA ,
        pin_input => Net_690 ,
        pad => IN3(0)_PAD );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = IN4(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => IN4(0)__PA ,
        pad => IN4(0)_PAD );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = ENB(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => ENB(0)__PA ,
        pad => ENB(0)_PAD );
    Properties:
    {
    }

Port 2 contains the following IO cells:
[IoId=0]: 
Pin : Name = \LCD:LCDPort(0)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD:LCDPort(0)\__PA ,
        pad => \LCD:LCDPort(0)_PAD\ );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = \LCD:LCDPort(1)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD:LCDPort(1)\__PA ,
        pad => \LCD:LCDPort(1)_PAD\ );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = \LCD:LCDPort(2)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD:LCDPort(2)\__PA ,
        pad => \LCD:LCDPort(2)_PAD\ );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = \LCD:LCDPort(3)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD:LCDPort(3)\__PA ,
        pad => \LCD:LCDPort(3)_PAD\ );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = \LCD:LCDPort(4)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD:LCDPort(4)\__PA ,
        pad => \LCD:LCDPort(4)_PAD\ );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = \LCD:LCDPort(5)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD:LCDPort(5)\__PA ,
        pad => \LCD:LCDPort(5)_PAD\ );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = \LCD:LCDPort(6)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD:LCDPort(6)\__PA ,
        pad => \LCD:LCDPort(6)_PAD\ );
    Properties:
    {
    }

Port 3 contains the following IO cells:
[IoId=0]: 
Pin : Name = LED1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => LED1(0)__PA ,
        pad => LED1(0)_PAD );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = LED2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => LED2(0)__PA ,
        pad => LED2(0)_PAD );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = LED3(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => LED3(0)__PA ,
        pad => LED3(0)_PAD );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = LED4(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => LED4(0)__PA ,
        pad => LED4(0)_PAD );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = LED5(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => LED5(0)__PA ,
        pad => LED5(0)_PAD );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = SW1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_UP
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => SW1(0)__PA ,
        pad => SW1(0)_PAD );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = SW2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_UP
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => SW2(0)__PA ,
        fb => Net_664 ,
        pad => SW2(0)_PAD );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = Dedicated_Output
    Attributes:
        In Group/Port: False
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Dedicated_Output__PA ,
        analog_term => Net_812 );
    Properties:
    {
    }

Port 12 contains the following IO cells:
[IoId=4]: 
Pin : Name = BleKey(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: True
        SIO Output Buf: REGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: HIGH
        SIO Hyst: ENABLED
        SIO Vtrip: MULTIPLIER_0_4_OR_1
        SIO Multiplier Index: 0
        SIO RefSel: VOHREF
        Required Capabilities: DIGITAL, SIO
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => BleKey(0)__PA ,
        pad => BleKey(0)_PAD );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = BleState(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: LVTTL
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => BleState(0)__PA ,
        pad => BleState(0)_PAD );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = BleTx(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: True
        SIO Output Buf: REGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: HIGH
        SIO Hyst: ENABLED
        SIO Vtrip: MULTIPLIER_0_4_OR_1
        SIO Multiplier Index: 0
        SIO RefSel: VOHREF
        Required Capabilities: DIGITAL, ROUTABLE, SIO
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => BleTx(0)__PA ,
        pin_input => Net_780 ,
        pad => BleTx(0)_PAD );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = BleRx(0)
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: LVTTL
        Slew: FAST
        Input Sync needed: True
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => BleRx(0)__PA ,
        fb => Net_785 ,
        pad => BleRx(0)_PAD );
    Properties:
    {
    }

Port 15 contains the following IO cells:
ARM group 0: empty
CAN group 0: empty
Cache group 0: empty
CapSense group 0: empty
Clock group 0: 
    Clock Block @ F(Clock,0): 
    clockblockcell: Name =ClockBlock
        PORT MAP (
            imo => ClockBlock_IMO ,
            pllout => ClockBlock_PLL_OUT ,
            ilo => ClockBlock_ILO ,
            clk_100k => ClockBlock_100k ,
            clk_1k => ClockBlock_1k ,
            clk_32k => ClockBlock_32k ,
            xtal => ClockBlock_XTAL ,
            clk_32k_xtal => ClockBlock_XTAL_32KHZ ,
            clk_sync => ClockBlock_MASTER_CLK ,
            clk_bus_glb => ClockBlock_BUS_CLK ,
            clk_bus => ClockBlock_BUS_CLK_local ,
            dclk_glb_0 => \ADC_IR:clock\ ,
            dclk_0 => \ADC_IR:clock_local\ ,
            dclk_glb_1 => \BleUart:Net_9\ ,
            dclk_1 => \BleUart:Net_9_local\ ,
            dclk_glb_2 => Net_10 ,
            dclk_2 => Net_10_local ,
            dclk_glb_3 => Net_242 ,
            dclk_3 => Net_242_local ,
            dclk_glb_4 => Net_665 ,
            dclk_4 => Net_665_local );
        Properties:
        {
        }
Comparator group 0: empty
DFB group 0: empty
DSM group 0: empty
Decimator group 0: empty
EMIF group 0: empty
I2C group 0: empty
LCD group 0: empty
LVD group 0: empty
PICU group 0: empty
PM group 0: empty
SC group 0: empty
SPC group 0: empty
Timer group 0: 
    Timer Block @ F(Timer,0): 
    timercell: Name =\TimerUS:TimerHW\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            enable => __ZERO__ ,
            timer_reset => Net_411 ,
            tc => \TimerUS:Net_51\ ,
            cmp => \TimerUS:Net_261\ ,
            irq => Net_430 );
        Properties:
        {
            cy_registers = ""
        }
    Timer Block @ F(Timer,1): 
    timercell: Name =\sendBleDataTimer:TimerHW\
        PORT MAP (
            clock => Net_10 ,
            enable => __ONE__ ,
            tc => Net_1144 ,
            cmp => \sendBleDataTimer:Net_261\ ,
            irq => \sendBleDataTimer:Net_57\ );
        Properties:
        {
            cy_registers = ""
        }
USB group 0: empty
VIDAC group 0: 
    VIDAC Block @ F(VIDAC,3): 
    vidaccell: Name =\BleVDAC:viDAC8\
        PORT MAP (
            vout => Net_705 ,
            iout => \BleVDAC:Net_77\ );
        Properties:
        {
            cy_registers = ""
            is_all_if_any = 0
            reg_data = 0
        }
OpAmp group 0: 
    Opamp Block @ F(OpAmp,3): 
    abufcell: Name =\BleBuffer:ABuf\
        PORT MAP (
            vplus => Net_705 ,
            vminus => Net_812 ,
            vout => Net_812 );
        Properties:
        {
            cy_registers = ""
        }
CsAbuf group 0: empty
Vref group 0: 
    Vref Block @ F(Vref,13): 
    vrefcell: Name =\ADC_IR:SAR:vRef_Vdda_1\
        PORT MAP (
            vout => \ADC_IR:SAR:Net_235\ );
        Properties:
        {
            autoenable = 1
            guid = "4720866E-BC14-478d-B8A0-3E44F38CADAC"
            ignoresleep = 0
            name = "Vdda/2"
        }
LPF group 0: empty
SAR group 0: 
    SAR Block @ F(SAR,0): 
    sarcell: Name =\ADC_IR:SAR:ADC_SAR\
        PORT MAP (
            vplus => \ADC_IR:Net_2803\ ,
            vminus => \ADC_IR:SAR:Net_126\ ,
            ext_pin => \ADC_IR:SAR:Net_209\ ,
            vrefhi_out => \ADC_IR:SAR:Net_126\ ,
            vref => \ADC_IR:SAR:Net_235\ ,
            clk_udb => \ADC_IR:clock_local\ ,
            irq => \ADC_IR:SAR:Net_252\ ,
            next => Net_529 ,
            data_out_udb_11 => \ADC_IR:SAR:Net_207_11\ ,
            data_out_udb_10 => \ADC_IR:SAR:Net_207_10\ ,
            data_out_udb_9 => \ADC_IR:SAR:Net_207_9\ ,
            data_out_udb_8 => \ADC_IR:SAR:Net_207_8\ ,
            data_out_udb_7 => \ADC_IR:SAR:Net_207_7\ ,
            data_out_udb_6 => \ADC_IR:SAR:Net_207_6\ ,
            data_out_udb_5 => \ADC_IR:SAR:Net_207_5\ ,
            data_out_udb_4 => \ADC_IR:SAR:Net_207_4\ ,
            data_out_udb_3 => \ADC_IR:SAR:Net_207_3\ ,
            data_out_udb_2 => \ADC_IR:SAR:Net_207_2\ ,
            data_out_udb_1 => \ADC_IR:SAR:Net_207_1\ ,
            data_out_udb_0 => \ADC_IR:SAR:Net_207_0\ ,
            eof_udb => \ADC_IR:Net_3830\ );
        Properties:
        {
            cy_registers = ""
        }
ANAIF group 0: empty
PHUB group 0: empty

Blocks not positioned by the digital component placer:
    Amux Block @ <No Location>: 
    amuxcell: Name =\ADC_IR:AMuxHw_2\
        PORT MAP (
            muxin_63 => Net_616 ,
            muxin_62 => Net_615 ,
            muxin_61 => Net_614 ,
            muxin_60 => Net_613 ,
            muxin_59 => Net_612 ,
            muxin_58 => Net_611 ,
            muxin_57 => Net_610 ,
            muxin_56 => Net_609 ,
            muxin_55 => Net_608 ,
            muxin_54 => Net_607 ,
            muxin_53 => Net_606 ,
            muxin_52 => Net_605 ,
            muxin_51 => Net_604 ,
            muxin_50 => Net_603 ,
            muxin_49 => Net_602 ,
            muxin_48 => Net_601 ,
            muxin_47 => Net_600 ,
            muxin_46 => Net_598 ,
            muxin_45 => Net_596 ,
            muxin_44 => Net_595 ,
            muxin_43 => Net_593 ,
            muxin_42 => Net_591 ,
            muxin_41 => Net_590 ,
            muxin_40 => Net_588 ,
            muxin_39 => Net_586 ,
            muxin_38 => Net_585 ,
            muxin_37 => Net_583 ,
            muxin_36 => Net_581 ,
            muxin_35 => Net_580 ,
            muxin_34 => Net_578 ,
            muxin_33 => Net_576 ,
            muxin_32 => Net_575 ,
            muxin_31 => Net_573 ,
            muxin_30 => Net_571 ,
            muxin_29 => Net_570 ,
            muxin_28 => Net_568 ,
            muxin_27 => Net_566 ,
            muxin_26 => Net_565 ,
            muxin_25 => Net_563 ,
            muxin_24 => Net_561 ,
            muxin_23 => Net_560 ,
            muxin_22 => Net_558 ,
            muxin_21 => Net_556 ,
            muxin_20 => Net_555 ,
            muxin_19 => Net_553 ,
            muxin_18 => Net_551 ,
            muxin_17 => Net_550 ,
            muxin_16 => Net_548 ,
            muxin_15 => Net_546 ,
            muxin_14 => Net_545 ,
            muxin_13 => Net_543 ,
            muxin_12 => Net_541 ,
            muxin_11 => Net_540 ,
            muxin_10 => Net_538 ,
            muxin_9 => Net_536 ,
            muxin_8 => Net_535 ,
            muxin_7 => Net_25 ,
            muxin_6 => Net_23 ,
            muxin_5 => Net_22 ,
            muxin_4 => Net_20 ,
            muxin_3 => Net_18 ,
            muxin_2 => Net_17 ,
            muxin_1 => Net_15 ,
            muxin_0 => Net_14 ,
            hw_ctrl_en_63 => \ADC_IR:AMuxHw_2_Decoder_one_hot_63\ ,
            hw_ctrl_en_62 => \ADC_IR:AMuxHw_2_Decoder_one_hot_62\ ,
            hw_ctrl_en_61 => \ADC_IR:AMuxHw_2_Decoder_one_hot_61\ ,
            hw_ctrl_en_60 => \ADC_IR:AMuxHw_2_Decoder_one_hot_60\ ,
            hw_ctrl_en_59 => \ADC_IR:AMuxHw_2_Decoder_one_hot_59\ ,
            hw_ctrl_en_58 => \ADC_IR:AMuxHw_2_Decoder_one_hot_58\ ,
            hw_ctrl_en_57 => \ADC_IR:AMuxHw_2_Decoder_one_hot_57\ ,
            hw_ctrl_en_56 => \ADC_IR:AMuxHw_2_Decoder_one_hot_56\ ,
            hw_ctrl_en_55 => \ADC_IR:AMuxHw_2_Decoder_one_hot_55\ ,
            hw_ctrl_en_54 => \ADC_IR:AMuxHw_2_Decoder_one_hot_54\ ,
            hw_ctrl_en_53 => \ADC_IR:AMuxHw_2_Decoder_one_hot_53\ ,
            hw_ctrl_en_52 => \ADC_IR:AMuxHw_2_Decoder_one_hot_52\ ,
            hw_ctrl_en_51 => \ADC_IR:AMuxHw_2_Decoder_one_hot_51\ ,
            hw_ctrl_en_50 => \ADC_IR:AMuxHw_2_Decoder_one_hot_50\ ,
            hw_ctrl_en_49 => \ADC_IR:AMuxHw_2_Decoder_one_hot_49\ ,
            hw_ctrl_en_48 => \ADC_IR:AMuxHw_2_Decoder_one_hot_48\ ,
            hw_ctrl_en_47 => \ADC_IR:AMuxHw_2_Decoder_one_hot_47\ ,
            hw_ctrl_en_46 => \ADC_IR:AMuxHw_2_Decoder_one_hot_46\ ,
            hw_ctrl_en_45 => \ADC_IR:AMuxHw_2_Decoder_one_hot_45\ ,
            hw_ctrl_en_44 => \ADC_IR:AMuxHw_2_Decoder_one_hot_44\ ,
            hw_ctrl_en_43 => \ADC_IR:AMuxHw_2_Decoder_one_hot_43\ ,
            hw_ctrl_en_42 => \ADC_IR:AMuxHw_2_Decoder_one_hot_42\ ,
            hw_ctrl_en_41 => \ADC_IR:AMuxHw_2_Decoder_one_hot_41\ ,
            hw_ctrl_en_40 => \ADC_IR:AMuxHw_2_Decoder_one_hot_40\ ,
            hw_ctrl_en_39 => \ADC_IR:AMuxHw_2_Decoder_one_hot_39\ ,
            hw_ctrl_en_38 => \ADC_IR:AMuxHw_2_Decoder_one_hot_38\ ,
            hw_ctrl_en_37 => \ADC_IR:AMuxHw_2_Decoder_one_hot_37\ ,
            hw_ctrl_en_36 => \ADC_IR:AMuxHw_2_Decoder_one_hot_36\ ,
            hw_ctrl_en_35 => \ADC_IR:AMuxHw_2_Decoder_one_hot_35\ ,
            hw_ctrl_en_34 => \ADC_IR:AMuxHw_2_Decoder_one_hot_34\ ,
            hw_ctrl_en_33 => \ADC_IR:AMuxHw_2_Decoder_one_hot_33\ ,
            hw_ctrl_en_32 => \ADC_IR:AMuxHw_2_Decoder_one_hot_32\ ,
            hw_ctrl_en_31 => \ADC_IR:AMuxHw_2_Decoder_one_hot_31\ ,
            hw_ctrl_en_30 => \ADC_IR:AMuxHw_2_Decoder_one_hot_30\ ,
            hw_ctrl_en_29 => \ADC_IR:AMuxHw_2_Decoder_one_hot_29\ ,
            hw_ctrl_en_28 => \ADC_IR:AMuxHw_2_Decoder_one_hot_28\ ,
            hw_ctrl_en_27 => \ADC_IR:AMuxHw_2_Decoder_one_hot_27\ ,
            hw_ctrl_en_26 => \ADC_IR:AMuxHw_2_Decoder_one_hot_26\ ,
            hw_ctrl_en_25 => \ADC_IR:AMuxHw_2_Decoder_one_hot_25\ ,
            hw_ctrl_en_24 => \ADC_IR:AMuxHw_2_Decoder_one_hot_24\ ,
            hw_ctrl_en_23 => \ADC_IR:AMuxHw_2_Decoder_one_hot_23\ ,
            hw_ctrl_en_22 => \ADC_IR:AMuxHw_2_Decoder_one_hot_22\ ,
            hw_ctrl_en_21 => \ADC_IR:AMuxHw_2_Decoder_one_hot_21\ ,
            hw_ctrl_en_20 => \ADC_IR:AMuxHw_2_Decoder_one_hot_20\ ,
            hw_ctrl_en_19 => \ADC_IR:AMuxHw_2_Decoder_one_hot_19\ ,
            hw_ctrl_en_18 => \ADC_IR:AMuxHw_2_Decoder_one_hot_18\ ,
            hw_ctrl_en_17 => \ADC_IR:AMuxHw_2_Decoder_one_hot_17\ ,
            hw_ctrl_en_16 => \ADC_IR:AMuxHw_2_Decoder_one_hot_16\ ,
            hw_ctrl_en_15 => \ADC_IR:AMuxHw_2_Decoder_one_hot_15\ ,
            hw_ctrl_en_14 => \ADC_IR:AMuxHw_2_Decoder_one_hot_14\ ,
            hw_ctrl_en_13 => \ADC_IR:AMuxHw_2_Decoder_one_hot_13\ ,
            hw_ctrl_en_12 => \ADC_IR:AMuxHw_2_Decoder_one_hot_12\ ,
            hw_ctrl_en_11 => \ADC_IR:AMuxHw_2_Decoder_one_hot_11\ ,
            hw_ctrl_en_10 => \ADC_IR:AMuxHw_2_Decoder_one_hot_10\ ,
            hw_ctrl_en_9 => \ADC_IR:AMuxHw_2_Decoder_one_hot_9\ ,
            hw_ctrl_en_8 => \ADC_IR:AMuxHw_2_Decoder_one_hot_8\ ,
            vout => \ADC_IR:Net_2803\ );
        Properties:
        {
            api_type = 2
            connect_mode = 1
            cy_registers = ""
            hw_control = 1
            init_mux_sel = "0000000000000000000000000000000000000000000000000000000000000000"
            muxin_width = 64
            one_active = 1
        }
</CYPRESSTAG>
<CYPRESSTAG name="Port Configuration Details">

------------------------------------------------------------
Port Configuration report
------------------------------------------------------------
     |     |       | Interrupt |                  |                  | 
Port | Pin | Fixed |      Type |       Drive Mode |             Name | Connections
-----+-----+-------+-----------+------------------+------------------+--------------------------------------------------------
   0 |   0 |     * |      NONE |      HI_Z_ANALOG |           IR1(0) | In(\ADC_IR:AMuxHw_2_Decoder_one_hot_0\), Analog(Net_14)
     |   1 |     * |      NONE |      HI_Z_ANALOG |           IR2(0) | In(\ADC_IR:AMuxHw_2_Decoder_one_hot_1\), Analog(Net_15)
     |   2 |     * |      NONE |      HI_Z_ANALOG |           IR3(0) | In(\ADC_IR:AMuxHw_2_Decoder_one_hot_2\), Analog(Net_17)
     |   3 |     * |      NONE |      HI_Z_ANALOG |           IR4(0) | In(\ADC_IR:AMuxHw_2_Decoder_one_hot_3\), Analog(Net_18)
     |   4 |     * |      NONE |      HI_Z_ANALOG |           IR5(0) | In(\ADC_IR:AMuxHw_2_Decoder_one_hot_4\), Analog(Net_20)
     |   5 |     * |      NONE |      HI_Z_ANALOG |           IR6(0) | In(\ADC_IR:AMuxHw_2_Decoder_one_hot_5\), Analog(Net_22)
     |   6 |     * |      NONE |      HI_Z_ANALOG |           IR7(0) | In(\ADC_IR:AMuxHw_2_Decoder_one_hot_6\), Analog(Net_23)
     |   7 |     * |      NONE |      HI_Z_ANALOG |           IR8(0) | In(\ADC_IR:AMuxHw_2_Decoder_one_hot_7\), Analog(Net_25)
-----+-----+-------+-----------+------------------+------------------+--------------------------------------------------------
   1 |   2 |     * |      NONE |         CMOS_OUT |           ENA(0) | 
     |   3 |     * |      NONE |         CMOS_OUT |           IN1(0) | In(Net_691)
     |   4 |     * |      NONE |         CMOS_OUT |           IN2(0) | 
     |   5 |     * |      NONE |         CMOS_OUT |           IN3(0) | In(Net_690)
     |   6 |     * |      NONE |         CMOS_OUT |           IN4(0) | 
     |   7 |     * |      NONE |         CMOS_OUT |           ENB(0) | 
-----+-----+-------+-----------+------------------+------------------+--------------------------------------------------------
   2 |   0 |     * |      NONE |         CMOS_OUT | \LCD:LCDPort(0)\ | 
     |   1 |     * |      NONE |         CMOS_OUT | \LCD:LCDPort(1)\ | 
     |   2 |     * |      NONE |         CMOS_OUT | \LCD:LCDPort(2)\ | 
     |   3 |     * |      NONE |         CMOS_OUT | \LCD:LCDPort(3)\ | 
     |   4 |     * |      NONE |         CMOS_OUT | \LCD:LCDPort(4)\ | 
     |   5 |     * |      NONE |         CMOS_OUT | \LCD:LCDPort(5)\ | 
     |   6 |     * |      NONE |         CMOS_OUT | \LCD:LCDPort(6)\ | 
-----+-----+-------+-----------+------------------+------------------+--------------------------------------------------------
   3 |   0 |     * |      NONE |         CMOS_OUT |          LED1(0) | 
     |   1 |     * |      NONE |         CMOS_OUT |          LED2(0) | 
     |   2 |     * |      NONE |         CMOS_OUT |          LED3(0) | 
     |   3 |     * |      NONE |         CMOS_OUT |          LED4(0) | 
     |   4 |     * |      NONE |         CMOS_OUT |          LED5(0) | 
     |   5 |     * |      NONE |      RES_PULL_UP |           SW1(0) | 
     |   6 |     * |      NONE |      RES_PULL_UP |           SW2(0) | FB(Net_664)
     |   7 |       |      NONE |      HI_Z_ANALOG | Dedicated_Output | Analog(Net_812)
-----+-----+-------+-----------+------------------+------------------+--------------------------------------------------------
  12 |   4 |     * |      NONE |         CMOS_OUT |        BleKey(0) | 
     |   5 |     * |      NONE |     HI_Z_DIGITAL |      BleState(0) | 
     |   6 |     * |      NONE |         CMOS_OUT |         BleTx(0) | In(Net_780)
     |   7 |     * |      NONE |     HI_Z_DIGITAL |         BleRx(0) | FB(Net_785)
------------------------------------------------------------------------------------------------------------------------------
</CYPRESSTAG>
</CYPRESSTAG>
</CYPRESSTAG>
Digital component placer commit/Report: Elapsed time ==> 0s.168ms
Digital Placement phase: Elapsed time ==> 4s.066ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Routing">
"C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\bin/sjrouter.exe" --xml-path "C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\dev\psoc5/psoc5lp/route_arch-rrg.cydata" --vh2-path "Roadster1.0_r.vh2" --pcf-path "Roadster1.0.pco" --des-name "Roadster1.0" --dsf-path "Roadster1.0.dsf" --sdc-path "Roadster1.0.sdc" --lib-path "Roadster1.0_r.lib"
Routing successful.
Digital Routing phase: Elapsed time ==> 3s.762ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Generation">
Bitstream Generation phase: Elapsed time ==> 0s.257ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Verification">
Bitstream Verification phase: Elapsed time ==> 0s.045ms
</CYPRESSTAG>
<CYPRESSTAG name="Static timing analysis">
Timing report is in Roadster1.0_timing.html.
Static timing analysis phase: Elapsed time ==> 0s.596ms
</CYPRESSTAG>
<CYPRESSTAG name="Data reporting">
Data reporting phase: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Database update...">
Design database save phase: Elapsed time ==> 0s.318ms
</CYPRESSTAG>
cydsfit: Elapsed time ==> 13s.771ms
</CYPRESSTAG>
Fitter phase: Elapsed time ==> 13s.771ms
API generation phase: Elapsed time ==> 2s.827ms
Dependency generation phase: Elapsed time ==> 0s.035ms
Cleanup phase: Elapsed time ==> 0s.001ms

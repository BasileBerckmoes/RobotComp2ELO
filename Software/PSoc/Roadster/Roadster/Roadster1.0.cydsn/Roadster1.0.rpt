Loading plugins phase: Elapsed time ==> 0s.169ms
<CYPRESSTAG name="CyDsfit arguments...">
cydsfit arguments: -.fdsnotice -.fdswarpdepfile=warp_dependencies.txt -.fdselabdepfile=elab_dependencies.txt -.fdsbldfile=generated_files.txt -.fdsreffile=referenced_files.txt -p C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Software\PSoc\Roadster\Roadster\Roadster1.0.cydsn\Roadster1.0.cyprj -d CY8C5288LTI-LP090 -s C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Software\PSoc\Roadster\Roadster\Roadster1.0.cydsn\Generated_Source\PSoC5 -- -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE
</CYPRESSTAG>
<CYPRESSTAG name="Design elaboration results...">
ADD: sdb.M0065: information: Analog terminal "vdac_ref" on ADC_SAR_SEQ_v2_0 is unconnected.
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Signal: vdac_ref)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_798)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_885)

</CYPRESSTAG>
Elaboration phase: Elapsed time ==> 2s.104ms
<CYPRESSTAG name="HDL generation results...">
</CYPRESSTAG>
HDL generation phase: Elapsed time ==> 0s.093ms
<CYPRESSTAG name="Synthesis results...">

     | | | | | | |
   _________________
  -|               |-
  -|               |-
  -|               |-
  -|    CYPRESS    |-
  -|               |-
  -|               |-   Warp Verilog Synthesis Compiler: Version 6.3 IR 41
  -|               |-   Copyright (C) 1991-2001 Cypress Semiconductor
   |_______________|
     | | | | | | |

======================================================================
Compiling:  Roadster1.0.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Software\PSoc\Roadster\Roadster\Roadster1.0.cydsn\Roadster1.0.cyprj -dcpsoc3 Roadster1.0.v -verilog
======================================================================

======================================================================
Compiling:  Roadster1.0.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Software\PSoc\Roadster\Roadster\Roadster1.0.cydsn\Roadster1.0.cyprj -dcpsoc3 Roadster1.0.v -verilog
======================================================================

======================================================================
Compiling:  Roadster1.0.v
Program  :   vlogfe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Software\PSoc\Roadster\Roadster\Roadster1.0.cydsn\Roadster1.0.cyprj -dcpsoc3 -verilog Roadster1.0.v
======================================================================

vlogfe V6.3 IR 41:  Verilog parser
Mon Mar 19 16:28:40 2018


======================================================================
Compiling:  Roadster1.0.v
Program  :   vpp
Options  :    -yv2 -q10 Roadster1.0.v
======================================================================

vpp V6.3 IR 41:  Verilog Pre-Processor
Mon Mar 19 16:28:40 2018

Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\OneTerminal\OneTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\demux_v1_10\demux_v1_10.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\mux_v1_10\mux_v1_10.v'

vpp:  No errors.

Library 'work' => directory 'lcpsoc3'
General_symbol_table
General_symbol_table
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Using control file 'Roadster1.0.ctl'.
Roadster1.0.v (line 707, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.
C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v (line 947, col 46):  Note: Substituting module 'sub_vi_vv' for '-'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v (line 977, col 46):  Note: Substituting module 'add_vi_vv' for '+'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.

vlogfe:  No errors.


======================================================================
Compiling:  Roadster1.0.v
Program  :   tovif
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Software\PSoc\Roadster\Roadster\Roadster1.0.cydsn\Roadster1.0.cyprj -dcpsoc3 -verilog Roadster1.0.v
======================================================================

tovif V6.3 IR 41:  High-level synthesis
Mon Mar 19 16:28:41 2018

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Software\PSoc\Roadster\Roadster\Roadster1.0.cydsn\codegentemp\Roadster1.0.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Software\PSoc\Roadster\Roadster\Roadster1.0.cydsn\codegentemp\Roadster1.0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\demux_v1_10\demux_v1_10.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\mux_v1_10\mux_v1_10.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.

tovif:  No errors.


======================================================================
Compiling:  Roadster1.0.v
Program  :   topld
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Software\PSoc\Roadster\Roadster\Roadster1.0.cydsn\Roadster1.0.cyprj -dcpsoc3 -verilog Roadster1.0.v
======================================================================

topld V6.3 IR 41:  Synthesis and optimization
Mon Mar 19 16:28:41 2018

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Software\PSoc\Roadster\Roadster\Roadster1.0.cydsn\codegentemp\Roadster1.0.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Software\PSoc\Roadster\Roadster\Roadster1.0.cydsn\codegentemp\Roadster1.0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\demux_v1_10\demux_v1_10.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\mux_v1_10\mux_v1_10.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\lcpsoc3\stdlogic\cpsoc3.vif'.

----------------------------------------------------------
Detecting unused logic.
----------------------------------------------------------
    User names
	\ADC_IR:SAR:Net_221\
	\ADC_IR:SAR:Net_381\
	\ADC_IR:bSAR_SEQ:sw_soc\
	\ADC_IR:soc_out\
	\ADC_IR:Net_3905\
	\ADC_IR:Net_3867\
	\ADC_IR:MODULE_1:g1:a0:gx:u0:albi_2\
	\ADC_IR:MODULE_1:g1:a0:gx:u0:agbi_2\
	\ADC_IR:MODULE_1:g1:a0:gx:u0:albi_1\
	\ADC_IR:MODULE_1:g1:a0:gx:u0:agbi_1\
	\ADC_IR:MODULE_1:g1:a0:gx:u0:albi_0\
	\ADC_IR:MODULE_1:g1:a0:gx:u0:agbi_0\
	\ADC_IR:MODULE_1:g1:a0:xneq\
	\ADC_IR:MODULE_1:g1:a0:xlt\
	\ADC_IR:MODULE_1:g1:a0:xlte\
	\ADC_IR:MODULE_1:g1:a0:xgt\
	\ADC_IR:MODULE_1:g1:a0:xgte\
	\ADC_IR:MODULE_1:lt\
	\ADC_IR:MODULE_1:gt\
	\ADC_IR:MODULE_1:gte\
	\ADC_IR:MODULE_1:lte\
	\ADC_IR:MODULE_1:neq\
	\MotorControl:PWMUDB:km_run\
	\MotorControl:PWMUDB:ctrl_cmpmode2_2\
	\MotorControl:PWMUDB:ctrl_cmpmode2_1\
	\MotorControl:PWMUDB:ctrl_cmpmode2_0\
	\MotorControl:PWMUDB:ctrl_cmpmode1_2\
	\MotorControl:PWMUDB:ctrl_cmpmode1_1\
	\MotorControl:PWMUDB:ctrl_cmpmode1_0\
	\MotorControl:PWMUDB:capt_rising\
	\MotorControl:PWMUDB:capt_falling\
	\MotorControl:PWMUDB:trig_rise\
	\MotorControl:PWMUDB:trig_fall\
	\MotorControl:PWMUDB:sc_kill\
	\MotorControl:PWMUDB:min_kill\
	\MotorControl:PWMUDB:km_tc\
	\MotorControl:PWMUDB:db_tc\
	\MotorControl:PWMUDB:dith_sel\
	\MotorControl:Net_101\
	\MotorControl:Net_96\
	Net_260
	Net_261
	\MotorControl:PWMUDB:MODULE_2:b_31\
	\MotorControl:PWMUDB:MODULE_2:b_30\
	\MotorControl:PWMUDB:MODULE_2:b_29\
	\MotorControl:PWMUDB:MODULE_2:b_28\
	\MotorControl:PWMUDB:MODULE_2:b_27\
	\MotorControl:PWMUDB:MODULE_2:b_26\
	\MotorControl:PWMUDB:MODULE_2:b_25\
	\MotorControl:PWMUDB:MODULE_2:b_24\
	\MotorControl:PWMUDB:MODULE_2:b_23\
	\MotorControl:PWMUDB:MODULE_2:b_22\
	\MotorControl:PWMUDB:MODULE_2:b_21\
	\MotorControl:PWMUDB:MODULE_2:b_20\
	\MotorControl:PWMUDB:MODULE_2:b_19\
	\MotorControl:PWMUDB:MODULE_2:b_18\
	\MotorControl:PWMUDB:MODULE_2:b_17\
	\MotorControl:PWMUDB:MODULE_2:b_16\
	\MotorControl:PWMUDB:MODULE_2:b_15\
	\MotorControl:PWMUDB:MODULE_2:b_14\
	\MotorControl:PWMUDB:MODULE_2:b_13\
	\MotorControl:PWMUDB:MODULE_2:b_12\
	\MotorControl:PWMUDB:MODULE_2:b_11\
	\MotorControl:PWMUDB:MODULE_2:b_10\
	\MotorControl:PWMUDB:MODULE_2:b_9\
	\MotorControl:PWMUDB:MODULE_2:b_8\
	\MotorControl:PWMUDB:MODULE_2:b_7\
	\MotorControl:PWMUDB:MODULE_2:b_6\
	\MotorControl:PWMUDB:MODULE_2:b_5\
	\MotorControl:PWMUDB:MODULE_2:b_4\
	\MotorControl:PWMUDB:MODULE_2:b_3\
	\MotorControl:PWMUDB:MODULE_2:b_2\
	\MotorControl:PWMUDB:MODULE_2:b_1\
	\MotorControl:PWMUDB:MODULE_2:b_0\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:a_31\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:a_30\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:a_29\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:a_28\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:a_27\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:a_26\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:a_25\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:a_24\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_31\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_30\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_29\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_28\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_27\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_26\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_25\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_24\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_23\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_22\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_21\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_20\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_19\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_18\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_17\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_16\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_15\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_14\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_13\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_12\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_11\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_10\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_9\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_8\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_7\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_6\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_5\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_4\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_3\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_2\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_1\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:b_0\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_31\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_30\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_29\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_28\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_27\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_26\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_25\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_24\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_23\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_22\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_21\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_20\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_19\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_18\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_17\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_16\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_15\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_14\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_13\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_12\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_11\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_10\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_9\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_8\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_7\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_6\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_5\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_4\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_3\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:s_2\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_31\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_30\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_29\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_28\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_27\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_26\
	\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_25\
	Net_268
	Net_262
	Net_259
	\MotorControl:Net_113\
	\MotorControl:Net_107\
	\MotorControl:Net_114\
	\demux_1:tmp__demux_1_3_reg\
	Net_407
	Net_370
	Net_371
	Net_372
	Net_374
	Net_375
	Net_376
	Net_377
	Net_359
	\TimerUS:Net_102\
	Net_420
	Net_421
	Net_423
	Net_424
	Net_425
	Net_426

    Synthesized names
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_31\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_30\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_29\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_28\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_27\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_26\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_25\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_24\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_23\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_22\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_21\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_20\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_19\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_18\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_17\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_16\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_15\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_14\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_13\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_12\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_11\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_10\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_9\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_8\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_7\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_6\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_5\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_4\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_3\
	\MotorControl:PWMUDB:add_vi_vv_MODGEN_2_2\

Deleted 174 User equations/components.
Deleted 30 Synthesized equations/components.

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing one to tmpOE__LedOn_net_0
Aliasing tmpOE__IR1_net_0 to tmpOE__LedOn_net_0
Aliasing tmpOE__IR2_net_0 to tmpOE__LedOn_net_0
Aliasing tmpOE__IR3_net_0 to tmpOE__LedOn_net_0
Aliasing tmpOE__IR4_net_0 to tmpOE__LedOn_net_0
Aliasing tmpOE__IR5_net_0 to tmpOE__LedOn_net_0
Aliasing tmpOE__IR6_net_0 to tmpOE__LedOn_net_0
Aliasing tmpOE__IR7_net_0 to tmpOE__LedOn_net_0
Aliasing tmpOE__IR8_net_0 to tmpOE__LedOn_net_0
Aliasing \ADC_IR:AMuxHw_2_Decoder_enable\ to tmpOE__LedOn_net_0
Aliasing \ADC_IR:SAR:vp_ctl_0\ to zero
Aliasing \ADC_IR:SAR:vp_ctl_2\ to zero
Aliasing \ADC_IR:SAR:vn_ctl_1\ to zero
Aliasing \ADC_IR:SAR:vn_ctl_3\ to zero
Aliasing \ADC_IR:SAR:vp_ctl_1\ to zero
Aliasing \ADC_IR:SAR:vp_ctl_3\ to zero
Aliasing \ADC_IR:SAR:vn_ctl_0\ to zero
Aliasing \ADC_IR:SAR:vn_ctl_2\ to zero
Aliasing \ADC_IR:SAR:soc\ to zero
Aliasing \ADC_IR:bSAR_SEQ:status_7\ to zero
Aliasing \ADC_IR:bSAR_SEQ:status_6\ to zero
Aliasing \ADC_IR:bSAR_SEQ:status_5\ to zero
Aliasing \ADC_IR:bSAR_SEQ:status_4\ to zero
Aliasing \ADC_IR:bSAR_SEQ:status_3\ to zero
Aliasing \ADC_IR:bSAR_SEQ:status_2\ to zero
Aliasing \ADC_IR:bSAR_SEQ:status_1\ to zero
Aliasing Net_13 to \ADC_IR:bSAR_SEQ:status_0\
Aliasing \ADC_IR:MODULE_1:g1:a0:gx:u0:aeqb_0\ to tmpOE__LedOn_net_0
Aliasing tmpOE__LED1_net_0 to tmpOE__LedOn_net_0
Aliasing tmpOE__LED2_net_0 to tmpOE__LedOn_net_0
Aliasing tmpOE__LED3_net_0 to tmpOE__LedOn_net_0
Aliasing tmpOE__LED4_net_0 to tmpOE__LedOn_net_0
Aliasing tmpOE__LED5_net_0 to tmpOE__LedOn_net_0
Aliasing tmpOE__SW1_net_0 to tmpOE__LedOn_net_0
Aliasing tmpOE__SW2_net_0 to tmpOE__LedOn_net_0
Aliasing \MotorControl:PWMUDB:hwCapture\ to zero
Aliasing \MotorControl:PWMUDB:trig_out\ to tmpOE__LedOn_net_0
Aliasing \MotorControl:PWMUDB:runmode_enable\\R\ to zero
Aliasing \MotorControl:PWMUDB:runmode_enable\\S\ to zero
Aliasing \MotorControl:PWMUDB:ltch_kill_reg\\R\ to zero
Aliasing \MotorControl:PWMUDB:ltch_kill_reg\\S\ to zero
Aliasing \MotorControl:PWMUDB:min_kill_reg\\R\ to zero
Aliasing \MotorControl:PWMUDB:min_kill_reg\\S\ to zero
Aliasing \MotorControl:PWMUDB:final_kill\ to tmpOE__LedOn_net_0
Aliasing \MotorControl:PWMUDB:dith_count_1\\R\ to zero
Aliasing \MotorControl:PWMUDB:dith_count_1\\S\ to zero
Aliasing \MotorControl:PWMUDB:dith_count_0\\R\ to zero
Aliasing \MotorControl:PWMUDB:dith_count_0\\S\ to zero
Aliasing \MotorControl:PWMUDB:reset\ to zero
Aliasing \MotorControl:PWMUDB:status_6\ to zero
Aliasing \MotorControl:PWMUDB:status_4\ to zero
Aliasing \MotorControl:PWMUDB:cmp1_status_reg\\R\ to zero
Aliasing \MotorControl:PWMUDB:cmp1_status_reg\\S\ to zero
Aliasing \MotorControl:PWMUDB:cmp2_status_reg\\R\ to zero
Aliasing \MotorControl:PWMUDB:cmp2_status_reg\\S\ to zero
Aliasing \MotorControl:PWMUDB:final_kill_reg\\R\ to zero
Aliasing \MotorControl:PWMUDB:final_kill_reg\\S\ to zero
Aliasing \MotorControl:PWMUDB:cs_addr_0\ to zero
Aliasing \MotorControl:PWMUDB:pwm_temp\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_23\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_22\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_21\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_20\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_19\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_18\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_17\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_16\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_15\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_14\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_13\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_12\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_11\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_10\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_9\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_8\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_7\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_6\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_5\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_4\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_3\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:a_2\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ to tmpOE__LedOn_net_0
Aliasing \LCD:tmpOE__LCDPort_net_6\ to tmpOE__LedOn_net_0
Aliasing \LCD:tmpOE__LCDPort_net_5\ to tmpOE__LedOn_net_0
Aliasing \LCD:tmpOE__LCDPort_net_4\ to tmpOE__LedOn_net_0
Aliasing \LCD:tmpOE__LCDPort_net_3\ to tmpOE__LedOn_net_0
Aliasing \LCD:tmpOE__LCDPort_net_2\ to tmpOE__LedOn_net_0
Aliasing \LCD:tmpOE__LCDPort_net_1\ to tmpOE__LedOn_net_0
Aliasing \LCD:tmpOE__LCDPort_net_0\ to tmpOE__LedOn_net_0
Aliasing tmpOE__Echo1_net_0 to tmpOE__LedOn_net_0
Aliasing tmpOE__Echo2_net_0 to tmpOE__LedOn_net_0
Aliasing tmpOE__Echo3_net_0 to tmpOE__LedOn_net_0
Aliasing \TriggerReg:clk\ to zero
Aliasing \TriggerReg:rst\ to zero
Aliasing tmpOE__Trigger1_net_0 to tmpOE__LedOn_net_0
Aliasing \TimerUS:Net_260\ to zero
Aliasing tmpOE__Trigger2_net_0 to tmpOE__LedOn_net_0
Aliasing tmpOE__Trigger3_net_0 to tmpOE__LedOn_net_0
Aliasing \selectUS:clk\ to zero
Aliasing \selectUS:rst\ to zero
Aliasing \ADC_IR:AMuxHw_2_Decoder_old_id_5\\D\ to \ADC_IR:MODIN1_5\
Aliasing \ADC_IR:AMuxHw_2_Decoder_old_id_4\\D\ to \ADC_IR:MODIN1_4\
Aliasing \ADC_IR:AMuxHw_2_Decoder_old_id_3\\D\ to \ADC_IR:MODIN1_3\
Aliasing \ADC_IR:AMuxHw_2_Decoder_old_id_2\\D\ to \ADC_IR:MODIN1_2\
Aliasing \ADC_IR:AMuxHw_2_Decoder_old_id_1\\D\ to \ADC_IR:MODIN1_1\
Aliasing \ADC_IR:AMuxHw_2_Decoder_old_id_0\\D\ to \ADC_IR:MODIN1_0\
Aliasing \MotorControl:PWMUDB:min_kill_reg\\D\ to tmpOE__LedOn_net_0
Aliasing \MotorControl:PWMUDB:prevCapture\\D\ to zero
Aliasing \MotorControl:PWMUDB:trig_last\\D\ to zero
Aliasing \MotorControl:PWMUDB:ltch_kill_reg\\D\ to tmpOE__LedOn_net_0
Aliasing \MotorControl:PWMUDB:tc_i_reg\\D\ to \MotorControl:PWMUDB:status_2\
Removing Lhs of wire one[6] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire tmpOE__IR1_net_0[9] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire tmpOE__IR2_net_0[16] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire tmpOE__IR3_net_0[23] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire tmpOE__IR4_net_0[30] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire tmpOE__IR5_net_0[37] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire tmpOE__IR6_net_0[44] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire tmpOE__IR7_net_0[51] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire tmpOE__IR8_net_0[58] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire \ADC_IR:AMuxHw_2_Decoder_enable\[64] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire \ADC_IR:cmp_vv_vv_MODGEN_1\[66] = \ADC_IR:MODULE_1:g1:a0:xeq\[393]
Removing Rhs of wire \ADC_IR:clock\[67] = \ADC_IR:Net_3874\[293]
Removing Rhs of wire \ADC_IR:ch_addr_5\[69] = \ADC_IR:bSAR_SEQ:count_5\[260]
Removing Rhs of wire \ADC_IR:ch_addr_4\[71] = \ADC_IR:bSAR_SEQ:count_4\[261]
Removing Rhs of wire \ADC_IR:ch_addr_3\[73] = \ADC_IR:bSAR_SEQ:count_3\[262]
Removing Rhs of wire \ADC_IR:ch_addr_2\[75] = \ADC_IR:bSAR_SEQ:count_2\[263]
Removing Rhs of wire \ADC_IR:ch_addr_1\[77] = \ADC_IR:bSAR_SEQ:count_1\[264]
Removing Rhs of wire \ADC_IR:ch_addr_0\[79] = \ADC_IR:bSAR_SEQ:count_0\[265]
Removing Lhs of wire \ADC_IR:SAR:vp_ctl_0\[205] = zero[2]
Removing Lhs of wire \ADC_IR:SAR:vp_ctl_2\[206] = zero[2]
Removing Lhs of wire \ADC_IR:SAR:vn_ctl_1\[207] = zero[2]
Removing Lhs of wire \ADC_IR:SAR:vn_ctl_3\[208] = zero[2]
Removing Lhs of wire \ADC_IR:SAR:vp_ctl_1\[209] = zero[2]
Removing Lhs of wire \ADC_IR:SAR:vp_ctl_3\[210] = zero[2]
Removing Lhs of wire \ADC_IR:SAR:vn_ctl_0\[211] = zero[2]
Removing Lhs of wire \ADC_IR:SAR:vn_ctl_2\[212] = zero[2]
Removing Lhs of wire \ADC_IR:SAR:Net_188\[213] = \ADC_IR:clock\[67]
Removing Lhs of wire \ADC_IR:SAR:soc\[219] = zero[2]
Removing Rhs of wire \ADC_IR:bSAR_SEQ:enable\[250] = \ADC_IR:bSAR_SEQ:control_0\[251]
Removing Rhs of wire \ADC_IR:bSAR_SEQ:load_period\[252] = \ADC_IR:bSAR_SEQ:control_1\[253]
Removing Lhs of wire \ADC_IR:bSAR_SEQ:status_7\[266] = zero[2]
Removing Lhs of wire \ADC_IR:bSAR_SEQ:status_6\[267] = zero[2]
Removing Lhs of wire \ADC_IR:bSAR_SEQ:status_5\[268] = zero[2]
Removing Lhs of wire \ADC_IR:bSAR_SEQ:status_4\[269] = zero[2]
Removing Lhs of wire \ADC_IR:bSAR_SEQ:status_3\[270] = zero[2]
Removing Lhs of wire \ADC_IR:bSAR_SEQ:status_2\[271] = zero[2]
Removing Lhs of wire \ADC_IR:bSAR_SEQ:status_1\[272] = zero[2]
Removing Rhs of wire \ADC_IR:bSAR_SEQ:status_0\[273] = \ADC_IR:bSAR_SEQ:nrq_edge_detect_reg\[274]
Removing Rhs of wire Net_13[281] = \ADC_IR:bSAR_SEQ:status_0\[273]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:newa_5\[304] = \ADC_IR:MODIN1_5\[305]
Removing Lhs of wire \ADC_IR:MODIN1_5\[305] = \ADC_IR:ch_addr_5\[69]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:newa_4\[306] = \ADC_IR:MODIN1_4\[307]
Removing Lhs of wire \ADC_IR:MODIN1_4\[307] = \ADC_IR:ch_addr_4\[71]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:newa_3\[308] = \ADC_IR:MODIN1_3\[309]
Removing Lhs of wire \ADC_IR:MODIN1_3\[309] = \ADC_IR:ch_addr_3\[73]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:newa_2\[310] = \ADC_IR:MODIN1_2\[311]
Removing Lhs of wire \ADC_IR:MODIN1_2\[311] = \ADC_IR:ch_addr_2\[75]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:newa_1\[312] = \ADC_IR:MODIN1_1\[313]
Removing Lhs of wire \ADC_IR:MODIN1_1\[313] = \ADC_IR:ch_addr_1\[77]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:newa_0\[314] = \ADC_IR:MODIN1_0\[315]
Removing Lhs of wire \ADC_IR:MODIN1_0\[315] = \ADC_IR:ch_addr_0\[79]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:newb_5\[316] = \ADC_IR:MODIN2_5\[317]
Removing Lhs of wire \ADC_IR:MODIN2_5\[317] = \ADC_IR:AMuxHw_2_Decoder_old_id_5\[68]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:newb_4\[318] = \ADC_IR:MODIN2_4\[319]
Removing Lhs of wire \ADC_IR:MODIN2_4\[319] = \ADC_IR:AMuxHw_2_Decoder_old_id_4\[70]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:newb_3\[320] = \ADC_IR:MODIN2_3\[321]
Removing Lhs of wire \ADC_IR:MODIN2_3\[321] = \ADC_IR:AMuxHw_2_Decoder_old_id_3\[72]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:newb_2\[322] = \ADC_IR:MODIN2_2\[323]
Removing Lhs of wire \ADC_IR:MODIN2_2\[323] = \ADC_IR:AMuxHw_2_Decoder_old_id_2\[74]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:newb_1\[324] = \ADC_IR:MODIN2_1\[325]
Removing Lhs of wire \ADC_IR:MODIN2_1\[325] = \ADC_IR:AMuxHw_2_Decoder_old_id_1\[76]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:newb_0\[326] = \ADC_IR:MODIN2_0\[327]
Removing Lhs of wire \ADC_IR:MODIN2_0\[327] = \ADC_IR:AMuxHw_2_Decoder_old_id_0\[78]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:dataa_5\[328] = \ADC_IR:ch_addr_5\[69]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:dataa_4\[329] = \ADC_IR:ch_addr_4\[71]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:dataa_3\[330] = \ADC_IR:ch_addr_3\[73]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:dataa_2\[331] = \ADC_IR:ch_addr_2\[75]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:dataa_1\[332] = \ADC_IR:ch_addr_1\[77]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:dataa_0\[333] = \ADC_IR:ch_addr_0\[79]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:datab_5\[334] = \ADC_IR:AMuxHw_2_Decoder_old_id_5\[68]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:datab_4\[335] = \ADC_IR:AMuxHw_2_Decoder_old_id_4\[70]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:datab_3\[336] = \ADC_IR:AMuxHw_2_Decoder_old_id_3\[72]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:datab_2\[337] = \ADC_IR:AMuxHw_2_Decoder_old_id_2\[74]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:datab_1\[338] = \ADC_IR:AMuxHw_2_Decoder_old_id_1\[76]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:datab_0\[339] = \ADC_IR:AMuxHw_2_Decoder_old_id_0\[78]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:a_5\[340] = \ADC_IR:ch_addr_5\[69]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:a_4\[341] = \ADC_IR:ch_addr_4\[71]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:a_3\[342] = \ADC_IR:ch_addr_3\[73]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:a_2\[343] = \ADC_IR:ch_addr_2\[75]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:a_1\[344] = \ADC_IR:ch_addr_1\[77]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:a_0\[345] = \ADC_IR:ch_addr_0\[79]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:b_5\[346] = \ADC_IR:AMuxHw_2_Decoder_old_id_5\[68]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:b_4\[347] = \ADC_IR:AMuxHw_2_Decoder_old_id_4\[70]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:b_3\[348] = \ADC_IR:AMuxHw_2_Decoder_old_id_3\[72]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:b_2\[349] = \ADC_IR:AMuxHw_2_Decoder_old_id_2\[74]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:b_1\[350] = \ADC_IR:AMuxHw_2_Decoder_old_id_1\[76]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:b_0\[351] = \ADC_IR:AMuxHw_2_Decoder_old_id_0\[78]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:aeqb_0\[358] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:eq_0\[359] = \ADC_IR:MODULE_1:g1:a0:gx:u0:xnor_array_0\[357]
Removing Lhs of wire \ADC_IR:MODULE_1:g1:a0:gx:u0:eqi_0\[365] = \ADC_IR:MODULE_1:g1:a0:gx:u0:eq_5\[364]
Removing Rhs of wire \ADC_IR:MODULE_1:g1:a0:xeq\[393] = \ADC_IR:MODULE_1:g1:a0:gx:u0:aeqb_1\[366]
Removing Lhs of wire tmpOE__LED1_net_0[405] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire tmpOE__LED2_net_0[411] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire tmpOE__LED3_net_0[417] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire tmpOE__LED4_net_0[423] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire tmpOE__LED5_net_0[429] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire tmpOE__SW1_net_0[435] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire tmpOE__SW2_net_0[441] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire \MotorControl:PWMUDB:ctrl_enable\[460] = \MotorControl:PWMUDB:control_7\[452]
Removing Lhs of wire \MotorControl:PWMUDB:hwCapture\[470] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:hwEnable\[471] = \MotorControl:PWMUDB:control_7\[452]
Removing Lhs of wire \MotorControl:PWMUDB:trig_out\[475] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire \MotorControl:PWMUDB:runmode_enable\\R\[477] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:runmode_enable\\S\[478] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:final_enable\[479] = \MotorControl:PWMUDB:runmode_enable\[476]
Removing Lhs of wire \MotorControl:PWMUDB:ltch_kill_reg\\R\[483] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:ltch_kill_reg\\S\[484] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:min_kill_reg\\R\[485] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:min_kill_reg\\S\[486] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:final_kill\[489] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire \MotorControl:PWMUDB:add_vi_vv_MODGEN_2_1\[493] = \MotorControl:PWMUDB:MODULE_2:g2:a0:s_1\[734]
Removing Lhs of wire \MotorControl:PWMUDB:add_vi_vv_MODGEN_2_0\[495] = \MotorControl:PWMUDB:MODULE_2:g2:a0:s_0\[735]
Removing Lhs of wire \MotorControl:PWMUDB:dith_count_1\\R\[496] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:dith_count_1\\S\[497] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:dith_count_0\\R\[498] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:dith_count_0\\S\[499] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:reset\[502] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:status_6\[503] = zero[2]
Removing Rhs of wire \MotorControl:PWMUDB:status_5\[504] = \MotorControl:PWMUDB:final_kill_reg\[519]
Removing Lhs of wire \MotorControl:PWMUDB:status_4\[505] = zero[2]
Removing Rhs of wire \MotorControl:PWMUDB:status_3\[506] = \MotorControl:PWMUDB:fifo_full\[526]
Removing Rhs of wire \MotorControl:PWMUDB:status_1\[508] = \MotorControl:PWMUDB:cmp2_status_reg\[518]
Removing Rhs of wire \MotorControl:PWMUDB:status_0\[509] = \MotorControl:PWMUDB:cmp1_status_reg\[517]
Removing Lhs of wire \MotorControl:PWMUDB:cmp1_status_reg\\R\[520] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:cmp1_status_reg\\S\[521] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:cmp2_status_reg\\R\[522] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:cmp2_status_reg\\S\[523] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:final_kill_reg\\R\[524] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:final_kill_reg\\S\[525] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:cs_addr_2\[527] = \MotorControl:PWMUDB:tc_i\[481]
Removing Lhs of wire \MotorControl:PWMUDB:cs_addr_1\[528] = \MotorControl:PWMUDB:runmode_enable\[476]
Removing Lhs of wire \MotorControl:PWMUDB:cs_addr_0\[529] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:compare1\[562] = \MotorControl:PWMUDB:cmp1_less\[533]
Removing Lhs of wire \MotorControl:PWMUDB:compare2\[563] = \MotorControl:PWMUDB:cmp2_less\[536]
Removing Lhs of wire \MotorControl:PWMUDB:pwm_temp\[575] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_23\[616] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_22\[617] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_21\[618] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_20\[619] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_19\[620] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_18\[621] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_17\[622] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_16\[623] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_15\[624] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_14\[625] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_13\[626] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_12\[627] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_11\[628] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_10\[629] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_9\[630] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_8\[631] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_7\[632] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_6\[633] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_5\[634] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_4\[635] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_3\[636] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_2\[637] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_1\[638] = \MotorControl:PWMUDB:MODIN3_1\[639]
Removing Lhs of wire \MotorControl:PWMUDB:MODIN3_1\[639] = \MotorControl:PWMUDB:dith_count_1\[492]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:a_0\[640] = \MotorControl:PWMUDB:MODIN3_0\[641]
Removing Lhs of wire \MotorControl:PWMUDB:MODIN3_0\[641] = \MotorControl:PWMUDB:dith_count_0\[494]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\[773] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\[774] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_6\[783] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_5\[784] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_4\[785] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_3\[786] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_2\[787] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_1\[788] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_0\[789] = tmpOE__LedOn_net_0[1]
Removing Rhs of wire selectUltraS_0[808] = \selectUS:control_out_0\[896]
Removing Rhs of wire selectUltraS_0[808] = \selectUS:control_0\[918]
Removing Rhs of wire selectUltraS_1[809] = \selectUS:control_out_1\[897]
Removing Rhs of wire selectUltraS_1[809] = \selectUS:control_1\[917]
Removing Rhs of wire Net_411[810] = \TriggerReg:control_out_0\[840]
Removing Rhs of wire Net_411[810] = \TriggerReg:control_0\[863]
Removing Rhs of wire Net_412[814] = \demux_1:tmp__demux_1_0_reg\[807]
Removing Rhs of wire Net_416[815] = \demux_1:tmp__demux_1_1_reg\[811]
Removing Rhs of wire Net_417[816] = \demux_1:tmp__demux_1_2_reg\[812]
Removing Rhs of wire Net_430[819] = \TimerUS:Net_57\[876]
Removing Lhs of wire tmpOE__Echo1_net_0[821] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire tmpOE__Echo2_net_0[827] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire tmpOE__Echo3_net_0[833] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire \TriggerReg:clk\[838] = zero[2]
Removing Lhs of wire \TriggerReg:rst\[839] = zero[2]
Removing Lhs of wire tmpOE__Trigger1_net_0[865] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire \TimerUS:Net_260\[872] = zero[2]
Removing Lhs of wire \TimerUS:Net_266\[873] = Net_402[879]
Removing Rhs of wire Net_402[879] = \mux_1:tmp__mux_1_reg\[880]
Removing Lhs of wire tmpOE__Trigger2_net_0[883] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire tmpOE__Trigger3_net_0[889] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire \selectUS:clk\[894] = zero[2]
Removing Lhs of wire \selectUS:rst\[895] = zero[2]
Removing Lhs of wire \ADC_IR:AMuxHw_2_Decoder_old_id_5\\D\[919] = \ADC_IR:ch_addr_5\[69]
Removing Lhs of wire \ADC_IR:AMuxHw_2_Decoder_old_id_4\\D\[920] = \ADC_IR:ch_addr_4\[71]
Removing Lhs of wire \ADC_IR:AMuxHw_2_Decoder_old_id_3\\D\[921] = \ADC_IR:ch_addr_3\[73]
Removing Lhs of wire \ADC_IR:AMuxHw_2_Decoder_old_id_2\\D\[922] = \ADC_IR:ch_addr_2\[75]
Removing Lhs of wire \ADC_IR:AMuxHw_2_Decoder_old_id_1\\D\[923] = \ADC_IR:ch_addr_1\[77]
Removing Lhs of wire \ADC_IR:AMuxHw_2_Decoder_old_id_0\\D\[924] = \ADC_IR:ch_addr_0\[79]
Removing Lhs of wire \ADC_IR:bSAR_SEQ:nrq_edge_detect_reg\\D\[989] = \ADC_IR:bSAR_SEQ:nrq_edge_detect\[280]
Removing Lhs of wire \ADC_IR:bSAR_SEQ:nrq_reg\\D\[991] = \ADC_IR:bSAR_SEQ:bus_clk_nrq_reg\[277]
Removing Lhs of wire \MotorControl:PWMUDB:min_kill_reg\\D\[992] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire \MotorControl:PWMUDB:prevCapture\\D\[993] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:trig_last\\D\[994] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:ltch_kill_reg\\D\[997] = tmpOE__LedOn_net_0[1]
Removing Lhs of wire \MotorControl:PWMUDB:prevCompare1\\D\[1000] = \MotorControl:PWMUDB:cmp1\[512]
Removing Lhs of wire \MotorControl:PWMUDB:prevCompare2\\D\[1001] = \MotorControl:PWMUDB:cmp2\[515]
Removing Lhs of wire \MotorControl:PWMUDB:cmp1_status_reg\\D\[1002] = \MotorControl:PWMUDB:cmp1_status\[513]
Removing Lhs of wire \MotorControl:PWMUDB:cmp2_status_reg\\D\[1003] = \MotorControl:PWMUDB:cmp2_status\[516]
Removing Lhs of wire \MotorControl:PWMUDB:pwm_i_reg\\D\[1005] = \MotorControl:PWMUDB:pwm_i\[565]
Removing Lhs of wire \MotorControl:PWMUDB:pwm1_i_reg\\D\[1006] = \MotorControl:PWMUDB:pwm1_i\[567]
Removing Lhs of wire \MotorControl:PWMUDB:pwm2_i_reg\\D\[1007] = \MotorControl:PWMUDB:pwm2_i\[569]
Removing Lhs of wire \MotorControl:PWMUDB:tc_i_reg\\D\[1008] = \MotorControl:PWMUDB:status_2\[507]

------------------------------------------------------
Aliased 0 equations, 213 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Substituting virtuals - pass 1:

Note:  Expanding virtual equation for 'tmpOE__LedOn_net_0' (cost = 0):
tmpOE__LedOn_net_0 <=  ('1') ;

Note:  Expanding virtual equation for 'zero' (cost = 0):
zero <=  ('0') ;

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\ADC_IR:MODULE_1:g1:a0:gx:u0:xnor_array_5\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\)
	OR (\ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\ADC_IR:MODULE_1:g1:a0:gx:u0:xnor_array_4\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\)
	OR (\ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\ADC_IR:MODULE_1:g1:a0:gx:u0:xnor_array_3\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\)
	OR (\ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\ADC_IR:MODULE_1:g1:a0:gx:u0:xnor_array_2\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\)
	OR (\ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\ADC_IR:MODULE_1:g1:a0:gx:u0:xnor_array_1\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\)
	OR (\ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\ADC_IR:MODULE_1:g1:a0:gx:u0:xnor_array_0\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\)
	OR (\ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:eq_1\' (cost = 8):
\ADC_IR:MODULE_1:g1:a0:gx:u0:eq_1\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (\ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:eq_2\' (cost = 16):
\ADC_IR:MODULE_1:g1:a0:gx:u0:eq_2\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (\ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:eq_3\' (cost = 32):
\ADC_IR:MODULE_1:g1:a0:gx:u0:eq_3\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (\ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:eq_4\' (cost = 64):
\ADC_IR:MODULE_1:g1:a0:gx:u0:eq_4\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (\ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:eq_5\' (cost = 64):
\ADC_IR:MODULE_1:g1:a0:gx:u0:eq_5\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (\ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:lt_3\' (cost = 2):
\ADC_IR:MODULE_1:g1:a0:gx:u0:lt_3\ <= ((not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:gt_3\' (cost = 2):
\ADC_IR:MODULE_1:g1:a0:gx:u0:gt_3\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:lt_4\' (cost = 6):
\ADC_IR:MODULE_1:g1:a0:gx:u0:lt_4\ <= ((not \ADC_IR:ch_addr_4\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:gt_4\' (cost = 6):
\ADC_IR:MODULE_1:g1:a0:gx:u0:gt_4\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_4\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:lt_0\' (cost = 2):
\ADC_IR:MODULE_1:g1:a0:gx:u0:lt_0\ <= ((not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:gt_0\' (cost = 2):
\ADC_IR:MODULE_1:g1:a0:gx:u0:gt_0\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:lt_1\' (cost = 6):
\ADC_IR:MODULE_1:g1:a0:gx:u0:lt_1\ <= ((not \ADC_IR:ch_addr_1\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:gx:u0:gt_1\' (cost = 6):
\ADC_IR:MODULE_1:g1:a0:gx:u0:gt_1\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_1\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\));

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:cmp1\' (cost = 0):
\MotorControl:PWMUDB:cmp1\ <= (\MotorControl:PWMUDB:cmp1_less\);

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:cmp2\' (cost = 0):
\MotorControl:PWMUDB:cmp2\ <= (\MotorControl:PWMUDB:cmp2_less\);

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\MotorControl:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:s_0\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:s_0\ <= (not \MotorControl:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_17\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_17\ <=  ('0') ;

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_9\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_9\ <=  ('0') ;

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\MotorControl:PWMUDB:dith_count_1\ and \MotorControl:PWMUDB:dith_count_0\));


Substituting virtuals - pass 2:

Note:  Expanding virtual equation for '\ADC_IR:MODULE_1:g1:a0:xeq\' (cost = 64):
\ADC_IR:MODULE_1:g1:a0:xeq\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (\ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\));

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:s_1\' (cost = 2):
\MotorControl:PWMUDB:MODULE_2:g2:a0:s_1\ <= ((not \MotorControl:PWMUDB:dith_count_0\ and \MotorControl:PWMUDB:dith_count_1\)
	OR (not \MotorControl:PWMUDB:dith_count_1\ and \MotorControl:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_18\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_18\ <=  ('0') ;

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_10\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_10\ <=  ('0') ;

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\ <=  ('0') ;


Substituting virtuals - pass 3:

Note:  Virtual signal \ADC_IR:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\ADC_IR:AMuxHw_2_Decoder_is_active\ <= ((not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_IR:ch_addr_0\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (not \ADC_IR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\)
	OR (\ADC_IR:AMuxHw_2_Decoder_old_id_5\ and \ADC_IR:ch_addr_5\ and \ADC_IR:AMuxHw_2_Decoder_old_id_4\ and \ADC_IR:ch_addr_4\ and \ADC_IR:AMuxHw_2_Decoder_old_id_3\ and \ADC_IR:ch_addr_3\ and \ADC_IR:AMuxHw_2_Decoder_old_id_2\ and \ADC_IR:ch_addr_2\ and \ADC_IR:AMuxHw_2_Decoder_old_id_1\ and \ADC_IR:ch_addr_1\ and \ADC_IR:AMuxHw_2_Decoder_old_id_0\ and \ADC_IR:ch_addr_0\));

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_19\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_19\ <=  ('0') ;

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_11\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_11\ <=  ('0') ;

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_4\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_4\ <=  ('0') ;


Substituting virtuals - pass 4:

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_20\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_20\ <=  ('0') ;

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_12\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_12\ <=  ('0') ;

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_5\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_5\ <=  ('0') ;


Substituting virtuals - pass 5:

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_21\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_21\ <=  ('0') ;

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_13\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_13\ <=  ('0') ;

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_6\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_6\ <=  ('0') ;


Substituting virtuals - pass 6:

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_22\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_22\ <=  ('0') ;

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_14\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_14\ <=  ('0') ;

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_7\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_7\ <=  ('0') ;


Substituting virtuals - pass 7:

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_23\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_23\ <=  ('0') ;

Note:  Expanding virtual equation for '\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_15\' (cost = 0):
\MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_15\ <=  ('0') ;


Substituting virtuals - pass 8:


----------------------------------------------------------
Circuit simplification results:

	Expanded 47 signals.
	Turned 1 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \MotorControl:PWMUDB:final_capture\ to zero
Aliasing \MotorControl:PWMUDB:pwm_i\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_24\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_16\ to zero
Aliasing \MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_8\ to zero
Aliasing \MotorControl:PWMUDB:final_kill_reg\\D\ to zero
Removing Lhs of wire \MotorControl:PWMUDB:final_capture\[531] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:pwm_i\[565] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_24\[744] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_16\[754] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_8\[764] = zero[2]
Removing Lhs of wire \MotorControl:PWMUDB:runmode_enable\\D\[995] = \MotorControl:PWMUDB:control_7\[452]
Removing Lhs of wire \MotorControl:PWMUDB:final_kill_reg\\D\[1004] = zero[2]

------------------------------------------------------
Aliased 0 equations, 7 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Eliminating unused logic - pass 1:


Eliminating unused logic - pass 2:


Substituting virtuals - pass 1:


----------------------------------------------------------
Circuit simplification results:

	Expanded 0 signals.
	Turned 0 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

topld:  No errors.

CYPRESS_DIR    : C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp
Warp Program   : C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\bin\warp.exe
Warp Arguments : -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Software\PSoc\Roadster\Roadster\Roadster1.0.cydsn\Roadster1.0.cyprj -dcpsoc3 Roadster1.0.v -verilog
</CYPRESSTAG>
Warp synthesis phase: Elapsed time ==> 1s.886ms
<CYPRESSTAG name="Fitter results...">
<CYPRESSTAG name="Fitter startup details...">
cyp3fit: V4.1.0.3210, Family: PSoC3, Started at: Monday, 19 March 2018 16:28:42
Options: -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\basile.berckmoes\Documents\GitHub\RobotComp2ELO\Software\PSoc\Roadster\Roadster\Roadster1.0.cydsn\Roadster1.0.cyprj -d CY8C5288LTI-LP090 Roadster1.0.v -verilog
</CYPRESSTAG>
<CYPRESSTAG name="Design parsing">
Design parsing phase: Elapsed time ==> 0s.037ms
</CYPRESSTAG>
<CYPRESSTAG name="Tech Mapping">
<CYPRESSTAG name="Initial Mapping" icon="FILE_RPT_TECHM">
    Removed wire end \ADC_IR:MODULE_1:g1:a0:gx:u0:lti_1\ kept \ADC_IR:MODULE_1:g1:a0:gx:u0:lt_5\
    Removed wire end \ADC_IR:MODULE_1:g1:a0:gx:u0:gti_1\ kept \ADC_IR:MODULE_1:g1:a0:gx:u0:gt_5\
    Removed wire end \ADC_IR:MODULE_1:g1:a0:gx:u0:lti_0\ kept \ADC_IR:MODULE_1:g1:a0:gx:u0:lt_2\
    Removed wire end \ADC_IR:MODULE_1:g1:a0:gx:u0:gti_0\ kept \ADC_IR:MODULE_1:g1:a0:gx:u0:gt_2\
    Removed wire end \MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_24\ kept zero
    Removed wire end \MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_16\ kept zero
    Removed wire end \MotorControl:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_8\ kept zero
    Converted constant MacroCell: \MotorControl:PWMUDB:prevCapture\ from registered to combinatorial
    Converted constant MacroCell: \MotorControl:PWMUDB:trig_last\ from registered to combinatorial
    Converted constant MacroCell: \MotorControl:PWMUDB:status_5\ from registered to combinatorial
    Converted constant MacroCell: \MotorControl:PWMUDB:pwm_i_reg\ from registered to combinatorial
Assigning clock ADC_IR_BusClock to clock BUS_CLK because it is a pass-through
Assigning clock timer_clock to clock BUS_CLK because it is a pass-through
<CYPRESSTAG name="Global Clock Selection" icon="FILE_RPT_TECHM">
    Digital Clock 0: Automatic-assigning  clock 'Clock_1'. Fanout=1, Signal=Net_242
    Digital Clock 1: Automatic-assigning  clock 'ADC_IR_IntClock'. Fanout=73, Signal=\ADC_IR:clock\
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="UDB Clock/Enable Remapping Results">
    UDB Clk/Enable \ADC_IR:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: ADC_IR_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \ADC_IR:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: ADC_IR_IntClock, EnableOut: \ADC_IR:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \ADC_IR:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: ADC_IR_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ADC_IR_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \MotorControl:PWMUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: Clock_1 was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Clock_1, EnableOut: Constant 1
</CYPRESSTAG>
ADD: pft.M0040: information: The following 2 pin(s) will be assigned a location by the fitter: Trigger2(0), Trigger3(0)


Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Duplicate Macrocell detection">

Removing unused cells resulting from optimization
Done removing unused cells.
</CYPRESSTAG>
<CYPRESSTAG name="Design Equations" icon="FILE_RPT_EQUATION">

------------------------------------------------------------
Design Equations
------------------------------------------------------------
    <CYPRESSTAG name="Pin listing">

    ------------------------------------------------------------
    Pin listing
    ------------------------------------------------------------

    Pin : Name = LedOn(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => LedOn(0)__PA ,
            pad => LedOn(0)_PAD );
        Properties:
        {
        }

    Pin : Name = IR1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => IR1(0)__PA ,
            analog_term => Net_14 ,
            pad => IR1(0)_PAD ,
            pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_0\ );
        Properties:
        {
        }

    Pin : Name = IR2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => IR2(0)__PA ,
            analog_term => Net_15 ,
            pad => IR2(0)_PAD ,
            pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_1\ );
        Properties:
        {
        }

    Pin : Name = IR3(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => IR3(0)__PA ,
            analog_term => Net_17 ,
            pad => IR3(0)_PAD ,
            pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_2\ );
        Properties:
        {
        }

    Pin : Name = IR4(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => IR4(0)__PA ,
            analog_term => Net_18 ,
            pad => IR4(0)_PAD ,
            pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_3\ );
        Properties:
        {
        }

    Pin : Name = IR5(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => IR5(0)__PA ,
            analog_term => Net_20 ,
            pad => IR5(0)_PAD ,
            pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_4\ );
        Properties:
        {
        }

    Pin : Name = IR6(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => IR6(0)__PA ,
            analog_term => Net_22 ,
            pad => IR6(0)_PAD ,
            pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_5\ );
        Properties:
        {
        }

    Pin : Name = IR7(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => IR7(0)__PA ,
            analog_term => Net_23 ,
            pad => IR7(0)_PAD ,
            pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_6\ );
        Properties:
        {
        }

    Pin : Name = IR8(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => IR8(0)__PA ,
            analog_term => Net_25 ,
            pad => IR8(0)_PAD ,
            pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_7\ );
        Properties:
        {
        }

    Pin : Name = LED1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => LED1(0)__PA ,
            pad => LED1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = LED2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => LED2(0)__PA ,
            pad => LED2(0)_PAD );
        Properties:
        {
        }

    Pin : Name = LED3(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => LED3(0)__PA ,
            pad => LED3(0)_PAD );
        Properties:
        {
        }

    Pin : Name = LED4(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => LED4(0)__PA ,
            pad => LED4(0)_PAD );
        Properties:
        {
        }

    Pin : Name = LED5(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => LED5(0)__PA ,
            pad => LED5(0)_PAD );
        Properties:
        {
        }

    Pin : Name = SW1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_UP
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => SW1(0)__PA ,
            pad => SW1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = SW2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_UP
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => SW2(0)__PA ,
            pad => SW2(0)_PAD );
        Properties:
        {
        }

    Pin : Name = \LCD:LCDPort(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(0)\__PA ,
            pad => \LCD:LCDPort(0)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD:LCDPort(1)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(1)\__PA ,
            pad => \LCD:LCDPort(1)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD:LCDPort(2)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(2)\__PA ,
            pad => \LCD:LCDPort(2)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD:LCDPort(3)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(3)\__PA ,
            pad => \LCD:LCDPort(3)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD:LCDPort(4)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(4)\__PA ,
            pad => \LCD:LCDPort(4)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD:LCDPort(5)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(5)\__PA ,
            pad => \LCD:LCDPort(5)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD:LCDPort(6)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(6)\__PA ,
            pad => \LCD:LCDPort(6)_PAD\ );
        Properties:
        {
        }

    Pin : Name = Echo1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_DOWN
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Echo1(0)__PA ,
            fb => Net_398 ,
            pad => Echo1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Echo2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_DOWN
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Echo2(0)__PA ,
            fb => Net_399 ,
            pad => Echo2(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Echo3(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_DOWN
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Echo3(0)__PA ,
            fb => Net_400 ,
            pad => Echo3(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Trigger1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Trigger1(0)__PA ,
            pin_input => Net_412 ,
            pad => Trigger1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Trigger2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Trigger2(0)__PA ,
            pin_input => Net_416 ,
            pad => Trigger2(0)_PAD );

    Pin : Name = Trigger3(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Trigger3(0)__PA ,
            pin_input => Net_417 ,
            pad => Trigger3(0)_PAD );
    </CYPRESSTAG>
    <CYPRESSTAG name="Macrocell listing" icon="FILE_RPT_EQUATION">

    ------------------------------------------------------------
    Macrocell listing
    ------------------------------------------------------------

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * !\ADC_IR:ch_addr_5\
            + \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * !\ADC_IR:ch_addr_4\
            + \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * !\ADC_IR:ch_addr_3\
            + \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * !\ADC_IR:ch_addr_2\
            + !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * \ADC_IR:ch_addr_1\
            + \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * !\ADC_IR:ch_addr_1\
            + !\ADC_IR:AMuxHw_2_Decoder_old_id_0\ * \ADC_IR:ch_addr_0\
            + \ADC_IR:AMuxHw_2_Decoder_old_id_0\ * !\ADC_IR:ch_addr_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * \ADC_IR:ch_addr_5\
            + !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * \ADC_IR:ch_addr_4\
            + !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * \ADC_IR:ch_addr_3\
            + !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * \ADC_IR:ch_addr_2\
            + \ADC_IR:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\ADC_IR:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_12 * !\ADC_IR:bSAR_SEQ:load_period\
        );
        Output = \ADC_IR:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=\MotorControl:PWMUDB:status_2\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \MotorControl:PWMUDB:runmode_enable\ * 
              \MotorControl:PWMUDB:tc_i\
        );
        Output = \MotorControl:PWMUDB:status_2\ (fanout=1)

    MacroCell: Name=Net_412, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !selectUltraS_0 * !selectUltraS_1 * Net_411
        );
        Output = Net_412 (fanout=1)

    MacroCell: Name=Net_416, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !selectUltraS_0 * selectUltraS_1 * Net_411
        );
        Output = Net_416 (fanout=1)

    MacroCell: Name=Net_417, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              selectUltraS_0 * !selectUltraS_1 * Net_411
        );
        Output = Net_417 (fanout=1)

    MacroCell: Name=Net_402, Mode=(Combinatorial)
        Total # of inputs        : 5
        Total # of product terms : 3
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !selectUltraS_0 * !selectUltraS_1 * Net_398
            + !selectUltraS_0 * selectUltraS_1 * Net_399
            + selectUltraS_0 * !selectUltraS_1 * Net_400
        );
        Output = Net_402 (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:ch_addr_5\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:ch_addr_4\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:ch_addr_3\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:ch_addr_2\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:ch_addr_1\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:ch_addr_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=Net_13, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: PosEdge(\ADC_IR:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_IR:bSAR_SEQ:bus_clk_nrq_reg\ * !\ADC_IR:bSAR_SEQ:nrq_reg\
        );
        Output = Net_13 (fanout=4)

    MacroCell: Name=\ADC_IR:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC_IR:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_13
            + \ADC_IR:Net_3935\
        );
        Output = \ADC_IR:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\ADC_IR:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: PosEdge(\ADC_IR:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_IR:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_IR:bSAR_SEQ:nrq_reg\ (fanout=1)

    MacroCell: Name=\MotorControl:PWMUDB:runmode_enable\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_242) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \MotorControl:PWMUDB:control_7\
        );
        Output = \MotorControl:PWMUDB:runmode_enable\ (fanout=2)

    MacroCell: Name=\MotorControl:PWMUDB:prevCompare1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_242) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \MotorControl:PWMUDB:cmp1_less\
        );
        Output = \MotorControl:PWMUDB:prevCompare1\ (fanout=1)

    MacroCell: Name=\MotorControl:PWMUDB:prevCompare2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_242) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \MotorControl:PWMUDB:cmp2_less\
        );
        Output = \MotorControl:PWMUDB:prevCompare2\ (fanout=1)

    MacroCell: Name=\MotorControl:PWMUDB:status_0\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_242) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\MotorControl:PWMUDB:prevCompare1\ * 
              \MotorControl:PWMUDB:cmp1_less\
        );
        Output = \MotorControl:PWMUDB:status_0\ (fanout=1)

    MacroCell: Name=\MotorControl:PWMUDB:status_1\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_242) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\MotorControl:PWMUDB:prevCompare2\ * 
              \MotorControl:PWMUDB:cmp2_less\
        );
        Output = \MotorControl:PWMUDB:status_1\ (fanout=1)
    </CYPRESSTAG>
    <CYPRESSTAG name="Datapath listing">

    ------------------------------------------------------------
    Datapath listing
    ------------------------------------------------------------

    datapathcell: Name =\MotorControl:PWMUDB:sP8:pwmdp:u0\
        PORT MAP (
            clock => Net_242 ,
            cs_addr_2 => \MotorControl:PWMUDB:tc_i\ ,
            cs_addr_1 => \MotorControl:PWMUDB:runmode_enable\ ,
            cl0_comb => \MotorControl:PWMUDB:cmp1_less\ ,
            z0_comb => \MotorControl:PWMUDB:tc_i\ ,
            cl1_comb => \MotorControl:PWMUDB:cmp2_less\ ,
            f1_blk_stat_comb => \MotorControl:PWMUDB:status_3\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Status register listing">

    ------------------------------------------------------------
    Status register listing
    ------------------------------------------------------------

    statuscell: Name =\ADC_IR:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => \ADC_IR:clock\ ,
            status_0 => Net_13 ,
            clk_en => \ADC_IR:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_IR:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="StatusI register listing">

    ------------------------------------------------------------
    StatusI register listing
    ------------------------------------------------------------

    statusicell: Name =\MotorControl:PWMUDB:genblk8:stsreg\
        PORT MAP (
            clock => Net_242 ,
            status_3 => \MotorControl:PWMUDB:status_3\ ,
            status_2 => \MotorControl:PWMUDB:status_2\ ,
            status_1 => \MotorControl:PWMUDB:status_1\ ,
            status_0 => \MotorControl:PWMUDB:status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0100111"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Sync listing">

    ------------------------------------------------------------
    Sync listing
    ------------------------------------------------------------

    synccell: Name =\ADC_IR:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \ADC_IR:nrq\ ,
            out => \ADC_IR:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Control register listing">

    ------------------------------------------------------------
    Control register listing
    ------------------------------------------------------------

    controlcell: Name =\ADC_IR:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => \ADC_IR:clock\ ,
            control_7 => \ADC_IR:bSAR_SEQ:control_7\ ,
            control_6 => \ADC_IR:bSAR_SEQ:control_6\ ,
            control_5 => \ADC_IR:bSAR_SEQ:control_5\ ,
            control_4 => \ADC_IR:bSAR_SEQ:control_4\ ,
            control_3 => \ADC_IR:bSAR_SEQ:control_3\ ,
            control_2 => \ADC_IR:bSAR_SEQ:control_2\ ,
            control_1 => \ADC_IR:bSAR_SEQ:load_period\ ,
            control_0 => \ADC_IR:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\MotorControl:PWMUDB:genblk1:ctrlreg\
        PORT MAP (
            clock => Net_242 ,
            control_7 => \MotorControl:PWMUDB:control_7\ ,
            control_6 => \MotorControl:PWMUDB:control_6\ ,
            control_5 => \MotorControl:PWMUDB:control_5\ ,
            control_4 => \MotorControl:PWMUDB:control_4\ ,
            control_3 => \MotorControl:PWMUDB:control_3\ ,
            control_2 => \MotorControl:PWMUDB:control_2\ ,
            control_1 => \MotorControl:PWMUDB:control_1\ ,
            control_0 => \MotorControl:PWMUDB:control_0\ );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\TriggerReg:Sync:ctrl_reg\
        PORT MAP (
            control_7 => \TriggerReg:control_7\ ,
            control_6 => \TriggerReg:control_6\ ,
            control_5 => \TriggerReg:control_5\ ,
            control_4 => \TriggerReg:control_4\ ,
            control_3 => \TriggerReg:control_3\ ,
            control_2 => \TriggerReg:control_2\ ,
            control_1 => \TriggerReg:control_1\ ,
            control_0 => Net_411 );
        Properties:
        {
            cy_ctrl_mode_0 = "00000000"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Enable: True

    controlcell: Name =\selectUS:Sync:ctrl_reg\
        PORT MAP (
            control_7 => \selectUS:control_7\ ,
            control_6 => \selectUS:control_6\ ,
            control_5 => \selectUS:control_5\ ,
            control_4 => \selectUS:control_4\ ,
            control_3 => \selectUS:control_3\ ,
            control_2 => \selectUS:control_2\ ,
            control_1 => selectUltraS_1 ,
            control_0 => selectUltraS_0 );
        Properties:
        {
            cy_ctrl_mode_0 = "00000000"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Count7 listing">

    ------------------------------------------------------------
    Count7 listing
    ------------------------------------------------------------

    count7cell: Name =\ADC_IR:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => \ADC_IR:clock\ ,
            load => \ADC_IR:bSAR_SEQ:load_period\ ,
            enable => \ADC_IR:bSAR_SEQ:cnt_enable\ ,
            count_6 => \ADC_IR:bSAR_SEQ:count_6\ ,
            count_5 => \ADC_IR:ch_addr_5\ ,
            count_4 => \ADC_IR:ch_addr_4\ ,
            count_3 => \ADC_IR:ch_addr_3\ ,
            count_2 => \ADC_IR:ch_addr_2\ ,
            count_1 => \ADC_IR:ch_addr_1\ ,
            count_0 => \ADC_IR:ch_addr_0\ ,
            tc => \ADC_IR:bSAR_SEQ:cnt_tc\ ,
            clk_en => \ADC_IR:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000111"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_IR:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="DRQ listing">

    ------------------------------------------------------------
    DRQ listing
    ------------------------------------------------------------

    drqcell: Name =\ADC_IR:TempBuf\
        PORT MAP (
            dmareq => \ADC_IR:Net_3830\ ,
            termin => zero ,
            termout => \ADC_IR:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\ADC_IR:FinalBuf\
        PORT MAP (
            dmareq => \ADC_IR:Net_3698\ ,
            termin => zero ,
            termout => \ADC_IR:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Interrupt listing">

    ------------------------------------------------------------
    Interrupt listing
    ------------------------------------------------------------

    interrupt: Name =\ADC_IR:IRQ\
        PORT MAP (
            interrupt => Net_13 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =readIRSensors
        PORT MAP (
            interrupt => Net_13 );
        Properties:
        {
            int_type = "00"
            is_nmi = 0
        }

    interrupt: Name =isrUltraSonen
        PORT MAP (
            interrupt => Net_430 );
        Properties:
        {
            int_type = "00"
            is_nmi = 0
        }
    </CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Technology mapping summary" expanded>

------------------------------------------------------------
Technology mapping summary
------------------------------------------------------------

Resource Type                 : Used : Free :  Max :  % Used
============================================================
Digital Clocks                :    2 :    6 :    8 : 25.00 %
Analog Clocks                 :    0 :    4 :    4 :  0.00 %
CapSense Buffers              :    0 :    2 :    2 :  0.00 %
Interrupts                    :    3 :   29 :   32 :  9.38 %
IO                            :   29 :   19 :   48 : 60.42 %
Segment LCD                   :    0 :    1 :    1 :  0.00 %
I2C                           :    0 :    1 :    1 :  0.00 %
USB                           :    0 :    1 :    1 :  0.00 %
DMA Channels                  :    2 :   22 :   24 :  8.33 %
Timer                         :    1 :    3 :    4 : 25.00 %
UDB                           :      :      :      :        
  Macrocells                  :   86 :  106 :  192 : 44.79 %
  Unique P-terms              :  100 :  284 :  384 : 26.04 %
  Total P-terms               :  100 :      :      :        
  Datapath Cells              :    1 :   23 :   24 :  4.17 %
  Status Cells                :    4 :   20 :   24 : 16.67 %
    Status Registers          :    1 :      :      :        
    StatusI Registers         :    1 :      :      :        
    Sync Cells (x1)           :    1 :      :      :        
    Routed Count7 Load/Enable :    1 :      :      :        
  Control Cells               :    5 :   19 :   24 : 20.83 %
    Control Registers         :    4 :      :      :        
    Count7 Cells              :    1 :      :      :        
Comparator                    :    0 :    2 :    2 :  0.00 %
Delta-Sigma ADC               :    0 :    1 :    1 :  0.00 %
LPF                           :    0 :    2 :    2 :  0.00 %
SAR ADC                       :    1 :    0 :    1 : 100.00 %
DAC                           :      :      :      :        
  VIDAC                       :    0 :    1 :    1 :  0.00 %
</CYPRESSTAG>
Technology Mapping: Elapsed time ==> 0s.353ms
Tech Mapping phase: Elapsed time ==> 0s.430ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Placement">
Info: apr.M0002: Analog signal "Net_27" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_28" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_30" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_32" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_33" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_35" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_37" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_38" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_40" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_42" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_43" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_45" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_47" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_48" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_50" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_52" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_53" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_55" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_57" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_58" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_60" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_62" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_63" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_65" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_67" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_68" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_70" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_72" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_73" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_75" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_77" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_78" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_80" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_82" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_83" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_85" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_87" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_88" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_90" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_92" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_93" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_94" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_95" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_96" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_97" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_98" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_99" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_100" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_101" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_102" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_103" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_104" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_105" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_106" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_107" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_108" is connected to one terminal only. (App=cydsfit)
Initial Analog Placement Results:
IO_3@[IOP=(12)][IoId=(3)] : Echo1(0) (fixed)
IO_1@[IOP=(12)][IoId=(1)] : Echo2(0) (fixed)
IO_0@[IOP=(1)][IoId=(0)] : Echo3(0) (fixed)
IO_0@[IOP=(0)][IoId=(0)] : IR1(0) (fixed)
IO_1@[IOP=(0)][IoId=(1)] : IR2(0) (fixed)
IO_2@[IOP=(0)][IoId=(2)] : IR3(0) (fixed)
IO_3@[IOP=(0)][IoId=(3)] : IR4(0) (fixed)
IO_4@[IOP=(0)][IoId=(4)] : IR5(0) (fixed)
IO_5@[IOP=(0)][IoId=(5)] : IR6(0) (fixed)
IO_6@[IOP=(0)][IoId=(6)] : IR7(0) (fixed)
IO_7@[IOP=(0)][IoId=(7)] : IR8(0) (fixed)
IO_0@[IOP=(3)][IoId=(0)] : LED1(0) (fixed)
IO_1@[IOP=(3)][IoId=(1)] : LED2(0) (fixed)
IO_2@[IOP=(3)][IoId=(2)] : LED3(0) (fixed)
IO_3@[IOP=(3)][IoId=(3)] : LED4(0) (fixed)
IO_4@[IOP=(3)][IoId=(4)] : LED5(0) (fixed)
IO_7@[IOP=(3)][IoId=(7)] : LedOn(0) (fixed)
IO_5@[IOP=(3)][IoId=(5)] : SW1(0) (fixed)
IO_6@[IOP=(3)][IoId=(6)] : SW2(0) (fixed)
IO_2@[IOP=(12)][IoId=(2)] : Trigger1(0) (fixed)
IO_0@[IOP=(2)][IoId=(0)] : \LCD:LCDPort(0)\ (fixed)
IO_1@[IOP=(2)][IoId=(1)] : \LCD:LCDPort(1)\ (fixed)
IO_2@[IOP=(2)][IoId=(2)] : \LCD:LCDPort(2)\ (fixed)
IO_3@[IOP=(2)][IoId=(3)] : \LCD:LCDPort(3)\ (fixed)
IO_4@[IOP=(2)][IoId=(4)] : \LCD:LCDPort(4)\ (fixed)
IO_5@[IOP=(2)][IoId=(5)] : \LCD:LCDPort(5)\ (fixed)
IO_6@[IOP=(2)][IoId=(6)] : \LCD:LCDPort(6)\ (fixed)
SAR[0]@[FFB(SAR,0)] : \ADC_IR:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \ADC_IR:SAR:vRef_Vdda_1\
Analog Placement Results:
IO_3@[IOP=(12)][IoId=(3)] : Echo1(0) (fixed)
IO_1@[IOP=(12)][IoId=(1)] : Echo2(0) (fixed)
IO_0@[IOP=(1)][IoId=(0)] : Echo3(0) (fixed)
IO_0@[IOP=(0)][IoId=(0)] : IR1(0) (fixed)
IO_1@[IOP=(0)][IoId=(1)] : IR2(0) (fixed)
IO_2@[IOP=(0)][IoId=(2)] : IR3(0) (fixed)
IO_3@[IOP=(0)][IoId=(3)] : IR4(0) (fixed)
IO_4@[IOP=(0)][IoId=(4)] : IR5(0) (fixed)
IO_5@[IOP=(0)][IoId=(5)] : IR6(0) (fixed)
IO_6@[IOP=(0)][IoId=(6)] : IR7(0) (fixed)
IO_7@[IOP=(0)][IoId=(7)] : IR8(0) (fixed)
IO_0@[IOP=(3)][IoId=(0)] : LED1(0) (fixed)
IO_1@[IOP=(3)][IoId=(1)] : LED2(0) (fixed)
IO_2@[IOP=(3)][IoId=(2)] : LED3(0) (fixed)
IO_3@[IOP=(3)][IoId=(3)] : LED4(0) (fixed)
IO_4@[IOP=(3)][IoId=(4)] : LED5(0) (fixed)
IO_7@[IOP=(3)][IoId=(7)] : LedOn(0) (fixed)
IO_5@[IOP=(3)][IoId=(5)] : SW1(0) (fixed)
IO_6@[IOP=(3)][IoId=(6)] : SW2(0) (fixed)
IO_2@[IOP=(12)][IoId=(2)] : Trigger1(0) (fixed)
IO_0@[IOP=(2)][IoId=(0)] : \LCD:LCDPort(0)\ (fixed)
IO_1@[IOP=(2)][IoId=(1)] : \LCD:LCDPort(1)\ (fixed)
IO_2@[IOP=(2)][IoId=(2)] : \LCD:LCDPort(2)\ (fixed)
IO_3@[IOP=(2)][IoId=(3)] : \LCD:LCDPort(3)\ (fixed)
IO_4@[IOP=(2)][IoId=(4)] : \LCD:LCDPort(4)\ (fixed)
IO_5@[IOP=(2)][IoId=(5)] : \LCD:LCDPort(5)\ (fixed)
IO_6@[IOP=(2)][IoId=(6)] : \LCD:LCDPort(6)\ (fixed)
SAR[0]@[FFB(SAR,0)] : \ADC_IR:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \ADC_IR:SAR:vRef_Vdda_1\

Analog Placement phase: Elapsed time ==> 0s.108ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Routing">
Analog Routing phase: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Code Generation">
============ Analog Final Answer Routes ============
Dump of CyAnalogRoutingResultsDB
Map of net to items {
  Net: \ADC_IR:Net_2803\ {
    sar_0_vplus
  }
  Net: Net_14 {
    p0_0
  }
  Net: Net_15 {
    p0_1
  }
  Net: Net_17 {
    p0_2
  }
  Net: Net_18 {
    p0_3
  }
  Net: Net_20 {
    p0_4
  }
  Net: Net_22 {
    p0_5
  }
  Net: Net_23 {
    p0_6
  }
  Net: Net_25 {
    p0_7
  }
  Net: Net_27 {
  }
  Net: Net_28 {
  }
  Net: Net_30 {
  }
  Net: Net_32 {
  }
  Net: Net_33 {
  }
  Net: Net_35 {
  }
  Net: Net_37 {
  }
  Net: Net_38 {
  }
  Net: Net_40 {
  }
  Net: Net_42 {
  }
  Net: Net_43 {
  }
  Net: Net_45 {
  }
  Net: Net_47 {
  }
  Net: Net_48 {
  }
  Net: Net_50 {
  }
  Net: Net_52 {
  }
  Net: Net_53 {
  }
  Net: Net_55 {
  }
  Net: Net_57 {
  }
  Net: Net_58 {
  }
  Net: Net_60 {
  }
  Net: Net_62 {
  }
  Net: Net_63 {
  }
  Net: Net_65 {
  }
  Net: Net_67 {
  }
  Net: Net_68 {
  }
  Net: Net_70 {
  }
  Net: Net_72 {
  }
  Net: Net_73 {
  }
  Net: Net_75 {
  }
  Net: Net_77 {
  }
  Net: Net_78 {
  }
  Net: Net_80 {
  }
  Net: Net_82 {
  }
  Net: Net_83 {
  }
  Net: Net_85 {
  }
  Net: Net_87 {
  }
  Net: Net_88 {
  }
  Net: Net_90 {
  }
  Net: Net_92 {
  }
  Net: Net_93 {
  }
  Net: Net_94 {
  }
  Net: Net_95 {
  }
  Net: Net_96 {
  }
  Net: Net_97 {
  }
  Net: Net_98 {
  }
  Net: Net_99 {
  }
  Net: Net_100 {
  }
  Net: Net_101 {
  }
  Net: Net_102 {
  }
  Net: Net_103 {
  }
  Net: Net_104 {
  }
  Net: Net_105 {
  }
  Net: Net_106 {
  }
  Net: Net_107 {
  }
  Net: Net_108 {
  }
  Net: \ADC_IR:SAR:Net_126\ {
    sar_0_vrefhi
    sar_0_vminus_x_sar_0_vrefhi
    sar_0_vminus
  }
  Net: \ADC_IR:SAR:Net_209\ {
  }
  Net: \ADC_IR:SAR:Net_235\ {
    common_sar_vref_vdda/2
    common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2
    sar_0_vref_vdda_vdda_2
    sar_0_vref_x_sar_0_vref_vdda_vdda_2
    sar_0_vref
  }
  Net: AmuxNet::\ADC_IR:AMuxHw_2\ {
    sar_0_vplus
    agl7_x_sar_0_vplus
    agl7
    agl7_x_p0_7
    agl4_x_sar_0_vplus
    agl4
    agl4_x_p0_4
    agl6_x_sar_0_vplus
    agl6
    agl6_x_p0_6
    agl5_x_sar_0_vplus
    agl5
    agl5_x_p0_5
    agl5_x_p0_1
    agl7_x_p0_3
    agl6_x_p0_2
    agl4_x_p0_0
    p0_7
    p0_4
    p0_6
    p0_5
    p0_1
    p0_3
    p0_2
    p0_0
  }
}
Map of item to net {
  sar_0_vrefhi                                     -> \ADC_IR:SAR:Net_126\
  sar_0_vminus_x_sar_0_vrefhi                      -> \ADC_IR:SAR:Net_126\
  sar_0_vminus                                     -> \ADC_IR:SAR:Net_126\
  common_sar_vref_vdda/2                           -> \ADC_IR:SAR:Net_235\
  common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2  -> \ADC_IR:SAR:Net_235\
  sar_0_vref_vdda_vdda_2                           -> \ADC_IR:SAR:Net_235\
  sar_0_vref_x_sar_0_vref_vdda_vdda_2              -> \ADC_IR:SAR:Net_235\
  sar_0_vref                                       -> \ADC_IR:SAR:Net_235\
  sar_0_vplus                                      -> \ADC_IR:Net_2803\
  p0_0                                             -> Net_14
  p0_1                                             -> Net_15
  p0_2                                             -> Net_17
  p0_3                                             -> Net_18
  p0_4                                             -> Net_20
  p0_5                                             -> Net_22
  p0_6                                             -> Net_23
  p0_7                                             -> Net_25
  agl7_x_sar_0_vplus                               -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl7                                             -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl7_x_p0_7                                      -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl4_x_sar_0_vplus                               -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl4                                             -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl4_x_p0_4                                      -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl6_x_sar_0_vplus                               -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl6                                             -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl6_x_p0_6                                      -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl5_x_sar_0_vplus                               -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl5                                             -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl5_x_p0_5                                      -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl5_x_p0_1                                      -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl7_x_p0_3                                      -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl6_x_p0_2                                      -> AmuxNet::\ADC_IR:AMuxHw_2\
  agl4_x_p0_0                                      -> AmuxNet::\ADC_IR:AMuxHw_2\
}
Mux Info {
  Mux: \ADC_IR:AMuxHw_2\ {
     Mouth: \ADC_IR:Net_2803\
     Guts:  AmuxNet::\ADC_IR:AMuxHw_2\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_14
      Outer: agl4_x_p0_0
      Inner: __open__
      Path {
        p0_0
        agl4_x_p0_0
        agl4
        agl4_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 1 {
      Net:   Net_15
      Outer: agl5_x_p0_1
      Inner: __open__
      Path {
        p0_1
        agl5_x_p0_1
        agl5
        agl5_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 2 {
      Net:   Net_17
      Outer: agl6_x_p0_2
      Inner: __open__
      Path {
        p0_2
        agl6_x_p0_2
        agl6
        agl6_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 3 {
      Net:   Net_18
      Outer: agl7_x_p0_3
      Inner: __open__
      Path {
        p0_3
        agl7_x_p0_3
        agl7
        agl7_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 4 {
      Net:   Net_20
      Outer: agl4_x_p0_4
      Inner: __open__
      Path {
        p0_4
        agl4_x_p0_4
        agl4
        agl4_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 5 {
      Net:   Net_22
      Outer: agl5_x_p0_5
      Inner: __open__
      Path {
        p0_5
        agl5_x_p0_5
        agl5
        agl5_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 6 {
      Net:   Net_23
      Outer: agl6_x_p0_6
      Inner: __open__
      Path {
        p0_6
        agl6_x_p0_6
        agl6
        agl6_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 7 {
      Net:   Net_25
      Outer: agl7_x_p0_7
      Inner: __open__
      Path {
        p0_7
        agl7_x_p0_7
        agl7
        agl7_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 8 {
      Net:   Net_27
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_28
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_30
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_32
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_33
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_35
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_37
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_38
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_40
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_42
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_43
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_45
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_47
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_48
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_50
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_52
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_53
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_55
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_57
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_58
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_60
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_62
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_63
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_65
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 32 {
      Net:   Net_67
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 33 {
      Net:   Net_68
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 34 {
      Net:   Net_70
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 35 {
      Net:   Net_72
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 36 {
      Net:   Net_73
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 37 {
      Net:   Net_75
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 38 {
      Net:   Net_77
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 39 {
      Net:   Net_78
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 40 {
      Net:   Net_80
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 41 {
      Net:   Net_82
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 42 {
      Net:   Net_83
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 43 {
      Net:   Net_85
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 44 {
      Net:   Net_87
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 45 {
      Net:   Net_88
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 46 {
      Net:   Net_90
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 47 {
      Net:   Net_92
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 48 {
      Net:   Net_93
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 49 {
      Net:   Net_94
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 50 {
      Net:   Net_95
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 51 {
      Net:   Net_96
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 52 {
      Net:   Net_97
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 53 {
      Net:   Net_98
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 54 {
      Net:   Net_99
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 55 {
      Net:   Net_100
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 56 {
      Net:   Net_101
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 57 {
      Net:   Net_102
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 58 {
      Net:   Net_103
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 59 {
      Net:   Net_104
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 60 {
      Net:   Net_105
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 61 {
      Net:   Net_106
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 62 {
      Net:   Net_107
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 63 {
      Net:   Net_108
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
}
Dump of CyP35AnalogRoutingResultsDB
IsVddaHalfUsedForComp = False
IsVddaHalfUsedForSar0 = True
IsVddaHalfUsedForSar1 = False
Analog Code Generation phase: Elapsed time ==> 0s.375ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Placement">
<CYPRESSTAG name="Detailed placement messages">
I2076: Total run-time: 3.3 sec.

</CYPRESSTAG>
<CYPRESSTAG name="PLD Packing">
<CYPRESSTAG name="PLD Packing Summary" expanded>

------------------------------------------------------------
PLD Packing Summary
------------------------------------------------------------
            Resource Type : Used : Free :  Max :  % Used
    ====================================================
                     PLDs :   24 :   24 :   48 :  50.00%

<CYPRESSTAG name="PLD Statistics">

        PLD Resource Type :     Average/LAB
    =======================================
                   Inputs :            7.71
                   Pterms :            4.17
               Macrocells :            3.58
</CYPRESSTAG>
<CYPRESSTAG name="Packed PLD Contents">
Packed PLD Contents not displayed at this verbose level.</CYPRESSTAG>
</CYPRESSTAG>
PLD Packing: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Partitioning">
<CYPRESSTAG name="Initial Partitioning Summary">
Initial Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
<CYPRESSTAG name="Final Partitioning Summary">
Final Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
Partitioning: Elapsed time ==> 0s.094ms
</CYPRESSTAG>
<CYPRESSTAG name="Final Placement Summary">

------------------------------------------------------------
Final Placement Summary
------------------------------------------------------------

       Resource Type :      Count : Avg Inputs : Avg Outputs
    ========================================================
                 UDB :         12 :       8.92 :       7.17
<CYPRESSTAG name="Final Placement Details">
<CYPRESSTAG name="Component Details">

------------------------------------------------------------
Component Placement Details
------------------------------------------------------------
UDB [UDB=(0,0)] is empty.
UDB [UDB=(0,1)] is empty.
UDB [UDB=(0,2)] is empty.
UDB [UDB=(0,3)] is empty.
UDB [UDB=(0,4)] is empty.
UDB [UDB=(0,5)] is empty.
UDB [UDB=(1,0)] is empty.
UDB [UDB=(1,1)] is empty.
UDB [UDB=(1,2)] is empty.
UDB [UDB=(1,3)] is empty.
UDB [UDB=(1,4)] is empty.
UDB [UDB=(1,5)] is empty.
UDB [UDB=(2,0)] contents:
LAB@[UDB=(2,0)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,0)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)
        Properties               : 
        {
        }
}

controlcell: Name =\selectUS:Sync:ctrl_reg\
    PORT MAP (
        control_7 => \selectUS:control_7\ ,
        control_6 => \selectUS:control_6\ ,
        control_5 => \selectUS:control_5\ ,
        control_4 => \selectUS:control_4\ ,
        control_3 => \selectUS:control_3\ ,
        control_2 => \selectUS:control_2\ ,
        control_1 => selectUltraS_1 ,
        control_0 => selectUltraS_0 );
    Properties:
    {
        cy_ctrl_mode_0 = "00000000"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Enable: True

UDB [UDB=(2,1)] contents:
LAB@[UDB=(2,1)][LB=0] #macrocells=4, #inputs=10, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=Net_416, Mode=(Combinatorial) @ [UDB=(2,1)][LB=0][MC=2]
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !selectUltraS_0 * selectUltraS_1 * Net_411
        );
        Output = Net_416 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,1)][LB=1] #macrocells=4, #inputs=10, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=Net_417, Mode=(Combinatorial) @ [UDB=(2,1)][LB=1][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              selectUltraS_0 * !selectUltraS_1 * Net_411
        );
        Output = Net_417 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,2)] contents:
LAB@[UDB=(2,2)][LB=0] #macrocells=4, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial) @ [UDB=(2,2)][LB=0][MC=2]
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * \ADC_IR:ch_addr_5\
            + !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * \ADC_IR:ch_addr_4\
            + !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * \ADC_IR:ch_addr_3\
            + !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * \ADC_IR:ch_addr_2\
            + \ADC_IR:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,2)][LB=1] #macrocells=4, #inputs=10, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:ch_addr_5\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_old_id_5\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:ch_addr_2\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_old_id_2\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:ch_addr_3\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_old_id_3\ (fanout=66)
        Properties               : 
        {
        }
}

UDB [UDB=(2,3)] contents:
LAB@[UDB=(2,3)][LB=0] #macrocells=1, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial) @ [UDB=(2,3)][LB=0][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * !\ADC_IR:ch_addr_5\
            + \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * !\ADC_IR:ch_addr_4\
            + \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * !\ADC_IR:ch_addr_3\
            + \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * !\ADC_IR:ch_addr_2\
            + !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * \ADC_IR:ch_addr_1\
            + \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * !\ADC_IR:ch_addr_1\
            + !\ADC_IR:AMuxHw_2_Decoder_old_id_0\ * \ADC_IR:ch_addr_0\
            + \ADC_IR:AMuxHw_2_Decoder_old_id_0\ * !\ADC_IR:ch_addr_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_is_active_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,3)][LB=1] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:ch_addr_4\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_old_id_4\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)
        Properties               : 
        {
        }
}

count7cell: Name =\ADC_IR:bSAR_SEQ:ChannelCounter\
    PORT MAP (
        clock => \ADC_IR:clock\ ,
        load => \ADC_IR:bSAR_SEQ:load_period\ ,
        enable => \ADC_IR:bSAR_SEQ:cnt_enable\ ,
        count_6 => \ADC_IR:bSAR_SEQ:count_6\ ,
        count_5 => \ADC_IR:ch_addr_5\ ,
        count_4 => \ADC_IR:ch_addr_4\ ,
        count_3 => \ADC_IR:ch_addr_3\ ,
        count_2 => \ADC_IR:ch_addr_2\ ,
        count_1 => \ADC_IR:ch_addr_1\ ,
        count_0 => \ADC_IR:ch_addr_0\ ,
        tc => \ADC_IR:bSAR_SEQ:cnt_tc\ ,
        clk_en => \ADC_IR:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0000111"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_IR:bSAR_SEQ:enable\)

UDB [UDB=(2,4)] contents:
LAB@[UDB=(2,4)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,4)][LB=1] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:ch_addr_1\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_old_id_1\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:ch_addr_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_old_id_0\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,5)] contents:
LAB@[UDB=(2,5)][LB=0] #macrocells=3, #inputs=3, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\MotorControl:PWMUDB:status_0\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_242) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\MotorControl:PWMUDB:prevCompare1\ * 
              \MotorControl:PWMUDB:cmp1_less\
        );
        Output = \MotorControl:PWMUDB:status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\MotorControl:PWMUDB:prevCompare1\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_242) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \MotorControl:PWMUDB:cmp1_less\
        );
        Output = \MotorControl:PWMUDB:prevCompare1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\MotorControl:PWMUDB:prevCompare2\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_242) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \MotorControl:PWMUDB:cmp2_less\
        );
        Output = \MotorControl:PWMUDB:prevCompare2\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,5)][LB=1] #macrocells=3, #inputs=5, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\MotorControl:PWMUDB:runmode_enable\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_242) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \MotorControl:PWMUDB:control_7\
        );
        Output = \MotorControl:PWMUDB:runmode_enable\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\MotorControl:PWMUDB:status_1\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_242) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\MotorControl:PWMUDB:prevCompare2\ * 
              \MotorControl:PWMUDB:cmp2_less\
        );
        Output = \MotorControl:PWMUDB:status_1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial) @ [UDB=(2,5)][LB=1][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_12 * !\ADC_IR:bSAR_SEQ:load_period\
        );
        Output = \ADC_IR:bSAR_SEQ:cnt_enable\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

datapathcell: Name =\MotorControl:PWMUDB:sP8:pwmdp:u0\
    PORT MAP (
        clock => Net_242 ,
        cs_addr_2 => \MotorControl:PWMUDB:tc_i\ ,
        cs_addr_1 => \MotorControl:PWMUDB:runmode_enable\ ,
        cl0_comb => \MotorControl:PWMUDB:cmp1_less\ ,
        z0_comb => \MotorControl:PWMUDB:tc_i\ ,
        cl1_comb => \MotorControl:PWMUDB:cmp2_less\ ,
        f1_blk_stat_comb => \MotorControl:PWMUDB:status_3\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

controlcell: Name =\ADC_IR:bSAR_SEQ:CtrlReg\
    PORT MAP (
        clock => \ADC_IR:clock\ ,
        control_7 => \ADC_IR:bSAR_SEQ:control_7\ ,
        control_6 => \ADC_IR:bSAR_SEQ:control_6\ ,
        control_5 => \ADC_IR:bSAR_SEQ:control_5\ ,
        control_4 => \ADC_IR:bSAR_SEQ:control_4\ ,
        control_3 => \ADC_IR:bSAR_SEQ:control_3\ ,
        control_2 => \ADC_IR:bSAR_SEQ:control_2\ ,
        control_1 => \ADC_IR:bSAR_SEQ:load_period\ ,
        control_0 => \ADC_IR:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_ctrl_mode_0 = "00000111"
        cy_ctrl_mode_1 = "00000110"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(3,0)] contents:
LAB@[UDB=(3,0)][LB=0] #macrocells=4, #inputs=12, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=Net_402, Mode=(Combinatorial) @ [UDB=(3,0)][LB=0][MC=3]
        Total # of inputs        : 5
        Total # of product terms : 3
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !selectUltraS_0 * !selectUltraS_1 * Net_398
            + !selectUltraS_0 * selectUltraS_1 * Net_399
            + selectUltraS_0 * !selectUltraS_1 * Net_400
        );
        Output = Net_402 (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,0)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,1)] contents:
LAB@[UDB=(3,1)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,1)][LB=1] #macrocells=4, #inputs=10, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=Net_412, Mode=(Combinatorial) @ [UDB=(3,1)][LB=1][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !selectUltraS_0 * !selectUltraS_1 * Net_411
        );
        Output = Net_412 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)
        Properties               : 
        {
        }
}

controlcell: Name =\TriggerReg:Sync:ctrl_reg\
    PORT MAP (
        control_7 => \TriggerReg:control_7\ ,
        control_6 => \TriggerReg:control_6\ ,
        control_5 => \TriggerReg:control_5\ ,
        control_4 => \TriggerReg:control_4\ ,
        control_3 => \TriggerReg:control_3\ ,
        control_2 => \TriggerReg:control_2\ ,
        control_1 => \TriggerReg:control_1\ ,
        control_0 => Net_411 );
    Properties:
    {
        cy_ctrl_mode_0 = "00000000"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Enable: True

UDB [UDB=(3,2)] contents:
LAB@[UDB=(3,2)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,2)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)
        Properties               : 
        {
        }
}

synccell: Name =\ADC_IR:Sync:genblk1[0]:INST\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        in => \ADC_IR:nrq\ ,
        out => \ADC_IR:Net_3935\ );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(3,3)] contents:
LAB@[UDB=(3,3)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,3)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,4)] contents:
LAB@[UDB=(3,4)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,4)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_IR:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_IR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_IR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_IR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_IR:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)
        Properties               : 
        {
        }
}

statuscell: Name =\ADC_IR:bSAR_SEQ:EOCSts\
    PORT MAP (
        clock => \ADC_IR:clock\ ,
        status_0 => Net_13 ,
        clk_en => \ADC_IR:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000001"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_IR:bSAR_SEQ:enable\)

UDB [UDB=(3,5)] contents:
LAB@[UDB=(3,5)][LB=0] #macrocells=2, #inputs=5, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_IR:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC_IR:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_13
            + \ADC_IR:Net_3935\
        );
        Output = \ADC_IR:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\MotorControl:PWMUDB:status_2\, Mode=(Combinatorial) @ [UDB=(3,5)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \MotorControl:PWMUDB:runmode_enable\ * 
              \MotorControl:PWMUDB:tc_i\
        );
        Output = \MotorControl:PWMUDB:status_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(3,5)][LB=1] #macrocells=2, #inputs=2, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=Net_13, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: PosEdge(\ADC_IR:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_IR:bSAR_SEQ:bus_clk_nrq_reg\ * !\ADC_IR:bSAR_SEQ:nrq_reg\
        );
        Output = Net_13 (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_IR:bSAR_SEQ:nrq_reg\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_IR:clock\) => Global
            Clock Enable: PosEdge(\ADC_IR:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_IR:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_IR:bSAR_SEQ:nrq_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

statusicell: Name =\MotorControl:PWMUDB:genblk8:stsreg\
    PORT MAP (
        clock => Net_242 ,
        status_3 => \MotorControl:PWMUDB:status_3\ ,
        status_2 => \MotorControl:PWMUDB:status_2\ ,
        status_1 => \MotorControl:PWMUDB:status_1\ ,
        status_0 => \MotorControl:PWMUDB:status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0100111"
    }
    Clock Polarity: Active High
    Clock Enable: True

controlcell: Name =\MotorControl:PWMUDB:genblk1:ctrlreg\
    PORT MAP (
        clock => Net_242 ,
        control_7 => \MotorControl:PWMUDB:control_7\ ,
        control_6 => \MotorControl:PWMUDB:control_6\ ,
        control_5 => \MotorControl:PWMUDB:control_5\ ,
        control_4 => \MotorControl:PWMUDB:control_4\ ,
        control_3 => \MotorControl:PWMUDB:control_3\ ,
        control_2 => \MotorControl:PWMUDB:control_2\ ,
        control_1 => \MotorControl:PWMUDB:control_1\ ,
        control_0 => \MotorControl:PWMUDB:control_0\ );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

Intr container @ [IntrContainer=(0)]: 
  Intr@ [IntrContainer=(0)][IntrId=(0)] 
    interrupt: Name =\ADC_IR:IRQ\
        PORT MAP (
            interrupt => Net_13 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(1)] 
    interrupt: Name =readIRSensors
        PORT MAP (
            interrupt => Net_13 );
        Properties:
        {
            int_type = "00"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(17)] 
    interrupt: Name =isrUltraSonen
        PORT MAP (
            interrupt => Net_430 );
        Properties:
        {
            int_type = "00"
            is_nmi = 0
        }
Drq container @ [DrqContainer=(0)]: 
  Dma@ [DrqContainer=(0)][DrqId=(0)] 
    drqcell: Name =\ADC_IR:FinalBuf\
        PORT MAP (
            dmareq => \ADC_IR:Net_3698\ ,
            termin => zero ,
            termout => \ADC_IR:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqContainer=(0)][DrqId=(1)] 
    drqcell: Name =\ADC_IR:TempBuf\
        PORT MAP (
            dmareq => \ADC_IR:Net_3830\ ,
            termin => zero ,
            termout => \ADC_IR:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
Port 0 contains the following IO cells:
[IoId=0]: 
Pin : Name = IR1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => IR1(0)__PA ,
        analog_term => Net_14 ,
        pad => IR1(0)_PAD ,
        pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_0\ );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = IR2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => IR2(0)__PA ,
        analog_term => Net_15 ,
        pad => IR2(0)_PAD ,
        pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_1\ );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = IR3(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => IR3(0)__PA ,
        analog_term => Net_17 ,
        pad => IR3(0)_PAD ,
        pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_2\ );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = IR4(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => IR4(0)__PA ,
        analog_term => Net_18 ,
        pad => IR4(0)_PAD ,
        pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_3\ );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = IR5(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => IR5(0)__PA ,
        analog_term => Net_20 ,
        pad => IR5(0)_PAD ,
        pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_4\ );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = IR6(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => IR6(0)__PA ,
        analog_term => Net_22 ,
        pad => IR6(0)_PAD ,
        pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_5\ );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = IR7(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => IR7(0)__PA ,
        analog_term => Net_23 ,
        pad => IR7(0)_PAD ,
        pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_6\ );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = IR8(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => IR8(0)__PA ,
        analog_term => Net_25 ,
        pad => IR8(0)_PAD ,
        pin_input => \ADC_IR:AMuxHw_2_Decoder_one_hot_7\ );
    Properties:
    {
    }

Port 1 contains the following IO cells:
[IoId=0]: 
Pin : Name = Echo3(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_DOWN
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Echo3(0)__PA ,
        fb => Net_400 ,
        pad => Echo3(0)_PAD );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = Trigger3(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Trigger3(0)__PA ,
        pin_input => Net_417 ,
        pad => Trigger3(0)_PAD );
    Properties:
    {
    }

Port 2 contains the following IO cells:
[IoId=0]: 
Pin : Name = \LCD:LCDPort(0)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD:LCDPort(0)\__PA ,
        pad => \LCD:LCDPort(0)_PAD\ );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = \LCD:LCDPort(1)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD:LCDPort(1)\__PA ,
        pad => \LCD:LCDPort(1)_PAD\ );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = \LCD:LCDPort(2)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD:LCDPort(2)\__PA ,
        pad => \LCD:LCDPort(2)_PAD\ );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = \LCD:LCDPort(3)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD:LCDPort(3)\__PA ,
        pad => \LCD:LCDPort(3)_PAD\ );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = \LCD:LCDPort(4)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD:LCDPort(4)\__PA ,
        pad => \LCD:LCDPort(4)_PAD\ );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = \LCD:LCDPort(5)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD:LCDPort(5)\__PA ,
        pad => \LCD:LCDPort(5)_PAD\ );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = \LCD:LCDPort(6)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD:LCDPort(6)\__PA ,
        pad => \LCD:LCDPort(6)_PAD\ );
    Properties:
    {
    }

Port 3 contains the following IO cells:
[IoId=0]: 
Pin : Name = LED1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => LED1(0)__PA ,
        pad => LED1(0)_PAD );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = LED2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => LED2(0)__PA ,
        pad => LED2(0)_PAD );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = LED3(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => LED3(0)__PA ,
        pad => LED3(0)_PAD );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = LED4(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => LED4(0)__PA ,
        pad => LED4(0)_PAD );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = LED5(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => LED5(0)__PA ,
        pad => LED5(0)_PAD );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = SW1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_UP
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => SW1(0)__PA ,
        pad => SW1(0)_PAD );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = SW2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_UP
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => SW2(0)__PA ,
        pad => SW2(0)_PAD );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = LedOn(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => LedOn(0)__PA ,
        pad => LedOn(0)_PAD );
    Properties:
    {
    }

Port 12 contains the following IO cells:
[IoId=1]: 
Pin : Name = Echo2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_DOWN
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Echo2(0)__PA ,
        fb => Net_399 ,
        pad => Echo2(0)_PAD );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = Trigger1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Trigger1(0)__PA ,
        pin_input => Net_412 ,
        pad => Trigger1(0)_PAD );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = Echo1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_DOWN
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Echo1(0)__PA ,
        fb => Net_398 ,
        pad => Echo1(0)_PAD );
    Properties:
    {
    }

Port 15 contains the following IO cells:
[IoId=4]: 
Pin : Name = Trigger2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Trigger2(0)__PA ,
        pin_input => Net_416 ,
        pad => Trigger2(0)_PAD );
    Properties:
    {
    }

ARM group 0: empty
Cache group 0: empty
CapSense group 0: empty
Clock group 0: 
    Clock Block @ F(Clock,0): 
    clockblockcell: Name =ClockBlock
        PORT MAP (
            imo => ClockBlock_IMO ,
            pllout => ClockBlock_PLL_OUT ,
            ilo => ClockBlock_ILO ,
            clk_100k => ClockBlock_100k ,
            clk_1k => ClockBlock_1k ,
            clk_32k => ClockBlock_32k ,
            xtal => ClockBlock_XTAL ,
            clk_32k_xtal => ClockBlock_XTAL_32KHZ ,
            clk_sync => ClockBlock_MASTER_CLK ,
            clk_bus_glb => ClockBlock_BUS_CLK ,
            clk_bus => ClockBlock_BUS_CLK_local ,
            dclk_glb_0 => Net_242 ,
            dclk_0 => Net_242_local ,
            dclk_glb_1 => \ADC_IR:clock\ ,
            dclk_1 => \ADC_IR:clock_local\ );
        Properties:
        {
        }
Comparator group 0: empty
DSM group 0: empty
Decimator group 0: empty
EMIF group 0: empty
I2C group 0: empty
LCD group 0: empty
LVD group 0: empty
PICU group 0: empty
PM group 0: empty
SPC group 0: empty
Timer group 0: 
    Timer Block @ F(Timer,0): 
    timercell: Name =\TimerUS:TimerHW\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            enable => Net_402 ,
            timer_reset => Net_411 ,
            tc => \TimerUS:Net_51\ ,
            cmp => \TimerUS:Net_261\ ,
            irq => Net_430 );
        Properties:
        {
            cy_registers = ""
        }
USB group 0: empty
VIDAC group 0: empty
CsAbuf group 0: empty
Vref group 0: 
    Vref Block @ F(Vref,13): 
    vrefcell: Name =\ADC_IR:SAR:vRef_Vdda_1\
        PORT MAP (
            vout => \ADC_IR:SAR:Net_235\ );
        Properties:
        {
            autoenable = 1
            guid = "4720866E-BC14-478d-B8A0-3E44F38CADAC"
            ignoresleep = 0
            name = "Vdda/2"
        }
LPF group 0: empty
SAR group 0: 
    SAR Block @ F(SAR,0): 
    sarcell: Name =\ADC_IR:SAR:ADC_SAR\
        PORT MAP (
            vplus => \ADC_IR:Net_2803\ ,
            vminus => \ADC_IR:SAR:Net_126\ ,
            ext_pin => \ADC_IR:SAR:Net_209\ ,
            vrefhi_out => \ADC_IR:SAR:Net_126\ ,
            vref => \ADC_IR:SAR:Net_235\ ,
            clk_udb => \ADC_IR:clock_local\ ,
            irq => \ADC_IR:SAR:Net_252\ ,
            next => Net_12 ,
            data_out_udb_11 => \ADC_IR:SAR:Net_207_11\ ,
            data_out_udb_10 => \ADC_IR:SAR:Net_207_10\ ,
            data_out_udb_9 => \ADC_IR:SAR:Net_207_9\ ,
            data_out_udb_8 => \ADC_IR:SAR:Net_207_8\ ,
            data_out_udb_7 => \ADC_IR:SAR:Net_207_7\ ,
            data_out_udb_6 => \ADC_IR:SAR:Net_207_6\ ,
            data_out_udb_5 => \ADC_IR:SAR:Net_207_5\ ,
            data_out_udb_4 => \ADC_IR:SAR:Net_207_4\ ,
            data_out_udb_3 => \ADC_IR:SAR:Net_207_3\ ,
            data_out_udb_2 => \ADC_IR:SAR:Net_207_2\ ,
            data_out_udb_1 => \ADC_IR:SAR:Net_207_1\ ,
            data_out_udb_0 => \ADC_IR:SAR:Net_207_0\ ,
            eof_udb => \ADC_IR:Net_3830\ );
        Properties:
        {
            cy_registers = ""
        }
ANAIF group 0: empty
PHUB group 0: empty

Blocks not positioned by the digital component placer:
    Amux Block @ <No Location>: 
    amuxcell: Name =\ADC_IR:AMuxHw_2\
        PORT MAP (
            muxin_63 => Net_108 ,
            muxin_62 => Net_107 ,
            muxin_61 => Net_106 ,
            muxin_60 => Net_105 ,
            muxin_59 => Net_104 ,
            muxin_58 => Net_103 ,
            muxin_57 => Net_102 ,
            muxin_56 => Net_101 ,
            muxin_55 => Net_100 ,
            muxin_54 => Net_99 ,
            muxin_53 => Net_98 ,
            muxin_52 => Net_97 ,
            muxin_51 => Net_96 ,
            muxin_50 => Net_95 ,
            muxin_49 => Net_94 ,
            muxin_48 => Net_93 ,
            muxin_47 => Net_92 ,
            muxin_46 => Net_90 ,
            muxin_45 => Net_88 ,
            muxin_44 => Net_87 ,
            muxin_43 => Net_85 ,
            muxin_42 => Net_83 ,
            muxin_41 => Net_82 ,
            muxin_40 => Net_80 ,
            muxin_39 => Net_78 ,
            muxin_38 => Net_77 ,
            muxin_37 => Net_75 ,
            muxin_36 => Net_73 ,
            muxin_35 => Net_72 ,
            muxin_34 => Net_70 ,
            muxin_33 => Net_68 ,
            muxin_32 => Net_67 ,
            muxin_31 => Net_65 ,
            muxin_30 => Net_63 ,
            muxin_29 => Net_62 ,
            muxin_28 => Net_60 ,
            muxin_27 => Net_58 ,
            muxin_26 => Net_57 ,
            muxin_25 => Net_55 ,
            muxin_24 => Net_53 ,
            muxin_23 => Net_52 ,
            muxin_22 => Net_50 ,
            muxin_21 => Net_48 ,
            muxin_20 => Net_47 ,
            muxin_19 => Net_45 ,
            muxin_18 => Net_43 ,
            muxin_17 => Net_42 ,
            muxin_16 => Net_40 ,
            muxin_15 => Net_38 ,
            muxin_14 => Net_37 ,
            muxin_13 => Net_35 ,
            muxin_12 => Net_33 ,
            muxin_11 => Net_32 ,
            muxin_10 => Net_30 ,
            muxin_9 => Net_28 ,
            muxin_8 => Net_27 ,
            muxin_7 => Net_25 ,
            muxin_6 => Net_23 ,
            muxin_5 => Net_22 ,
            muxin_4 => Net_20 ,
            muxin_3 => Net_18 ,
            muxin_2 => Net_17 ,
            muxin_1 => Net_15 ,
            muxin_0 => Net_14 ,
            hw_ctrl_en_63 => \ADC_IR:AMuxHw_2_Decoder_one_hot_63\ ,
            hw_ctrl_en_62 => \ADC_IR:AMuxHw_2_Decoder_one_hot_62\ ,
            hw_ctrl_en_61 => \ADC_IR:AMuxHw_2_Decoder_one_hot_61\ ,
            hw_ctrl_en_60 => \ADC_IR:AMuxHw_2_Decoder_one_hot_60\ ,
            hw_ctrl_en_59 => \ADC_IR:AMuxHw_2_Decoder_one_hot_59\ ,
            hw_ctrl_en_58 => \ADC_IR:AMuxHw_2_Decoder_one_hot_58\ ,
            hw_ctrl_en_57 => \ADC_IR:AMuxHw_2_Decoder_one_hot_57\ ,
            hw_ctrl_en_56 => \ADC_IR:AMuxHw_2_Decoder_one_hot_56\ ,
            hw_ctrl_en_55 => \ADC_IR:AMuxHw_2_Decoder_one_hot_55\ ,
            hw_ctrl_en_54 => \ADC_IR:AMuxHw_2_Decoder_one_hot_54\ ,
            hw_ctrl_en_53 => \ADC_IR:AMuxHw_2_Decoder_one_hot_53\ ,
            hw_ctrl_en_52 => \ADC_IR:AMuxHw_2_Decoder_one_hot_52\ ,
            hw_ctrl_en_51 => \ADC_IR:AMuxHw_2_Decoder_one_hot_51\ ,
            hw_ctrl_en_50 => \ADC_IR:AMuxHw_2_Decoder_one_hot_50\ ,
            hw_ctrl_en_49 => \ADC_IR:AMuxHw_2_Decoder_one_hot_49\ ,
            hw_ctrl_en_48 => \ADC_IR:AMuxHw_2_Decoder_one_hot_48\ ,
            hw_ctrl_en_47 => \ADC_IR:AMuxHw_2_Decoder_one_hot_47\ ,
            hw_ctrl_en_46 => \ADC_IR:AMuxHw_2_Decoder_one_hot_46\ ,
            hw_ctrl_en_45 => \ADC_IR:AMuxHw_2_Decoder_one_hot_45\ ,
            hw_ctrl_en_44 => \ADC_IR:AMuxHw_2_Decoder_one_hot_44\ ,
            hw_ctrl_en_43 => \ADC_IR:AMuxHw_2_Decoder_one_hot_43\ ,
            hw_ctrl_en_42 => \ADC_IR:AMuxHw_2_Decoder_one_hot_42\ ,
            hw_ctrl_en_41 => \ADC_IR:AMuxHw_2_Decoder_one_hot_41\ ,
            hw_ctrl_en_40 => \ADC_IR:AMuxHw_2_Decoder_one_hot_40\ ,
            hw_ctrl_en_39 => \ADC_IR:AMuxHw_2_Decoder_one_hot_39\ ,
            hw_ctrl_en_38 => \ADC_IR:AMuxHw_2_Decoder_one_hot_38\ ,
            hw_ctrl_en_37 => \ADC_IR:AMuxHw_2_Decoder_one_hot_37\ ,
            hw_ctrl_en_36 => \ADC_IR:AMuxHw_2_Decoder_one_hot_36\ ,
            hw_ctrl_en_35 => \ADC_IR:AMuxHw_2_Decoder_one_hot_35\ ,
            hw_ctrl_en_34 => \ADC_IR:AMuxHw_2_Decoder_one_hot_34\ ,
            hw_ctrl_en_33 => \ADC_IR:AMuxHw_2_Decoder_one_hot_33\ ,
            hw_ctrl_en_32 => \ADC_IR:AMuxHw_2_Decoder_one_hot_32\ ,
            hw_ctrl_en_31 => \ADC_IR:AMuxHw_2_Decoder_one_hot_31\ ,
            hw_ctrl_en_30 => \ADC_IR:AMuxHw_2_Decoder_one_hot_30\ ,
            hw_ctrl_en_29 => \ADC_IR:AMuxHw_2_Decoder_one_hot_29\ ,
            hw_ctrl_en_28 => \ADC_IR:AMuxHw_2_Decoder_one_hot_28\ ,
            hw_ctrl_en_27 => \ADC_IR:AMuxHw_2_Decoder_one_hot_27\ ,
            hw_ctrl_en_26 => \ADC_IR:AMuxHw_2_Decoder_one_hot_26\ ,
            hw_ctrl_en_25 => \ADC_IR:AMuxHw_2_Decoder_one_hot_25\ ,
            hw_ctrl_en_24 => \ADC_IR:AMuxHw_2_Decoder_one_hot_24\ ,
            hw_ctrl_en_23 => \ADC_IR:AMuxHw_2_Decoder_one_hot_23\ ,
            hw_ctrl_en_22 => \ADC_IR:AMuxHw_2_Decoder_one_hot_22\ ,
            hw_ctrl_en_21 => \ADC_IR:AMuxHw_2_Decoder_one_hot_21\ ,
            hw_ctrl_en_20 => \ADC_IR:AMuxHw_2_Decoder_one_hot_20\ ,
            hw_ctrl_en_19 => \ADC_IR:AMuxHw_2_Decoder_one_hot_19\ ,
            hw_ctrl_en_18 => \ADC_IR:AMuxHw_2_Decoder_one_hot_18\ ,
            hw_ctrl_en_17 => \ADC_IR:AMuxHw_2_Decoder_one_hot_17\ ,
            hw_ctrl_en_16 => \ADC_IR:AMuxHw_2_Decoder_one_hot_16\ ,
            hw_ctrl_en_15 => \ADC_IR:AMuxHw_2_Decoder_one_hot_15\ ,
            hw_ctrl_en_14 => \ADC_IR:AMuxHw_2_Decoder_one_hot_14\ ,
            hw_ctrl_en_13 => \ADC_IR:AMuxHw_2_Decoder_one_hot_13\ ,
            hw_ctrl_en_12 => \ADC_IR:AMuxHw_2_Decoder_one_hot_12\ ,
            hw_ctrl_en_11 => \ADC_IR:AMuxHw_2_Decoder_one_hot_11\ ,
            hw_ctrl_en_10 => \ADC_IR:AMuxHw_2_Decoder_one_hot_10\ ,
            hw_ctrl_en_9 => \ADC_IR:AMuxHw_2_Decoder_one_hot_9\ ,
            hw_ctrl_en_8 => \ADC_IR:AMuxHw_2_Decoder_one_hot_8\ ,
            vout => \ADC_IR:Net_2803\ );
        Properties:
        {
            api_type = 2
            connect_mode = 1
            cy_registers = ""
            hw_control = 1
            init_mux_sel = "0000000000000000000000000000000000000000000000000000000000000000"
            muxin_width = 64
            one_active = 1
        }
</CYPRESSTAG>
<CYPRESSTAG name="Port Configuration Details">

------------------------------------------------------------
Port Configuration report
------------------------------------------------------------
     |     |       | Interrupt |                  |                  | 
Port | Pin | Fixed |      Type |       Drive Mode |             Name | Connections
-----+-----+-------+-----------+------------------+------------------+--------------------------------------------------------
   0 |   0 |     * |      NONE |      HI_Z_ANALOG |           IR1(0) | In(\ADC_IR:AMuxHw_2_Decoder_one_hot_0\), Analog(Net_14)
     |   1 |     * |      NONE |      HI_Z_ANALOG |           IR2(0) | In(\ADC_IR:AMuxHw_2_Decoder_one_hot_1\), Analog(Net_15)
     |   2 |     * |      NONE |      HI_Z_ANALOG |           IR3(0) | In(\ADC_IR:AMuxHw_2_Decoder_one_hot_2\), Analog(Net_17)
     |   3 |     * |      NONE |      HI_Z_ANALOG |           IR4(0) | In(\ADC_IR:AMuxHw_2_Decoder_one_hot_3\), Analog(Net_18)
     |   4 |     * |      NONE |      HI_Z_ANALOG |           IR5(0) | In(\ADC_IR:AMuxHw_2_Decoder_one_hot_4\), Analog(Net_20)
     |   5 |     * |      NONE |      HI_Z_ANALOG |           IR6(0) | In(\ADC_IR:AMuxHw_2_Decoder_one_hot_5\), Analog(Net_22)
     |   6 |     * |      NONE |      HI_Z_ANALOG |           IR7(0) | In(\ADC_IR:AMuxHw_2_Decoder_one_hot_6\), Analog(Net_23)
     |   7 |     * |      NONE |      HI_Z_ANALOG |           IR8(0) | In(\ADC_IR:AMuxHw_2_Decoder_one_hot_7\), Analog(Net_25)
-----+-----+-------+-----------+------------------+------------------+--------------------------------------------------------
   1 |   0 |     * |      NONE |    RES_PULL_DOWN |         Echo3(0) | FB(Net_400)
     |   2 |       |      NONE |         CMOS_OUT |      Trigger3(0) | In(Net_417)
-----+-----+-------+-----------+------------------+------------------+--------------------------------------------------------
   2 |   0 |     * |      NONE |         CMOS_OUT | \LCD:LCDPort(0)\ | 
     |   1 |     * |      NONE |         CMOS_OUT | \LCD:LCDPort(1)\ | 
     |   2 |     * |      NONE |         CMOS_OUT | \LCD:LCDPort(2)\ | 
     |   3 |     * |      NONE |         CMOS_OUT | \LCD:LCDPort(3)\ | 
     |   4 |     * |      NONE |         CMOS_OUT | \LCD:LCDPort(4)\ | 
     |   5 |     * |      NONE |         CMOS_OUT | \LCD:LCDPort(5)\ | 
     |   6 |     * |      NONE |         CMOS_OUT | \LCD:LCDPort(6)\ | 
-----+-----+-------+-----------+------------------+------------------+--------------------------------------------------------
   3 |   0 |     * |      NONE |         CMOS_OUT |          LED1(0) | 
     |   1 |     * |      NONE |         CMOS_OUT |          LED2(0) | 
     |   2 |     * |      NONE |         CMOS_OUT |          LED3(0) | 
     |   3 |     * |      NONE |         CMOS_OUT |          LED4(0) | 
     |   4 |     * |      NONE |         CMOS_OUT |          LED5(0) | 
     |   5 |     * |      NONE |      RES_PULL_UP |           SW1(0) | 
     |   6 |     * |      NONE |      RES_PULL_UP |           SW2(0) | 
     |   7 |     * |      NONE |         CMOS_OUT |         LedOn(0) | 
-----+-----+-------+-----------+------------------+------------------+--------------------------------------------------------
  12 |   1 |     * |      NONE |    RES_PULL_DOWN |         Echo2(0) | FB(Net_399)
     |   2 |     * |      NONE |         CMOS_OUT |      Trigger1(0) | In(Net_412)
     |   3 |     * |      NONE |    RES_PULL_DOWN |         Echo1(0) | FB(Net_398)
-----+-----+-------+-----------+------------------+------------------+--------------------------------------------------------
  15 |   4 |       |      NONE |         CMOS_OUT |      Trigger2(0) | In(Net_416)
------------------------------------------------------------------------------------------------------------------------------
</CYPRESSTAG>
</CYPRESSTAG>
</CYPRESSTAG>
Digital component placer commit/Report: Elapsed time ==> 0s.120ms
Digital Placement phase: Elapsed time ==> 3s.943ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Routing">
"C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\bin/sjrouter.exe" --xml-path "C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\dev\psoc5/psoc5lp/route_arch-rrg.cydata" --vh2-path "Roadster1.0_r.vh2" --pcf-path "Roadster1.0.pco" --des-name "Roadster1.0" --dsf-path "Roadster1.0.dsf" --sdc-path "Roadster1.0.sdc" --lib-path "Roadster1.0_r.lib"
Routing successful.
Digital Routing phase: Elapsed time ==> 3s.011ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Generation">
Bitstream Generation phase: Elapsed time ==> 0s.238ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Verification">
Bitstream Verification phase: Elapsed time ==> 0s.049ms
</CYPRESSTAG>
<CYPRESSTAG name="Static timing analysis">
Timing report is in Roadster1.0_timing.html.
Static timing analysis phase: Elapsed time ==> 0s.584ms
</CYPRESSTAG>
<CYPRESSTAG name="Data reporting">
Data reporting phase: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Database update...">
Design database save phase: Elapsed time ==> 0s.321ms
</CYPRESSTAG>
cydsfit: Elapsed time ==> 9s.158ms
</CYPRESSTAG>
Fitter phase: Elapsed time ==> 9s.158ms
API generation phase: Elapsed time ==> 2s.288ms
Dependency generation phase: Elapsed time ==> 0s.051ms
Cleanup phase: Elapsed time ==> 0s.003ms

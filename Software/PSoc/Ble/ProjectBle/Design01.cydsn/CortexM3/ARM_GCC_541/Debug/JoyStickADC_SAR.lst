ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"JoyStickADC_SAR.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.JoyStickADC_SAR_CalcGain,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	JoyStickADC_SAR_CalcGain, %function
  24              	JoyStickADC_SAR_CalcGain:
  25              	.LFB12:
  26              		.file 1 "Generated_Source\\PSoC5\\JoyStickADC_SAR.c"
   1:Generated_Source\PSoC5/JoyStickADC_SAR.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * File Name: JoyStickADC_SAR.c
   3:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Version 3.10
   4:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
   5:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Description:
   6:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  This file provides the source code to the API for the Successive
   7:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  approximation ADC Component.
   8:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
   9:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Note:
  10:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
  11:Generated_Source\PSoC5/JoyStickADC_SAR.c **** ********************************************************************************
  12:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
  18:Generated_Source\PSoC5/JoyStickADC_SAR.c **** #include "CyLib.h"
  19:Generated_Source\PSoC5/JoyStickADC_SAR.c **** #include "JoyStickADC_SAR.h"
  20:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
  21:Generated_Source\PSoC5/JoyStickADC_SAR.c **** #if(JoyStickADC_SAR_DEFAULT_INTERNAL_CLK)
  22:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #include "JoyStickADC_SAR_theACLK.h"
  23:Generated_Source\PSoC5/JoyStickADC_SAR.c **** #endif /* End JoyStickADC_SAR_DEFAULT_INTERNAL_CLK */
  24:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
  25:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
  26:Generated_Source\PSoC5/JoyStickADC_SAR.c **** /***************************************
  27:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Forward function references
  28:Generated_Source\PSoC5/JoyStickADC_SAR.c **** ***************************************/
  29:Generated_Source\PSoC5/JoyStickADC_SAR.c **** static void JoyStickADC_SAR_CalcGain(uint8 resolution);
  30:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
  31:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 2


  32:Generated_Source\PSoC5/JoyStickADC_SAR.c **** /***************************************
  33:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Global data allocation
  34:Generated_Source\PSoC5/JoyStickADC_SAR.c **** ***************************************/
  35:Generated_Source\PSoC5/JoyStickADC_SAR.c **** uint8 JoyStickADC_SAR_initVar = 0u;
  36:Generated_Source\PSoC5/JoyStickADC_SAR.c **** volatile int16 JoyStickADC_SAR_offset;
  37:Generated_Source\PSoC5/JoyStickADC_SAR.c **** volatile int16 JoyStickADC_SAR_countsPerVolt;     /* Obsolete Gain compensation */
  38:Generated_Source\PSoC5/JoyStickADC_SAR.c **** volatile int32 JoyStickADC_SAR_countsPer10Volt;   /* Gain compensation */
  39:Generated_Source\PSoC5/JoyStickADC_SAR.c **** volatile int16 JoyStickADC_SAR_shift;
  40:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
  41:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
  42:Generated_Source\PSoC5/JoyStickADC_SAR.c **** /*******************************************************************************
  43:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Function Name: JoyStickADC_SAR_Start
  44:Generated_Source\PSoC5/JoyStickADC_SAR.c **** ********************************************************************************
  45:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
  46:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Summary:
  47:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  This is the preferred method to begin component operation.
  48:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  JoyStickADC_SAR_Start() sets the initVar variable, calls the
  49:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  JoyStickADC_SAR_Init() function, and then calls the
  50:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  JoyStickADC_SAR_Enable() function.
  51:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
  52:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Parameters:
  53:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  None.
  54:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
  55:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Return:
  56:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  None.
  57:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
  58:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Global variables:
  59:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  The JoyStickADC_SAR_initVar variable is used to indicate when/if initial
  60:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  configuration of this component has happened. The variable is initialized to
  61:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  62:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  63:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  JoyStickADC_SAR_Start() routine.
  64:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  If re-initialization of the component is required the variable should be set
  65:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  to zero before call of JoyStickADC_SAR_Start() routine, or the user may call
  66:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  JoyStickADC_SAR_Init() and JoyStickADC_SAR_Enable() as done in the
  67:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  JoyStickADC_SAR_Start() routine.
  68:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
  69:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Side Effect:
  70:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  If the initVar variable is already set, this function only calls the
  71:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  JoyStickADC_SAR_Enable() function.
  72:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
  73:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *******************************************************************************/
  74:Generated_Source\PSoC5/JoyStickADC_SAR.c **** void JoyStickADC_SAR_Start(void)
  75:Generated_Source\PSoC5/JoyStickADC_SAR.c **** {
  76:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
  77:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* If not Initialized then initialize all required hardware and software */
  78:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     if(JoyStickADC_SAR_initVar == 0u)
  79:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     {
  80:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         JoyStickADC_SAR_Init();
  81:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         JoyStickADC_SAR_initVar = 1u;
  82:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     }
  83:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     JoyStickADC_SAR_Enable();
  84:Generated_Source\PSoC5/JoyStickADC_SAR.c **** }
  85:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
  86:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
  87:Generated_Source\PSoC5/JoyStickADC_SAR.c **** /*******************************************************************************
  88:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Function Name: JoyStickADC_SAR_Init
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 3


  89:Generated_Source\PSoC5/JoyStickADC_SAR.c **** ********************************************************************************
  90:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
  91:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Summary:
  92:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  Initialize component's parameters to the parameters set by user in the
  93:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  customizer of the component placed onto schematic. Usually called in
  94:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  JoyStickADC_SAR_Start().
  95:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
  96:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Parameters:
  97:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  None.
  98:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
  99:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Return:
 100:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  None.
 101:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 102:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Global variables:
 103:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  The JoyStickADC_SAR_offset variable is initialized to 0.
 104:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 105:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/JoyStickADC_SAR.c **** void JoyStickADC_SAR_Init(void)
 107:Generated_Source\PSoC5/JoyStickADC_SAR.c **** {
 108:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 109:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* This is only valid if there is an internal clock */
 110:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #if(JoyStickADC_SAR_DEFAULT_INTERNAL_CLK)
 111:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         JoyStickADC_SAR_theACLK_SetMode(CYCLK_DUTY);
 112:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #endif /* End JoyStickADC_SAR_DEFAULT_INTERNAL_CLK */
 113:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 114:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #if(JoyStickADC_SAR_IRQ_REMOVE == 0u)
 115:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         /* Start and set interrupt vector */
 116:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         CyIntSetPriority(JoyStickADC_SAR_INTC_NUMBER, JoyStickADC_SAR_INTC_PRIOR_NUMBER);
 117:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         (void)CyIntSetVector(JoyStickADC_SAR_INTC_NUMBER, &JoyStickADC_SAR_ISR);
 118:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #endif   /* End JoyStickADC_SAR_IRQ_REMOVE */
 119:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 120:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* Enable IRQ mode*/
 121:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     JoyStickADC_SAR_SAR_CSR1_REG |= JoyStickADC_SAR_SAR_IRQ_MASK_EN | JoyStickADC_SAR_SAR_IRQ_MODE_
 122:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 123:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /*Set SAR ADC resolution ADC */
 124:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     JoyStickADC_SAR_SetResolution(JoyStickADC_SAR_DEFAULT_RESOLUTION);
 125:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     JoyStickADC_SAR_offset = 0;
 126:Generated_Source\PSoC5/JoyStickADC_SAR.c **** }
 127:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 128:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 129:Generated_Source\PSoC5/JoyStickADC_SAR.c **** /*******************************************************************************
 130:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Function Name: JoyStickADC_SAR_Enable
 131:Generated_Source\PSoC5/JoyStickADC_SAR.c **** ********************************************************************************
 132:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 133:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Summary:
 134:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  Enables the reference, clock and power for SAR ADC.
 135:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 136:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Parameters:
 137:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  None.
 138:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 139:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Return:
 140:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  None.
 141:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 142:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *******************************************************************************/
 143:Generated_Source\PSoC5/JoyStickADC_SAR.c **** void JoyStickADC_SAR_Enable(void)
 144:Generated_Source\PSoC5/JoyStickADC_SAR.c **** {
 145:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     uint8 tmpReg;
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 4


 146:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     uint8 enableInterrupts;
 147:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     enableInterrupts = CyEnterCriticalSection();
 148:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 149:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* Enable the SAR ADC block in Active Power Mode */
 150:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     JoyStickADC_SAR_PWRMGR_SAR_REG |= JoyStickADC_SAR_ACT_PWR_SAR_EN;
 151:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 152:Generated_Source\PSoC5/JoyStickADC_SAR.c ****      /* Enable the SAR ADC in Standby Power Mode*/
 153:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     JoyStickADC_SAR_STBY_PWRMGR_SAR_REG |= JoyStickADC_SAR_STBY_PWR_SAR_EN;
 154:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 155:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* This is only valid if there is an internal clock */
 156:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #if(JoyStickADC_SAR_DEFAULT_INTERNAL_CLK)
 157:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         JoyStickADC_SAR_PWRMGR_CLK_REG |= JoyStickADC_SAR_ACT_PWR_CLK_EN;
 158:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         JoyStickADC_SAR_STBY_PWRMGR_CLK_REG |= JoyStickADC_SAR_STBY_PWR_CLK_EN;
 159:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #endif /* End JoyStickADC_SAR_DEFAULT_INTERNAL_CLK */
 160:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 161:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* Enable VCM buffer and Enable Int Ref Amp */
 162:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     tmpReg = JoyStickADC_SAR_SAR_CSR3_REG;
 163:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     tmpReg |= JoyStickADC_SAR_SAR_EN_BUF_VCM_EN;
 164:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* PD_BUF_VREF is OFF in External reference or Vdda reference mode */
 165:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #if((JoyStickADC_SAR_DEFAULT_REFERENCE == JoyStickADC_SAR__EXT_REF) || \
 166:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         (JoyStickADC_SAR_DEFAULT_RANGE == JoyStickADC_SAR__VNEG_VDDA_DIFF))
 167:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         tmpReg &= (uint8)~JoyStickADC_SAR_SAR_EN_BUF_VREF_EN;
 168:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #else /* In INTREF or INTREF Bypassed this buffer is ON */
 169:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         tmpReg |= JoyStickADC_SAR_SAR_EN_BUF_VREF_EN;
 170:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #endif /* JoyStickADC_SAR_DEFAULT_REFERENCE == JoyStickADC_SAR__EXT_REF */
 171:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     JoyStickADC_SAR_SAR_CSR3_REG = tmpReg;
 172:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 173:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* Set reference for ADC */
 174:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #if(JoyStickADC_SAR_DEFAULT_RANGE == JoyStickADC_SAR__VNEG_VDDA_DIFF)
 175:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         #if(JoyStickADC_SAR_DEFAULT_REFERENCE == JoyStickADC_SAR__EXT_REF)
 176:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             JoyStickADC_SAR_SAR_CSR6_REG = JoyStickADC_SAR_INT_BYPASS_EXT_VREF; /* S2 */
 177:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         #else /* Internal Vdda reference or obsolete bypass mode */
 178:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             JoyStickADC_SAR_SAR_CSR6_REG = JoyStickADC_SAR_VDDA_VREF;           /* S7 */
 179:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         #endif /* JoyStickADC_SAR_DEFAULT_REFERENCE == JoyStickADC_SAR__EXT_REF */
 180:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #else  /* Reference goes through internal buffer */
 181:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         #if(JoyStickADC_SAR_DEFAULT_REFERENCE == JoyStickADC_SAR__INT_REF_NOT_BYPASSED)
 182:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             JoyStickADC_SAR_SAR_CSR6_REG = JoyStickADC_SAR_INT_VREF;            /* S3 + S4 */
 183:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         #else /* INTREF Bypassed of External */
 184:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             JoyStickADC_SAR_SAR_CSR6_REG = JoyStickADC_SAR_INT_BYPASS_EXT_VREF; /* S2 */
 185:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         #endif /* JoyStickADC_SAR_DEFAULT_REFERENCE == JoyStickADC_SAR__INT_REF_NOT_BYPASSED */
 186:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #endif /* VNEG_VDDA_DIFF */
 187:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 188:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* Low non-overlap delay for sampling clock signals (for 1MSPS) */
 189:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #if(JoyStickADC_SAR_HIGH_POWER_PULSE == 0u) /* MinPulseWidth <= 50 ns */
 190:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         JoyStickADC_SAR_SAR_CSR5_REG &= (uint8)~JoyStickADC_SAR_SAR_DLY_INC;
 191:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
 192:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         JoyStickADC_SAR_SAR_CSR5_REG |= JoyStickADC_SAR_SAR_DLY_INC;
 193:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #endif /* JoyStickADC_SAR_HIGH_POWER_PULSE == 0u */
 194:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 195:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* Increase comparator latch enable delay by 20%, 
 196:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *  Increase comparator bias current by 30% without impacting delaysDelay 
 197:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *  Default for 1MSPS) 
 198:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     */
 199:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #if(JoyStickADC_SAR_HIGH_POWER_PULSE == 0u)    /* MinPulseWidth <= 50 ns */
 200:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         JoyStickADC_SAR_SAR_CSR5_REG |= JoyStickADC_SAR_SAR_SEL_CSEL_DFT_CHAR;
 201:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #else /* for <500ksps */
 202:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         JoyStickADC_SAR_SAR_CSR5_REG &= (uint8)~JoyStickADC_SAR_SAR_SEL_CSEL_DFT_CHAR;
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 5


 203:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #endif /* JoyStickADC_SAR_HIGH_POWER_PULSE == 0u */
 204:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 205:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* Set default power and other configurations for control register 0 in multiple lines */
 206:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     JoyStickADC_SAR_SAR_CSR0_REG = (uint8)((uint8)JoyStickADC_SAR_DEFAULT_POWER << JoyStickADC_SAR_
 207:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 208:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #if ((CY_PSOC5LP) || (JoyStickADC_SAR_DEFAULT_REFERENCE != JoyStickADC_SAR__EXT_REF))
 209:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         | JoyStickADC_SAR_SAR_HIZ_CLEAR
 210:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #endif /* SAR_HIZ_CLEAR */
 211:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /*Set Convertion mode */
 212:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #if(JoyStickADC_SAR_DEFAULT_CONV_MODE != JoyStickADC_SAR__FREE_RUNNING)      /* If triggered mo
 213:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         | JoyStickADC_SAR_SAR_MX_SOF_UDB           /* source: UDB */
 214:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         | JoyStickADC_SAR_SAR_SOF_MODE_EDGE        /* Set edge-sensitive sof source */
 215:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #endif /* JoyStickADC_SAR_DEFAULT_CONV_MODE */
 216:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     ; /* end of multiple line initialization */
 217:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 218:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     JoyStickADC_SAR_SAR_TR0_REG = JoyStickADC_SAR_SAR_CAP_TRIM_2;
 219:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 220:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* Enable clock for SAR ADC*/
 221:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     JoyStickADC_SAR_SAR_CLK_REG |= JoyStickADC_SAR_SAR_MX_CLK_EN;
 222:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 223:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
 224:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 225:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #if(JoyStickADC_SAR_IRQ_REMOVE == 0u)
 226:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         /* Clear a pending interrupt */
 227:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         CyIntClearPending(JoyStickADC_SAR_INTC_NUMBER);
 228:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #endif   /* End JoyStickADC_SAR_IRQ_REMOVE */
 229:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 230:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     CyExitCriticalSection(enableInterrupts);
 231:Generated_Source\PSoC5/JoyStickADC_SAR.c **** }
 232:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 233:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 234:Generated_Source\PSoC5/JoyStickADC_SAR.c **** /*******************************************************************************
 235:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Function Name: JoyStickADC_SAR_Stop
 236:Generated_Source\PSoC5/JoyStickADC_SAR.c **** ********************************************************************************
 237:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 238:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Summary:
 239:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  Stops ADC conversions and puts the ADC into its lowest power mode.
 240:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 241:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Parameters:
 242:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  None.
 243:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 244:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Return:
 245:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  None.
 246:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 247:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *******************************************************************************/
 248:Generated_Source\PSoC5/JoyStickADC_SAR.c **** void JoyStickADC_SAR_Stop(void)
 249:Generated_Source\PSoC5/JoyStickADC_SAR.c **** {
 250:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     uint8 enableInterrupts;
 251:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     enableInterrupts = CyEnterCriticalSection();
 252:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 253:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* Stop all conversions */
 254:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     JoyStickADC_SAR_SAR_CSR0_REG &= (uint8)~JoyStickADC_SAR_SAR_SOF_START_CONV;
 255:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* Disable the SAR ADC block in Active Power Mode */
 256:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     JoyStickADC_SAR_PWRMGR_SAR_REG &= (uint8)~JoyStickADC_SAR_ACT_PWR_SAR_EN;
 257:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* Disable the SAR ADC in Standby Power Mode */
 258:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     JoyStickADC_SAR_STBY_PWRMGR_SAR_REG &= (uint8)~JoyStickADC_SAR_STBY_PWR_SAR_EN;
 259:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 6


 260:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* This is only valid if there is an internal clock */
 261:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #if(JoyStickADC_SAR_DEFAULT_INTERNAL_CLK)
 262:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         JoyStickADC_SAR_PWRMGR_CLK_REG &= (uint8)~JoyStickADC_SAR_ACT_PWR_CLK_EN;
 263:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         JoyStickADC_SAR_STBY_PWRMGR_CLK_REG &= (uint8)~JoyStickADC_SAR_STBY_PWR_CLK_EN;
 264:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #endif /* End JoyStickADC_SAR_DEFAULT_INTERNAL_CLK */
 265:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 266:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     CyExitCriticalSection(enableInterrupts);
 267:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 268:Generated_Source\PSoC5/JoyStickADC_SAR.c **** }
 269:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 270:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 271:Generated_Source\PSoC5/JoyStickADC_SAR.c **** /*******************************************************************************
 272:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Function Name: JoyStickADC_SAR_SetPower
 273:Generated_Source\PSoC5/JoyStickADC_SAR.c **** ********************************************************************************
 274:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 275:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Summary:
 276:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  Sets the operational power of the ADC. You should use the higher power
 277:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  settings with faster clock speeds.
 278:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 279:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Parameters:
 280:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  power:  Power setting for ADC
 281:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  0 ->    Normal
 282:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  1 ->    Medium power
 283:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  2 ->    1.25 power
 284:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  3 ->    Minimum power.
 285:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 286:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Return:
 287:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  None.
 288:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 289:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *******************************************************************************/
 290:Generated_Source\PSoC5/JoyStickADC_SAR.c **** void JoyStickADC_SAR_SetPower(uint8 power)
 291:Generated_Source\PSoC5/JoyStickADC_SAR.c **** {
 292:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     uint8 tmpReg;
 293:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 294:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* mask off invalid power settings */
 295:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     power &= JoyStickADC_SAR_SAR_API_POWER_MASK;
 296:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 297:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* Set Power parameter  */
 298:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     tmpReg = JoyStickADC_SAR_SAR_CSR0_REG & (uint8)~JoyStickADC_SAR_SAR_POWER_MASK;
 299:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     tmpReg |= (uint8)(power << JoyStickADC_SAR_SAR_POWER_SHIFT);
 300:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     JoyStickADC_SAR_SAR_CSR0_REG = tmpReg;
 301:Generated_Source\PSoC5/JoyStickADC_SAR.c **** }
 302:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 303:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 304:Generated_Source\PSoC5/JoyStickADC_SAR.c **** /*******************************************************************************
 305:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Function Name: JoyStickADC_SAR_SetResolution
 306:Generated_Source\PSoC5/JoyStickADC_SAR.c **** ********************************************************************************
 307:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 308:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Summary:
 309:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  Sets the Relution of the SAR.
 310:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 311:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Parameters:
 312:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  resolution:
 313:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  12 ->    RES12
 314:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  10 ->    RES10
 315:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  8  ->    RES8
 316:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 7


 317:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Return:
 318:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  None.
 319:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 320:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Side Effects:
 321:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  The ADC resolution cannot be changed during a conversion cycle. The
 322:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  recommended best practice is to stop conversions with
 323:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  ADC_StopConvert(), change the resolution, then restart the
 324:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  conversions with ADC_StartConvert().
 325:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  If you decide not to stop conversions before calling this API, you
 326:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  should use ADC_IsEndConversion() to wait until conversion is complete
 327:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  before changing the resolution.
 328:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  If you call ADC_SetResolution() during a conversion, the resolution will
 329:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  not be changed until the current conversion is complete. Data will not be
 330:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  available in the new resolution for another 6 + "New Resolution(in bits)"
 331:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  clock cycles.
 332:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  You may need add a delay of this number of clock cycles after
 333:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  ADC_SetResolution() is called before data is valid again.
 334:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  Affects ADC_CountsTo_Volts(), ADC_CountsTo_mVolts(), and
 335:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  ADC_CountsTo_uVolts() by calculating the correct conversion between ADC
 336:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  counts and the applied input voltage. Calculation depends on resolution,
 337:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  input range, and voltage reference.
 338:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 339:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *******************************************************************************/
 340:Generated_Source\PSoC5/JoyStickADC_SAR.c **** void JoyStickADC_SAR_SetResolution(uint8 resolution)
 341:Generated_Source\PSoC5/JoyStickADC_SAR.c **** {
 342:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     uint8 tmpReg;
 343:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 344:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* Set SAR ADC resolution and sample width: 18 conversion cycles at 12bits + 1 gap */
 345:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     switch (resolution)
 346:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     {
 347:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         case (uint8)JoyStickADC_SAR__BITS_12:
 348:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             tmpReg = JoyStickADC_SAR_SAR_RESOLUTION_12BIT | JoyStickADC_SAR_SAR_SAMPLE_WIDTH;
 349:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             break;
 350:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         case (uint8)JoyStickADC_SAR__BITS_10:
 351:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             tmpReg = JoyStickADC_SAR_SAR_RESOLUTION_10BIT | JoyStickADC_SAR_SAR_SAMPLE_WIDTH;
 352:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             break;
 353:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         case (uint8)JoyStickADC_SAR__BITS_8:
 354:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             tmpReg = JoyStickADC_SAR_SAR_RESOLUTION_8BIT | JoyStickADC_SAR_SAR_SAMPLE_WIDTH;
 355:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             break;
 356:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         default:
 357:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             tmpReg = JoyStickADC_SAR_SAR_RESOLUTION_12BIT | JoyStickADC_SAR_SAR_SAMPLE_WIDTH;
 358:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 359:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             CYASSERT(0u != 0u);
 360:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             break;
 361:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     }
 362:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     JoyStickADC_SAR_SAR_CSR2_REG = tmpReg;
 363:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 364:Generated_Source\PSoC5/JoyStickADC_SAR.c ****      /* Calculate gain for convert counts to volts */
 365:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     JoyStickADC_SAR_CalcGain(resolution);
 366:Generated_Source\PSoC5/JoyStickADC_SAR.c **** }
 367:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 368:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 369:Generated_Source\PSoC5/JoyStickADC_SAR.c **** #if(JoyStickADC_SAR_DEFAULT_CONV_MODE != JoyStickADC_SAR__HARDWARE_TRIGGER)
 370:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 371:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 372:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /*******************************************************************************
 373:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     * Function Name: JoyStickADC_SAR_StartConvert
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 8


 374:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     ********************************************************************************
 375:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *
 376:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     * Summary:
 377:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *  Forces the ADC to initiate a conversion. In free-running mode, the ADC runs
 378:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *  continuously. In software trigger mode, the function also acts as a software
 379:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *  version of the SOC and every conversion must be triggered by
 380:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *  JoyStickADC_SAR_StartConvert(). This function is not available when the
 381:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *  Hardware Trigger sample mode is selected.
 382:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *
 383:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     * Parameters:
 384:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *  None.
 385:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *
 386:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     * Return:
 387:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *  None.
 388:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *
 389:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     * Theory:
 390:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *  Forces the ADC to initiate a conversion. In Free Running mode, the ADC will
 391:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *  run continuously. In a software trigger mode the function also acts as a
 392:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *  software version of the SOC. Here every conversion has to be triggered by
 393:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *  the routine. This writes into the SOC bit in SAR_CTRL reg.
 394:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *
 395:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     * Side Effects:
 396:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *  In a software trigger mode the function switches source for SOF from the
 397:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *  external pin to the internal SOF generation. Application should not call
 398:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *  StartConvert if external source used for SOF.
 399:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *
 400:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *******************************************************************************/
 401:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     void JoyStickADC_SAR_StartConvert(void)
 402:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     {
 403:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         #if(JoyStickADC_SAR_DEFAULT_CONV_MODE != JoyStickADC_SAR__FREE_RUNNING)  /* If software tri
 404:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             JoyStickADC_SAR_SAR_CSR0_REG &= (uint8)~JoyStickADC_SAR_SAR_MX_SOF_UDB;   /* source: SO
 405:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         #endif /* End JoyStickADC_SAR_DEFAULT_CONV_MODE */
 406:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 407:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         /* Start the conversion */
 408:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         JoyStickADC_SAR_SAR_CSR0_REG |= JoyStickADC_SAR_SAR_SOF_START_CONV;
 409:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     }
 410:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 411:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 412:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /*******************************************************************************
 413:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     * Function Name: JoyStickADC_SAR_StopConvert
 414:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     ********************************************************************************
 415:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *
 416:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     * Summary:
 417:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *  Forces the ADC to stop conversions. If a conversion is currently executing,
 418:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *  that conversion will complete, but no further conversions will occur. This
 419:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *  function is not available when the Hardware Trigger sample mode is selected.
 420:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *
 421:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     * Parameters:
 422:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *  None.
 423:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *
 424:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     * Return:
 425:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *  None.
 426:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *
 427:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     * Theory:
 428:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *  Stops ADC conversion in Free Running mode.
 429:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *
 430:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     * Side Effects:
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 9


 431:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *  In Software Trigger sample mode, this function sets a software version of the
 432:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *  SOC to low level and switches the SOC source to hardware SOC input.
 433:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *
 434:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *******************************************************************************/
 435:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     void JoyStickADC_SAR_StopConvert(void)
 436:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     {
 437:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         /* Stop all conversions */
 438:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         JoyStickADC_SAR_SAR_CSR0_REG &= (uint8)~JoyStickADC_SAR_SAR_SOF_START_CONV;
 439:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 440:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         #if(JoyStickADC_SAR_DEFAULT_CONV_MODE != JoyStickADC_SAR__FREE_RUNNING)  /* If software tri
 441:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             /* Return source to UDB for hardware SOF signal */
 442:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             JoyStickADC_SAR_SAR_CSR0_REG |= JoyStickADC_SAR_SAR_MX_SOF_UDB;    /* source: UDB */
 443:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         #endif /* End JoyStickADC_SAR_DEFAULT_CONV_MODE */
 444:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 445:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     }
 446:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 447:Generated_Source\PSoC5/JoyStickADC_SAR.c **** #endif /* End JoyStickADC_SAR_DEFAULT_CONV_MODE != JoyStickADC_SAR__HARDWARE_TRIGGER */
 448:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 449:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 450:Generated_Source\PSoC5/JoyStickADC_SAR.c **** /*******************************************************************************
 451:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Function Name: JoyStickADC_SAR_IsEndConversion
 452:Generated_Source\PSoC5/JoyStickADC_SAR.c **** ********************************************************************************
 453:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 454:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Summary:
 455:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  Immediately returns the status of the conversion or does not return
 456:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  (blocking) until the conversion completes, depending on the retMode
 457:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  parameter.
 458:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 459:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Parameters:
 460:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  retMode:  Check conversion return mode.
 461:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *   JoyStickADC_SAR_RETURN_STATUS: Immediately returns the status. If the
 462:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *     value returned is zero, the conversion is not complete, and this function
 463:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *     should be retried until a nonzero result is returned.
 464:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *   JoyStickADC_SAR_WAIT_FOR_RESULT: Does not return a result until the ADC
 465:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *     conversion is complete.
 466:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 467:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Return:
 468:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  (uint8)  0 =>  The ADC is still calculating the last result.
 469:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *           1 =>  The last conversion is complete.
 470:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 471:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Side Effects:
 472:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  This function reads the end of conversion status, which is cleared on read.
 473:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 474:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *******************************************************************************/
 475:Generated_Source\PSoC5/JoyStickADC_SAR.c **** uint8 JoyStickADC_SAR_IsEndConversion(uint8 retMode)
 476:Generated_Source\PSoC5/JoyStickADC_SAR.c **** {
 477:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     uint8 status;
 478:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 479:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     do
 480:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     {
 481:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         status = JoyStickADC_SAR_SAR_CSR1_REG & JoyStickADC_SAR_SAR_EOF_1;
 482:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     } while ((status != JoyStickADC_SAR_SAR_EOF_1) && (retMode == JoyStickADC_SAR_WAIT_FOR_RESULT))
 483:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* If convertion complete, wait until EOF bit released */
 484:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     if(status == JoyStickADC_SAR_SAR_EOF_1)
 485:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     {
 486:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         /* wait one ADC clock to let the EOC status bit release */
 487:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         CyDelayUs(1u);
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 10


 488:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 489:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         CY_GET_REG8(JoyStickADC_SAR_SAR_CSR1_PTR);
 490:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     }
 491:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 492:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     return(status);
 493:Generated_Source\PSoC5/JoyStickADC_SAR.c **** }
 494:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 495:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 496:Generated_Source\PSoC5/JoyStickADC_SAR.c **** /*******************************************************************************
 497:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Function Name: JoyStickADC_SAR_GetResult8
 498:Generated_Source\PSoC5/JoyStickADC_SAR.c **** ********************************************************************************
 499:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 500:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Summary:
 501:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  Returns the result of an 8-bit conversion. If the resolution is set greater
 502:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  than 8 bits, the function returns the LSB of the result.
 503:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  JoyStickADC_SAR_IsEndConversion() should be called to verify that the data
 504:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *   sample is ready.
 505:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 506:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Parameters:
 507:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  None.
 508:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 509:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Return:
 510:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  The LSB of the last ADC conversion.
 511:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 512:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Global Variables:
 513:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  JoyStickADC_SAR_shift - used to convert the ADC counts to the 2s
 514:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  compliment form.
 515:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 516:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Side Effects:
 517:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  Converts the ADC counts to the 2s complement form.
 518:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 519:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *******************************************************************************/
 520:Generated_Source\PSoC5/JoyStickADC_SAR.c **** int8 JoyStickADC_SAR_GetResult8( void )
 521:Generated_Source\PSoC5/JoyStickADC_SAR.c **** {
 522:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     return( (int8)JoyStickADC_SAR_SAR_WRK0_REG - (int8)JoyStickADC_SAR_shift);
 523:Generated_Source\PSoC5/JoyStickADC_SAR.c **** }
 524:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 525:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 526:Generated_Source\PSoC5/JoyStickADC_SAR.c **** /*******************************************************************************
 527:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Function Name: JoyStickADC_SAR_GetResult16
 528:Generated_Source\PSoC5/JoyStickADC_SAR.c **** ********************************************************************************
 529:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 530:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Summary:
 531:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  Returns a 16-bit result for a conversion with a result that has a resolution
 532:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  of 8 to 12 bits.
 533:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  JoyStickADC_SAR_IsEndConversion() should be called to verify that the data
 534:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *   sample is ready
 535:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 536:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Parameters:
 537:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  None.
 538:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 539:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Return:
 540:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  The 16-bit result of the last ADC conversion
 541:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 542:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Global Variables:
 543:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  JoyStickADC_SAR_shift - used to convert the ADC counts to the 2s
 544:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  compliment form.
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 11


 545:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 546:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Side Effects:
 547:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  Converts the ADC counts to the 2s complement form.
 548:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 549:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *******************************************************************************/
 550:Generated_Source\PSoC5/JoyStickADC_SAR.c **** int16 JoyStickADC_SAR_GetResult16( void )
 551:Generated_Source\PSoC5/JoyStickADC_SAR.c **** {
 552:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     uint16 res;
 553:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 554:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     res = CY_GET_REG16(JoyStickADC_SAR_SAR_WRK_PTR);
 555:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 556:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     return( (int16)res - JoyStickADC_SAR_shift );
 557:Generated_Source\PSoC5/JoyStickADC_SAR.c **** }
 558:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 559:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 560:Generated_Source\PSoC5/JoyStickADC_SAR.c **** /*******************************************************************************
 561:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Function Name: JoyStickADC_SAR_SetOffset
 562:Generated_Source\PSoC5/JoyStickADC_SAR.c **** ********************************************************************************
 563:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 564:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Summary:
 565:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  Sets the ADC offset, which is used by JoyStickADC_SAR_CountsTo_Volts(),
 566:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  JoyStickADC_SAR_CountsTo_mVolts(), and JoyStickADC_SAR_CountsTo_uVolts()
 567:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  to subtract the offset from the given reading before calculating the voltage
 568:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  conversion.
 569:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 570:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Parameters:
 571:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  int16: This value is measured when the inputs are shorted or connected to
 572:Generated_Source\PSoC5/JoyStickADC_SAR.c ****    the same input voltage.
 573:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 574:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Return:
 575:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  None.
 576:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 577:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Global Variables:
 578:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  The JoyStickADC_SAR_offset variable modified. This variable is used for
 579:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  offset calibration purpose.
 580:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  Affects the JoyStickADC_SAR_CountsTo_Volts,
 581:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  JoyStickADC_SAR_CountsTo_mVolts, JoyStickADC_SAR_CountsTo_uVolts functions
 582:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  by subtracting the given offset.
 583:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 584:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *******************************************************************************/
 585:Generated_Source\PSoC5/JoyStickADC_SAR.c **** void JoyStickADC_SAR_SetOffset(int16 offset)
 586:Generated_Source\PSoC5/JoyStickADC_SAR.c **** {
 587:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     JoyStickADC_SAR_offset = offset;
 588:Generated_Source\PSoC5/JoyStickADC_SAR.c **** }
 589:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 590:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 591:Generated_Source\PSoC5/JoyStickADC_SAR.c **** /*******************************************************************************
 592:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Function Name: JoyStickADC_SAR_CalcGain
 593:Generated_Source\PSoC5/JoyStickADC_SAR.c **** ********************************************************************************
 594:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 595:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Summary:
 596:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  This function calculates the ADC gain in counts per 10 volt.
 597:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 598:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Parameters:
 599:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  uint8: resolution
 600:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 601:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Return:
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 12


 602:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  None.
 603:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 604:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Global Variables:
 605:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  JoyStickADC_SAR_shift variable initialized. This variable is used to
 606:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  convert the ADC counts to the 2s compliment form.
 607:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  JoyStickADC_SAR_countsPer10Volt variable initialized. This variable is used
 608:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  for gain calibration purpose.
 609:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 610:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *******************************************************************************/
 611:Generated_Source\PSoC5/JoyStickADC_SAR.c **** static void JoyStickADC_SAR_CalcGain( uint8 resolution )
 612:Generated_Source\PSoC5/JoyStickADC_SAR.c **** {
  27              		.loc 1 612 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 613:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     int32 counts;
 614:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #if(!((JoyStickADC_SAR_DEFAULT_RANGE == JoyStickADC_SAR__VSS_TO_VREF) || \
 615:Generated_Source\PSoC5/JoyStickADC_SAR.c ****          (JoyStickADC_SAR_DEFAULT_RANGE == JoyStickADC_SAR__VSSA_TO_VDDA) || \
 616:Generated_Source\PSoC5/JoyStickADC_SAR.c ****          (JoyStickADC_SAR_DEFAULT_RANGE == JoyStickADC_SAR__VSSA_TO_VDAC)) )
 617:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         uint16 diff_zero;
 618:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #endif /* End JoyStickADC_SAR_DEFAULT_RANGE */
 619:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 620:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     switch (resolution)
  36              		.loc 1 620 0
  37 0002 0A28     		cmp	r0, #10
  38 0004 0FD0     		beq	.L7
  39 0006 0C28     		cmp	r0, #12
  40 0008 02D0     		beq	.L4
  41 000a 0828     		cmp	r0, #8
  42 000c 06D1     		bne	.L8
  43 000e 02E0     		b	.L5
  44              	.L4:
 621:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     {
 622:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         case (uint8)JoyStickADC_SAR__BITS_12:
 623:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             counts = (int32)JoyStickADC_SAR_SAR_WRK_MAX_12BIT;
  45              		.loc 1 623 0
  46 0010 4FF48052 		mov	r2, #4096
  47 0014 09E0     		b	.L3
  48              	.L5:
  49              	.LVL1:
 624:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             #if(!((JoyStickADC_SAR_DEFAULT_RANGE == JoyStickADC_SAR__VSS_TO_VREF) || \
 625:Generated_Source\PSoC5/JoyStickADC_SAR.c ****                  (JoyStickADC_SAR_DEFAULT_RANGE == JoyStickADC_SAR__VSSA_TO_VDDA) || \
 626:Generated_Source\PSoC5/JoyStickADC_SAR.c ****                  (JoyStickADC_SAR_DEFAULT_RANGE == JoyStickADC_SAR__VSSA_TO_VDAC)) )
 627:Generated_Source\PSoC5/JoyStickADC_SAR.c ****                 diff_zero = JoyStickADC_SAR_SAR_DIFF_SHIFT;
 628:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             #endif /* End JoyStickADC_SAR_DEFAULT_RANGE */
 629:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             break;
 630:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         case (uint8)JoyStickADC_SAR__BITS_10:
 631:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             counts = (int32)JoyStickADC_SAR_SAR_WRK_MAX_10BIT;
 632:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             #if(!((JoyStickADC_SAR_DEFAULT_RANGE == JoyStickADC_SAR__VSS_TO_VREF) || \
 633:Generated_Source\PSoC5/JoyStickADC_SAR.c ****                  (JoyStickADC_SAR_DEFAULT_RANGE == JoyStickADC_SAR__VSSA_TO_VDDA) || \
 634:Generated_Source\PSoC5/JoyStickADC_SAR.c ****                  (JoyStickADC_SAR_DEFAULT_RANGE == JoyStickADC_SAR__VSSA_TO_VDAC)) )
 635:Generated_Source\PSoC5/JoyStickADC_SAR.c ****                 diff_zero = JoyStickADC_SAR_SAR_DIFF_SHIFT >> 2u;
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 13


 636:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             #endif /* End JoyStickADC_SAR_DEFAULT_RANGE */
 637:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             break;
 638:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         case (uint8)JoyStickADC_SAR__BITS_8:
 639:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             counts = (int32)JoyStickADC_SAR_SAR_WRK_MAX_8BIT;
  50              		.loc 1 639 0
  51 0016 4FF48072 		mov	r2, #256
 640:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             #if(!((JoyStickADC_SAR_DEFAULT_RANGE == JoyStickADC_SAR__VSS_TO_VREF) || \
 641:Generated_Source\PSoC5/JoyStickADC_SAR.c ****                  (JoyStickADC_SAR_DEFAULT_RANGE == JoyStickADC_SAR__VSSA_TO_VDDA) || \
 642:Generated_Source\PSoC5/JoyStickADC_SAR.c ****                  (JoyStickADC_SAR_DEFAULT_RANGE == JoyStickADC_SAR__VSSA_TO_VDAC)) )
 643:Generated_Source\PSoC5/JoyStickADC_SAR.c ****                 diff_zero = JoyStickADC_SAR_SAR_DIFF_SHIFT >> 4u;
 644:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             #endif /* End JoyStickADC_SAR_DEFAULT_RANGE */
 645:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             break;
  52              		.loc 1 645 0
  53 001a 06E0     		b	.L3
  54              	.LVL2:
  55              	.L8:
 646:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         default: /* Halt CPU in debug mode if resolution is out of valid range */
 647:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             counts = 0;
 648:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             #if(!((JoyStickADC_SAR_DEFAULT_RANGE == JoyStickADC_SAR__VSS_TO_VREF) || \
 649:Generated_Source\PSoC5/JoyStickADC_SAR.c ****                  (JoyStickADC_SAR_DEFAULT_RANGE == JoyStickADC_SAR__VSSA_TO_VDDA) || \
 650:Generated_Source\PSoC5/JoyStickADC_SAR.c ****                  (JoyStickADC_SAR_DEFAULT_RANGE == JoyStickADC_SAR__VSSA_TO_VDAC)) )
 651:Generated_Source\PSoC5/JoyStickADC_SAR.c ****                 diff_zero = 0u;
 652:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             #endif /* End JoyStickADC_SAR_DEFAULT_RANGE */
 653:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             CYASSERT(0u != 0u);
  56              		.loc 1 653 0
  57 001c 0020     		movs	r0, #0
  58              	.LVL3:
  59 001e FFF7FEFF 		bl	CyHalt
  60              	.LVL4:
 647:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             #if(!((JoyStickADC_SAR_DEFAULT_RANGE == JoyStickADC_SAR__VSS_TO_VREF) || \
  61              		.loc 1 647 0
  62 0022 0022     		movs	r2, #0
  63 0024 01E0     		b	.L3
  64              	.LVL5:
  65              	.L7:
 631:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             #if(!((JoyStickADC_SAR_DEFAULT_RANGE == JoyStickADC_SAR__VSS_TO_VREF) || \
  66              		.loc 1 631 0
  67 0026 4FF48062 		mov	r2, #1024
  68              	.LVL6:
  69              	.L3:
 654:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             break;
 655:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     }
 656:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     JoyStickADC_SAR_countsPerVolt = 0; /* Clear obsolete variable */
  70              		.loc 1 656 0
  71 002a 0021     		movs	r1, #0
  72 002c 084B     		ldr	r3, .L10
  73 002e 1980     		strh	r1, [r3]	@ movhi
 657:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* Calculate gain in counts per 10 volts with rounding */
 658:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     JoyStickADC_SAR_countsPer10Volt = (((counts * JoyStickADC_SAR_10MV_COUNTS) +
  74              		.loc 1 658 0
  75 0030 42F21073 		movw	r3, #10000
  76 0034 03FB02F3 		mul	r3, r3, r2
 659:Generated_Source\PSoC5/JoyStickADC_SAR.c ****                         JoyStickADC_SAR_DEFAULT_REF_VOLTAGE_MV) / (JoyStickADC_SAR_DEFAULT_REF_VOLT
  77              		.loc 1 659 0
  78 0038 13F58063 		adds	r3, r3, #1024
  79 003c 01D5     		bpl	.L6
  80 003e 03F2FF73 		addw	r3, r3, #2047
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 14


  81              	.L6:
  82 0042 DB12     		asrs	r3, r3, #11
 658:Generated_Source\PSoC5/JoyStickADC_SAR.c ****                         JoyStickADC_SAR_DEFAULT_REF_VOLTAGE_MV) / (JoyStickADC_SAR_DEFAULT_REF_VOLT
  83              		.loc 1 658 0
  84 0044 034A     		ldr	r2, .L10+4
  85              	.LVL7:
  86 0046 1360     		str	r3, [r2]
 660:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 661:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #if( (JoyStickADC_SAR_DEFAULT_RANGE == JoyStickADC_SAR__VSS_TO_VREF) || \
 662:Generated_Source\PSoC5/JoyStickADC_SAR.c ****          (JoyStickADC_SAR_DEFAULT_RANGE == JoyStickADC_SAR__VSSA_TO_VDDA) || \
 663:Generated_Source\PSoC5/JoyStickADC_SAR.c ****          (JoyStickADC_SAR_DEFAULT_RANGE == JoyStickADC_SAR__VSSA_TO_VDAC) )
 664:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         JoyStickADC_SAR_shift = 0;
  87              		.loc 1 664 0
  88 0048 0022     		movs	r2, #0
  89 004a 034B     		ldr	r3, .L10+8
  90 004c 1A80     		strh	r2, [r3]	@ movhi
  91 004e 08BD     		pop	{r3, pc}
  92              	.L11:
  93              		.align	2
  94              	.L10:
  95 0050 00000000 		.word	JoyStickADC_SAR_countsPerVolt
  96 0054 00000000 		.word	JoyStickADC_SAR_countsPer10Volt
  97 0058 00000000 		.word	JoyStickADC_SAR_shift
  98              		.cfi_endproc
  99              	.LFE12:
 100              		.size	JoyStickADC_SAR_CalcGain, .-JoyStickADC_SAR_CalcGain
 101              		.section	.text.JoyStickADC_SAR_Enable,"ax",%progbits
 102              		.align	2
 103              		.global	JoyStickADC_SAR_Enable
 104              		.thumb
 105              		.thumb_func
 106              		.type	JoyStickADC_SAR_Enable, %function
 107              	JoyStickADC_SAR_Enable:
 108              	.LFB2:
 144:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     uint8 tmpReg;
 109              		.loc 1 144 0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113 0000 10B5     		push	{r4, lr}
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 4, -8
 116              		.cfi_offset 14, -4
 147:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 117              		.loc 1 147 0
 118 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 119              	.LVL8:
 120 0006 0446     		mov	r4, r0
 121              	.LVL9:
 150:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 122              		.loc 1 150 0
 123 0008 194A     		ldr	r2, .L14
 124 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 125 000c 43F00103 		orr	r3, r3, #1
 126 0010 1370     		strb	r3, [r2]
 153:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 127              		.loc 1 153 0
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 15


 128 0012 1032     		adds	r2, r2, #16
 129 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 130 0016 43F00103 		orr	r3, r3, #1
 131 001a 1370     		strb	r3, [r2]
 162:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     tmpReg |= JoyStickADC_SAR_SAR_EN_BUF_VCM_EN;
 132              		.loc 1 162 0
 133 001c 02F5AA52 		add	r2, r2, #5440
 134 0020 0832     		adds	r2, r2, #8
 135 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 136              	.LVL10:
 137 0024 03F0FE03 		and	r3, r3, #254
 138              	.LVL11:
 167:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #else /* In INTREF or INTREF Bypassed this buffer is ON */
 139              		.loc 1 167 0
 140 0028 43F00203 		orr	r3, r3, #2
 141              	.LVL12:
 171:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 142              		.loc 1 171 0
 143 002c 1370     		strb	r3, [r2]
 184:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         #endif /* JoyStickADC_SAR_DEFAULT_REFERENCE == JoyStickADC_SAR__INT_REF_NOT_BYPASSED */
 144              		.loc 1 184 0
 145 002e 0422     		movs	r2, #4
 146 0030 104B     		ldr	r3, .L14+4
 147              	.LVL13:
 148 0032 1A70     		strb	r2, [r3]
 149              	.LVL14:
 192:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #endif /* JoyStickADC_SAR_HIGH_POWER_PULSE == 0u */
 150              		.loc 1 192 0
 151 0034 013B     		subs	r3, r3, #1
 152 0036 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 153 0038 42F04002 		orr	r2, r2, #64
 154 003c 1A70     		strb	r2, [r3]
 202:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #endif /* JoyStickADC_SAR_HIGH_POWER_PULSE == 0u */
 155              		.loc 1 202 0
 156 003e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 157 0040 02F0FC02 		and	r2, r2, #252
 158 0044 1A70     		strb	r2, [r3]
 206:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 159              		.loc 1 206 0
 160 0046 C822     		movs	r2, #200
 161 0048 053B     		subs	r3, r3, #5
 162 004a 1A70     		strb	r2, [r3]
 218:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 163              		.loc 1 218 0
 164 004c 0222     		movs	r2, #2
 165 004e A3F59753 		sub	r3, r3, #4832
 166 0052 0C3B     		subs	r3, r3, #12
 167 0054 1A70     		strb	r2, [r3]
 221:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 168              		.loc 1 221 0
 169 0056 084A     		ldr	r2, .L14+8
 170 0058 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 171 005a 43F00803 		orr	r3, r3, #8
 172 005e 1370     		strb	r3, [r2]
 223:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 173              		.loc 1 223 0
 174 0060 0A20     		movs	r0, #10
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 16


 175 0062 FFF7FEFF 		bl	CyDelayUs
 176              	.LVL15:
 230:Generated_Source\PSoC5/JoyStickADC_SAR.c **** }
 177              		.loc 1 230 0
 178 0066 2046     		mov	r0, r4
 179 0068 FFF7FEFF 		bl	CyExitCriticalSection
 180              	.LVL16:
 181 006c 10BD     		pop	{r4, pc}
 182              	.LVL17:
 183              	.L15:
 184 006e 00BF     		.align	2
 185              	.L14:
 186 0070 AB430040 		.word	1073759147
 187 0074 06590040 		.word	1073764614
 188 0078 275B0040 		.word	1073765159
 189              		.cfi_endproc
 190              	.LFE2:
 191              		.size	JoyStickADC_SAR_Enable, .-JoyStickADC_SAR_Enable
 192              		.section	.text.JoyStickADC_SAR_Stop,"ax",%progbits
 193              		.align	2
 194              		.global	JoyStickADC_SAR_Stop
 195              		.thumb
 196              		.thumb_func
 197              		.type	JoyStickADC_SAR_Stop, %function
 198              	JoyStickADC_SAR_Stop:
 199              	.LFB3:
 249:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     uint8 enableInterrupts;
 200              		.loc 1 249 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204 0000 08B5     		push	{r3, lr}
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 3, -8
 207              		.cfi_offset 14, -4
 251:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 208              		.loc 1 251 0
 209 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 210              	.LVL18:
 254:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* Disable the SAR ADC block in Active Power Mode */
 211              		.loc 1 254 0
 212 0006 0A4A     		ldr	r2, .L18
 213 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 214 000a 03F0FE03 		and	r3, r3, #254
 215 000e 1370     		strb	r3, [r2]
 256:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* Disable the SAR ADC in Standby Power Mode */
 216              		.loc 1 256 0
 217 0010 A2F5AA52 		sub	r2, r2, #5440
 218 0014 153A     		subs	r2, r2, #21
 219 0016 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 220 0018 03F0FE03 		and	r3, r3, #254
 221 001c 1370     		strb	r3, [r2]
 258:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 222              		.loc 1 258 0
 223 001e 1032     		adds	r2, r2, #16
 224 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 225 0022 03F0FE03 		and	r3, r3, #254
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 17


 226 0026 1370     		strb	r3, [r2]
 266:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 227              		.loc 1 266 0
 228 0028 FFF7FEFF 		bl	CyExitCriticalSection
 229              	.LVL19:
 230 002c 08BD     		pop	{r3, pc}
 231              	.L19:
 232 002e 00BF     		.align	2
 233              	.L18:
 234 0030 00590040 		.word	1073764608
 235              		.cfi_endproc
 236              	.LFE3:
 237              		.size	JoyStickADC_SAR_Stop, .-JoyStickADC_SAR_Stop
 238              		.section	.text.JoyStickADC_SAR_SetPower,"ax",%progbits
 239              		.align	2
 240              		.global	JoyStickADC_SAR_SetPower
 241              		.thumb
 242              		.thumb_func
 243              		.type	JoyStickADC_SAR_SetPower, %function
 244              	JoyStickADC_SAR_SetPower:
 245              	.LFB4:
 291:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     uint8 tmpReg;
 246              		.loc 1 291 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250              		@ link register save eliminated.
 251              	.LVL20:
 298:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     tmpReg |= (uint8)(power << JoyStickADC_SAR_SAR_POWER_SHIFT);
 252              		.loc 1 298 0
 253 0000 044A     		ldr	r2, .L21
 254 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 255 0004 03F03F03 		and	r3, r3, #63
 256              	.LVL21:
 299:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     JoyStickADC_SAR_SAR_CSR0_REG = tmpReg;
 257              		.loc 1 299 0
 258 0008 43EA8010 		orr	r0, r3, r0, lsl #6
 259              	.LVL22:
 260 000c C0B2     		uxtb	r0, r0
 261              	.LVL23:
 300:Generated_Source\PSoC5/JoyStickADC_SAR.c **** }
 262              		.loc 1 300 0
 263 000e 1070     		strb	r0, [r2]
 264 0010 7047     		bx	lr
 265              	.L22:
 266 0012 00BF     		.align	2
 267              	.L21:
 268 0014 00590040 		.word	1073764608
 269              		.cfi_endproc
 270              	.LFE4:
 271              		.size	JoyStickADC_SAR_SetPower, .-JoyStickADC_SAR_SetPower
 272              		.section	.text.JoyStickADC_SAR_SetResolution,"ax",%progbits
 273              		.align	2
 274              		.global	JoyStickADC_SAR_SetResolution
 275              		.thumb
 276              		.thumb_func
 277              		.type	JoyStickADC_SAR_SetResolution, %function
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 18


 278              	JoyStickADC_SAR_SetResolution:
 279              	.LFB5:
 341:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     uint8 tmpReg;
 280              		.loc 1 341 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              	.LVL24:
 285 0000 10B5     		push	{r4, lr}
 286              		.cfi_def_cfa_offset 8
 287              		.cfi_offset 4, -8
 288              		.cfi_offset 14, -4
 289 0002 0446     		mov	r4, r0
 345:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     {
 290              		.loc 1 345 0
 291 0004 0A28     		cmp	r0, #10
 292 0006 0DD0     		beq	.L28
 293 0008 0C28     		cmp	r0, #12
 294 000a 02D0     		beq	.L26
 295 000c 0828     		cmp	r0, #8
 296 000e 04D1     		bne	.L29
 297 0010 01E0     		b	.L27
 298              	.L26:
 348:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             break;
 299              		.loc 1 348 0
 300 0012 C422     		movs	r2, #196
 301 0014 07E0     		b	.L25
 302              	.L27:
 303              	.LVL25:
 354:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             break;
 304              		.loc 1 354 0
 305 0016 4422     		movs	r2, #68
 355:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         default:
 306              		.loc 1 355 0
 307 0018 05E0     		b	.L25
 308              	.LVL26:
 309              	.L29:
 359:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             break;
 310              		.loc 1 359 0
 311 001a 0020     		movs	r0, #0
 312              	.LVL27:
 313 001c FFF7FEFF 		bl	CyHalt
 314              	.LVL28:
 357:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 315              		.loc 1 357 0
 316 0020 C422     		movs	r2, #196
 317 0022 00E0     		b	.L25
 318              	.LVL29:
 319              	.L28:
 351:Generated_Source\PSoC5/JoyStickADC_SAR.c ****             break;
 320              		.loc 1 351 0
 321 0024 8422     		movs	r2, #132
 322              	.LVL30:
 323              	.L25:
 362:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 324              		.loc 1 362 0
 325 0026 034B     		ldr	r3, .L31
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 19


 326 0028 1A70     		strb	r2, [r3]
 365:Generated_Source\PSoC5/JoyStickADC_SAR.c **** }
 327              		.loc 1 365 0
 328 002a 2046     		mov	r0, r4
 329 002c FFF7FEFF 		bl	JoyStickADC_SAR_CalcGain
 330              	.LVL31:
 331 0030 10BD     		pop	{r4, pc}
 332              	.L32:
 333 0032 00BF     		.align	2
 334              	.L31:
 335 0034 02590040 		.word	1073764610
 336              		.cfi_endproc
 337              	.LFE5:
 338              		.size	JoyStickADC_SAR_SetResolution, .-JoyStickADC_SAR_SetResolution
 339              		.section	.text.JoyStickADC_SAR_Init,"ax",%progbits
 340              		.align	2
 341              		.global	JoyStickADC_SAR_Init
 342              		.thumb
 343              		.thumb_func
 344              		.type	JoyStickADC_SAR_Init, %function
 345              	JoyStickADC_SAR_Init:
 346              	.LFB1:
 107:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 347              		.loc 1 107 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351 0000 08B5     		push	{r3, lr}
 352              		.cfi_def_cfa_offset 8
 353              		.cfi_offset 3, -8
 354              		.cfi_offset 14, -4
 121:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 355              		.loc 1 121 0
 356 0002 064A     		ldr	r2, .L35
 357 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 358 0006 43F00603 		orr	r3, r3, #6
 359 000a 1370     		strb	r3, [r2]
 124:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     JoyStickADC_SAR_offset = 0;
 360              		.loc 1 124 0
 361 000c 0820     		movs	r0, #8
 362 000e FFF7FEFF 		bl	JoyStickADC_SAR_SetResolution
 363              	.LVL32:
 125:Generated_Source\PSoC5/JoyStickADC_SAR.c **** }
 364              		.loc 1 125 0
 365 0012 0022     		movs	r2, #0
 366 0014 024B     		ldr	r3, .L35+4
 367 0016 1A80     		strh	r2, [r3]	@ movhi
 368 0018 08BD     		pop	{r3, pc}
 369              	.L36:
 370 001a 00BF     		.align	2
 371              	.L35:
 372 001c 01590040 		.word	1073764609
 373 0020 00000000 		.word	JoyStickADC_SAR_offset
 374              		.cfi_endproc
 375              	.LFE1:
 376              		.size	JoyStickADC_SAR_Init, .-JoyStickADC_SAR_Init
 377              		.section	.text.JoyStickADC_SAR_Start,"ax",%progbits
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 20


 378              		.align	2
 379              		.global	JoyStickADC_SAR_Start
 380              		.thumb
 381              		.thumb_func
 382              		.type	JoyStickADC_SAR_Start, %function
 383              	JoyStickADC_SAR_Start:
 384              	.LFB0:
  75:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 385              		.loc 1 75 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389 0000 08B5     		push	{r3, lr}
 390              		.cfi_def_cfa_offset 8
 391              		.cfi_offset 3, -8
 392              		.cfi_offset 14, -4
  78:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     {
 393              		.loc 1 78 0
 394 0002 054B     		ldr	r3, .L40
 395 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 396 0006 23B9     		cbnz	r3, .L38
  80:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         JoyStickADC_SAR_initVar = 1u;
 397              		.loc 1 80 0
 398 0008 FFF7FEFF 		bl	JoyStickADC_SAR_Init
 399              	.LVL33:
  81:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     }
 400              		.loc 1 81 0
 401 000c 0122     		movs	r2, #1
 402 000e 024B     		ldr	r3, .L40
 403 0010 1A70     		strb	r2, [r3]
 404              	.L38:
  83:Generated_Source\PSoC5/JoyStickADC_SAR.c **** }
 405              		.loc 1 83 0
 406 0012 FFF7FEFF 		bl	JoyStickADC_SAR_Enable
 407              	.LVL34:
 408 0016 08BD     		pop	{r3, pc}
 409              	.L41:
 410              		.align	2
 411              	.L40:
 412 0018 00000000 		.word	.LANCHOR0
 413              		.cfi_endproc
 414              	.LFE0:
 415              		.size	JoyStickADC_SAR_Start, .-JoyStickADC_SAR_Start
 416              		.section	.text.JoyStickADC_SAR_StartConvert,"ax",%progbits
 417              		.align	2
 418              		.global	JoyStickADC_SAR_StartConvert
 419              		.thumb
 420              		.thumb_func
 421              		.type	JoyStickADC_SAR_StartConvert, %function
 422              	JoyStickADC_SAR_StartConvert:
 423              	.LFB6:
 402:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         #if(JoyStickADC_SAR_DEFAULT_CONV_MODE != JoyStickADC_SAR__FREE_RUNNING)  /* If software tri
 424              		.loc 1 402 0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 0
 427              		@ frame_needed = 0, uses_anonymous_args = 0
 428              		@ link register save eliminated.
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 21


 408:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     }
 429              		.loc 1 408 0
 430 0000 024A     		ldr	r2, .L43
 431 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 432 0004 43F00103 		orr	r3, r3, #1
 433 0008 1370     		strb	r3, [r2]
 434 000a 7047     		bx	lr
 435              	.L44:
 436              		.align	2
 437              	.L43:
 438 000c 00590040 		.word	1073764608
 439              		.cfi_endproc
 440              	.LFE6:
 441              		.size	JoyStickADC_SAR_StartConvert, .-JoyStickADC_SAR_StartConvert
 442              		.section	.text.JoyStickADC_SAR_StopConvert,"ax",%progbits
 443              		.align	2
 444              		.global	JoyStickADC_SAR_StopConvert
 445              		.thumb
 446              		.thumb_func
 447              		.type	JoyStickADC_SAR_StopConvert, %function
 448              	JoyStickADC_SAR_StopConvert:
 449              	.LFB7:
 436:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         /* Stop all conversions */
 450              		.loc 1 436 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454              		@ link register save eliminated.
 438:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 455              		.loc 1 438 0
 456 0000 024A     		ldr	r2, .L46
 457 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 458 0004 03F0FE03 		and	r3, r3, #254
 459 0008 1370     		strb	r3, [r2]
 460 000a 7047     		bx	lr
 461              	.L47:
 462              		.align	2
 463              	.L46:
 464 000c 00590040 		.word	1073764608
 465              		.cfi_endproc
 466              	.LFE7:
 467              		.size	JoyStickADC_SAR_StopConvert, .-JoyStickADC_SAR_StopConvert
 468              		.section	.text.JoyStickADC_SAR_IsEndConversion,"ax",%progbits
 469              		.align	2
 470              		.global	JoyStickADC_SAR_IsEndConversion
 471              		.thumb
 472              		.thumb_func
 473              		.type	JoyStickADC_SAR_IsEndConversion, %function
 474              	JoyStickADC_SAR_IsEndConversion:
 475              	.LFB8:
 476:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     uint8 status;
 476              		.loc 1 476 0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 0
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 480              	.LVL35:
 481 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 22


 482              		.cfi_def_cfa_offset 8
 483              		.cfi_offset 4, -8
 484              		.cfi_offset 14, -4
 485              	.L50:
 481:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     } while ((status != JoyStickADC_SAR_SAR_EOF_1) && (retMode == JoyStickADC_SAR_WAIT_FOR_RESULT))
 486              		.loc 1 481 0 discriminator 2
 487 0002 074B     		ldr	r3, .L53
 488 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 489              	.LVL36:
 482:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* If convertion complete, wait until EOF bit released */
 490              		.loc 1 482 0 discriminator 2
 491 0006 13F00104 		ands	r4, r3, #1
 492 000a 01D1     		bne	.L49
 482:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* If convertion complete, wait until EOF bit released */
 493              		.loc 1 482 0 is_stmt 0 discriminator 1
 494 000c 0028     		cmp	r0, #0
 495 000e F8D0     		beq	.L50
 496              	.L49:
 484:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     {
 497              		.loc 1 484 0 is_stmt 1
 498 0010 24B1     		cbz	r4, .L51
 487:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 499              		.loc 1 487 0
 500 0012 0120     		movs	r0, #1
 501              	.LVL37:
 502 0014 FFF7FEFF 		bl	CyDelayUs
 503              	.LVL38:
 489:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     }
 504              		.loc 1 489 0
 505 0018 014B     		ldr	r3, .L53
 506 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 507              	.L51:
 493:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 508              		.loc 1 493 0
 509 001c 2046     		mov	r0, r4
 510 001e 10BD     		pop	{r4, pc}
 511              	.L54:
 512              		.align	2
 513              	.L53:
 514 0020 01590040 		.word	1073764609
 515              		.cfi_endproc
 516              	.LFE8:
 517              		.size	JoyStickADC_SAR_IsEndConversion, .-JoyStickADC_SAR_IsEndConversion
 518              		.section	.text.JoyStickADC_SAR_GetResult8,"ax",%progbits
 519              		.align	2
 520              		.global	JoyStickADC_SAR_GetResult8
 521              		.thumb
 522              		.thumb_func
 523              		.type	JoyStickADC_SAR_GetResult8, %function
 524              	JoyStickADC_SAR_GetResult8:
 525              	.LFB9:
 521:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     return( (int8)JoyStickADC_SAR_SAR_WRK0_REG - (int8)JoyStickADC_SAR_shift);
 526              		.loc 1 521 0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 0
 529              		@ frame_needed = 0, uses_anonymous_args = 0
 530              		@ link register save eliminated.
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 23


 522:Generated_Source\PSoC5/JoyStickADC_SAR.c **** }
 531              		.loc 1 522 0
 532 0000 034B     		ldr	r3, .L56
 533 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 534 0004 034A     		ldr	r2, .L56+4
 535 0006 1088     		ldrh	r0, [r2]
 536 0008 00B2     		sxth	r0, r0
 537 000a 181A     		subs	r0, r3, r0
 523:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 538              		.loc 1 523 0
 539 000c 40B2     		sxtb	r0, r0
 540 000e 7047     		bx	lr
 541              	.L57:
 542              		.align	2
 543              	.L56:
 544 0010 A05B0040 		.word	1073765280
 545 0014 00000000 		.word	JoyStickADC_SAR_shift
 546              		.cfi_endproc
 547              	.LFE9:
 548              		.size	JoyStickADC_SAR_GetResult8, .-JoyStickADC_SAR_GetResult8
 549              		.section	.text.JoyStickADC_SAR_GetResult16,"ax",%progbits
 550              		.align	2
 551              		.global	JoyStickADC_SAR_GetResult16
 552              		.thumb
 553              		.thumb_func
 554              		.type	JoyStickADC_SAR_GetResult16, %function
 555              	JoyStickADC_SAR_GetResult16:
 556              	.LFB10:
 551:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     uint16 res;
 557              		.loc 1 551 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 0, uses_anonymous_args = 0
 561              		@ link register save eliminated.
 554:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 562              		.loc 1 554 0
 563 0000 034B     		ldr	r3, .L59
 564 0002 1888     		ldrh	r0, [r3]
 565 0004 80B2     		uxth	r0, r0
 566              	.LVL39:
 556:Generated_Source\PSoC5/JoyStickADC_SAR.c **** }
 567              		.loc 1 556 0
 568 0006 034B     		ldr	r3, .L59+4
 569 0008 1B88     		ldrh	r3, [r3]
 570 000a C01A     		subs	r0, r0, r3
 571              	.LVL40:
 557:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 572              		.loc 1 557 0
 573 000c 00B2     		sxth	r0, r0
 574 000e 7047     		bx	lr
 575              	.L60:
 576              		.align	2
 577              	.L59:
 578 0010 A05B0040 		.word	1073765280
 579 0014 00000000 		.word	JoyStickADC_SAR_shift
 580              		.cfi_endproc
 581              	.LFE10:
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 24


 582              		.size	JoyStickADC_SAR_GetResult16, .-JoyStickADC_SAR_GetResult16
 583              		.section	.text.JoyStickADC_SAR_SetOffset,"ax",%progbits
 584              		.align	2
 585              		.global	JoyStickADC_SAR_SetOffset
 586              		.thumb
 587              		.thumb_func
 588              		.type	JoyStickADC_SAR_SetOffset, %function
 589              	JoyStickADC_SAR_SetOffset:
 590              	.LFB11:
 586:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     JoyStickADC_SAR_offset = offset;
 591              		.loc 1 586 0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595              		@ link register save eliminated.
 596              	.LVL41:
 587:Generated_Source\PSoC5/JoyStickADC_SAR.c **** }
 597              		.loc 1 587 0
 598 0000 014B     		ldr	r3, .L62
 599 0002 1880     		strh	r0, [r3]	@ movhi
 600 0004 7047     		bx	lr
 601              	.L63:
 602 0006 00BF     		.align	2
 603              	.L62:
 604 0008 00000000 		.word	JoyStickADC_SAR_offset
 605              		.cfi_endproc
 606              	.LFE11:
 607              		.size	JoyStickADC_SAR_SetOffset, .-JoyStickADC_SAR_SetOffset
 608              		.section	.text.JoyStickADC_SAR_SetGain,"ax",%progbits
 609              		.align	2
 610              		.global	JoyStickADC_SAR_SetGain
 611              		.thumb
 612              		.thumb_func
 613              		.type	JoyStickADC_SAR_SetGain, %function
 614              	JoyStickADC_SAR_SetGain:
 615              	.LFB13:
 665:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #else
 666:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         JoyStickADC_SAR_shift = diff_zero;
 667:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     #endif /* End JoyStickADC_SAR_DEFAULT_RANGE */
 668:Generated_Source\PSoC5/JoyStickADC_SAR.c **** }
 669:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 670:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 671:Generated_Source\PSoC5/JoyStickADC_SAR.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Function Name: JoyStickADC_SAR_SetGain
 673:Generated_Source\PSoC5/JoyStickADC_SAR.c **** ********************************************************************************
 674:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 675:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Summary:
 676:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  Sets the ADC gain in counts per volt for the voltage conversion functions
 677:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  that follow. This value is set by default by the reference and input range
 678:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  settings. It should only be used to further calibrate the ADC with a known
 679:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  input or if the ADC is using an external reference.
 680:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 681:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Parameters:
 682:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  int16 adcGain counts per volt
 683:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 684:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Return:
 685:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  None.
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 25


 686:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 687:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Global Variables:
 688:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  JoyStickADC_SAR_countsPer10Volt variable modified. This variable is used
 689:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  for gain calibration purpose.
 690:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 691:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *******************************************************************************/
 692:Generated_Source\PSoC5/JoyStickADC_SAR.c **** void JoyStickADC_SAR_SetGain(int16 adcGain)
 693:Generated_Source\PSoC5/JoyStickADC_SAR.c **** {
 616              		.loc 1 693 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 0
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 620              		@ link register save eliminated.
 621              	.LVL42:
 694:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     JoyStickADC_SAR_countsPer10Volt = (int32)adcGain * 10;
 622              		.loc 1 694 0
 623 0000 00EB8000 		add	r0, r0, r0, lsl #2
 624              	.LVL43:
 625 0004 4300     		lsls	r3, r0, #1
 626 0006 014A     		ldr	r2, .L65
 627 0008 1360     		str	r3, [r2]
 628 000a 7047     		bx	lr
 629              	.L66:
 630              		.align	2
 631              	.L65:
 632 000c 00000000 		.word	JoyStickADC_SAR_countsPer10Volt
 633              		.cfi_endproc
 634              	.LFE13:
 635              		.size	JoyStickADC_SAR_SetGain, .-JoyStickADC_SAR_SetGain
 636              		.section	.text.JoyStickADC_SAR_SetScaledGain,"ax",%progbits
 637              		.align	2
 638              		.global	JoyStickADC_SAR_SetScaledGain
 639              		.thumb
 640              		.thumb_func
 641              		.type	JoyStickADC_SAR_SetScaledGain, %function
 642              	JoyStickADC_SAR_SetScaledGain:
 643              	.LFB14:
 695:Generated_Source\PSoC5/JoyStickADC_SAR.c **** }
 696:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 697:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 698:Generated_Source\PSoC5/JoyStickADC_SAR.c **** /*******************************************************************************
 699:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Function Name: JoyStickADC_SAR_SetScaledGain
 700:Generated_Source\PSoC5/JoyStickADC_SAR.c **** ********************************************************************************
 701:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 702:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Summary:
 703:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  Sets the ADC gain in counts per 10 volt for the voltage conversion functions
 704:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  that follow. This value is set by default by the reference and input range
 705:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  settings. It should only be used to further calibrate the ADC with a known
 706:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  input or if the ADC is using an external reference.
 707:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 708:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Parameters:
 709:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  int32 adcGain  counts per 10 volt
 710:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 711:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Return:
 712:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  None.
 713:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 714:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Global Variables:
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 26


 715:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  JoyStickADC_SAR_countsPer10Volt variable modified. This variable is used
 716:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  for gain calibration purpose.
 717:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 718:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *******************************************************************************/
 719:Generated_Source\PSoC5/JoyStickADC_SAR.c **** void JoyStickADC_SAR_SetScaledGain(int32 adcGain)
 720:Generated_Source\PSoC5/JoyStickADC_SAR.c **** {
 644              		.loc 1 720 0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 0
 647              		@ frame_needed = 0, uses_anonymous_args = 0
 648              		@ link register save eliminated.
 649              	.LVL44:
 721:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     JoyStickADC_SAR_countsPer10Volt = adcGain;
 650              		.loc 1 721 0
 651 0000 014B     		ldr	r3, .L68
 652 0002 1860     		str	r0, [r3]
 653 0004 7047     		bx	lr
 654              	.L69:
 655 0006 00BF     		.align	2
 656              	.L68:
 657 0008 00000000 		.word	JoyStickADC_SAR_countsPer10Volt
 658              		.cfi_endproc
 659              	.LFE14:
 660              		.size	JoyStickADC_SAR_SetScaledGain, .-JoyStickADC_SAR_SetScaledGain
 661              		.section	.text.JoyStickADC_SAR_CountsTo_mVolts,"ax",%progbits
 662              		.align	2
 663              		.global	JoyStickADC_SAR_CountsTo_mVolts
 664              		.thumb
 665              		.thumb_func
 666              		.type	JoyStickADC_SAR_CountsTo_mVolts, %function
 667              	JoyStickADC_SAR_CountsTo_mVolts:
 668              	.LFB15:
 722:Generated_Source\PSoC5/JoyStickADC_SAR.c **** }
 723:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 724:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 725:Generated_Source\PSoC5/JoyStickADC_SAR.c **** /*******************************************************************************
 726:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Function Name: JoyStickADC_SAR_CountsTo_mVolts
 727:Generated_Source\PSoC5/JoyStickADC_SAR.c **** ********************************************************************************
 728:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 729:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Summary:
 730:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  Converts the ADC output to millivolts as a 16-bit integer.
 731:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 732:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Parameters:
 733:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  int16 adcCounts:  Result from the ADC conversion
 734:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 735:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Return:
 736:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  int16 Result in mVolts
 737:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 738:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Global Variables:
 739:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  JoyStickADC_SAR_offset variable used.
 740:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  JoyStickADC_SAR_countsPer10Volt variable used.
 741:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 742:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *******************************************************************************/
 743:Generated_Source\PSoC5/JoyStickADC_SAR.c **** int16 JoyStickADC_SAR_CountsTo_mVolts(int16 adcCounts)
 744:Generated_Source\PSoC5/JoyStickADC_SAR.c **** {
 669              		.loc 1 744 0
 670              		.cfi_startproc
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 27


 671              		@ args = 0, pretend = 0, frame = 0
 672              		@ frame_needed = 0, uses_anonymous_args = 0
 673              		@ link register save eliminated.
 674              	.LVL45:
 675 0000 10B4     		push	{r4}
 676              		.cfi_def_cfa_offset 4
 677              		.cfi_offset 4, -4
 745:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     int16 mVolts;
 746:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     int32 countsPer10Volt;
 747:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 748:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     if(JoyStickADC_SAR_countsPerVolt != 0)
 678              		.loc 1 748 0
 679 0002 124B     		ldr	r3, .L76
 680 0004 1B88     		ldrh	r3, [r3]
 681 0006 1BB2     		sxth	r3, r3
 682 0008 33B1     		cbz	r3, .L71
 749:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     {   /* Support obsolete method */
 750:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         countsPer10Volt = (int32)JoyStickADC_SAR_countsPerVolt * 10;
 683              		.loc 1 750 0
 684 000a 104B     		ldr	r3, .L76
 685 000c 1B88     		ldrh	r3, [r3]
 686 000e 1BB2     		sxth	r3, r3
 687 0010 03EB8303 		add	r3, r3, r3, lsl #2
 688 0014 5C00     		lsls	r4, r3, #1
 689              	.LVL46:
 690 0016 01E0     		b	.L72
 691              	.LVL47:
 692              	.L71:
 751:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     }
 752:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     else
 753:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     {
 754:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         countsPer10Volt = JoyStickADC_SAR_countsPer10Volt;
 693              		.loc 1 754 0
 694 0018 0D4B     		ldr	r3, .L76+4
 695 001a 1C68     		ldr	r4, [r3]
 696              	.LVL48:
 697              	.L72:
 755:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     }
 756:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 757:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* Subtract ADC offset */
 758:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     adcCounts -= JoyStickADC_SAR_offset;
 698              		.loc 1 758 0
 699 001c 0D4B     		ldr	r3, .L76+8
 700 001e 1988     		ldrh	r1, [r3]
 701 0020 411A     		subs	r1, r0, r1
 702 0022 09B2     		sxth	r1, r1
 703              	.LVL49:
 759:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* Convert to millivolts with rounding */
 760:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     mVolts = (int16)( (( (int32)adcCounts * JoyStickADC_SAR_10MV_COUNTS ) + ( (adcCounts > 0) ?
 704              		.loc 1 760 0
 705 0024 42F21073 		movw	r3, #10000
 706 0028 03FB01F2 		mul	r2, r3, r1
 761:Generated_Source\PSoC5/JoyStickADC_SAR.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 707              		.loc 1 761 0
 708 002c 0029     		cmp	r1, #0
 709 002e 03DD     		ble	.L73
 710              		.loc 1 761 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 28


 711 0030 04EBD470 		add	r0, r4, r4, lsr #31
 712 0034 4010     		asrs	r0, r0, #1
 713 0036 03E0     		b	.L74
 714              	.L73:
 715              		.loc 1 761 0 discriminator 2
 716 0038 04EBD470 		add	r0, r4, r4, lsr #31
 717 003c 4010     		asrs	r0, r0, #1
 718 003e 4042     		negs	r0, r0
 719              	.L74:
 760:Generated_Source\PSoC5/JoyStickADC_SAR.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 720              		.loc 1 760 0 is_stmt 1
 721 0040 8318     		adds	r3, r0, r2
 722              		.loc 1 761 0
 723 0042 93FBF4F0 		sdiv	r0, r3, r4
 724              	.LVL50:
 762:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 763:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     return( mVolts );
 764:Generated_Source\PSoC5/JoyStickADC_SAR.c **** }
 725              		.loc 1 764 0
 726 0046 00B2     		sxth	r0, r0
 727 0048 10BC     		pop	{r4}
 728              		.cfi_restore 4
 729              		.cfi_def_cfa_offset 0
 730              	.LVL51:
 731 004a 7047     		bx	lr
 732              	.L77:
 733              		.align	2
 734              	.L76:
 735 004c 00000000 		.word	JoyStickADC_SAR_countsPerVolt
 736 0050 00000000 		.word	JoyStickADC_SAR_countsPer10Volt
 737 0054 00000000 		.word	JoyStickADC_SAR_offset
 738              		.cfi_endproc
 739              	.LFE15:
 740              		.size	JoyStickADC_SAR_CountsTo_mVolts, .-JoyStickADC_SAR_CountsTo_mVolts
 741              		.global	__aeabi_ldivmod
 742              		.section	.text.JoyStickADC_SAR_CountsTo_uVolts,"ax",%progbits
 743              		.align	2
 744              		.global	JoyStickADC_SAR_CountsTo_uVolts
 745              		.thumb
 746              		.thumb_func
 747              		.type	JoyStickADC_SAR_CountsTo_uVolts, %function
 748              	JoyStickADC_SAR_CountsTo_uVolts:
 749              	.LFB16:
 765:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 766:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 767:Generated_Source\PSoC5/JoyStickADC_SAR.c **** /*******************************************************************************
 768:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Function Name: JoyStickADC_SAR_CountsTo_uVolts
 769:Generated_Source\PSoC5/JoyStickADC_SAR.c **** ********************************************************************************
 770:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 771:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Summary:
 772:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  Converts the ADC output to microvolts as a 32-bit integer.
 773:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 774:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Parameters:
 775:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  int16 adcCounts: Result from the ADC conversion
 776:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 777:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Return:
 778:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  int32 Result in micro Volts
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 29


 779:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 780:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Global Variables:
 781:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  JoyStickADC_SAR_offset variable used.
 782:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  JoyStickADC_SAR_countsPer10Volt used to convert ADC counts to uVolts.
 783:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 784:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *******************************************************************************/
 785:Generated_Source\PSoC5/JoyStickADC_SAR.c **** int32 JoyStickADC_SAR_CountsTo_uVolts(int16 adcCounts)
 786:Generated_Source\PSoC5/JoyStickADC_SAR.c **** {
 750              		.loc 1 786 0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 0
 753              		@ frame_needed = 0, uses_anonymous_args = 0
 754              	.LVL52:
 755 0000 38B5     		push	{r3, r4, r5, lr}
 756              		.cfi_def_cfa_offset 16
 757              		.cfi_offset 3, -16
 758              		.cfi_offset 4, -12
 759              		.cfi_offset 5, -8
 760              		.cfi_offset 14, -4
 787:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 788:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     int64 uVolts;
 789:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     int32 countsPer10Volt;
 790:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 791:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     if(JoyStickADC_SAR_countsPerVolt != 0)
 761              		.loc 1 791 0
 762 0002 0D4B     		ldr	r3, .L82
 763 0004 1B88     		ldrh	r3, [r3]
 764 0006 1BB2     		sxth	r3, r3
 765 0008 33B1     		cbz	r3, .L79
 792:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     {   /* Support obsolete method */
 793:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         countsPer10Volt = (int32)JoyStickADC_SAR_countsPerVolt * 10;
 766              		.loc 1 793 0
 767 000a 0B4B     		ldr	r3, .L82
 768 000c 1B88     		ldrh	r3, [r3]
 769 000e 1BB2     		sxth	r3, r3
 770 0010 03EB8303 		add	r3, r3, r3, lsl #2
 771 0014 5A00     		lsls	r2, r3, #1
 772              	.LVL53:
 773 0016 01E0     		b	.L80
 774              	.LVL54:
 775              	.L79:
 794:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     }
 795:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     else
 796:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     {
 797:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         countsPer10Volt = JoyStickADC_SAR_countsPer10Volt;
 776              		.loc 1 797 0
 777 0018 084B     		ldr	r3, .L82+4
 778 001a 1A68     		ldr	r2, [r3]
 779              	.LVL55:
 780              	.L80:
 798:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     }
 799:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 800:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* Subtract ADC offset */
 801:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     adcCounts -= JoyStickADC_SAR_offset;
 781              		.loc 1 801 0
 782 001c 084B     		ldr	r3, .L82+8
 783 001e 1C88     		ldrh	r4, [r3]
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 30


 784 0020 041B     		subs	r4, r0, r4
 785              	.LVL56:
 802:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 803:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     *  on 10 million and later divide on gain in counts per 10V.
 804:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     */
 805:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     uVolts = (( (int64)adcCounts * JoyStickADC_SAR_10UV_COUNTS ) / countsPer10Volt);
 786              		.loc 1 805 0
 787 0022 24B2     		sxth	r4, r4
 788 0024 E517     		asrs	r5, r4, #31
 789 0026 074B     		ldr	r3, .L82+12
 790 0028 A4FB0301 		umull	r0, r1, r4, r3
 791 002c 03FB0511 		mla	r1, r3, r5, r1
 792 0030 D317     		asrs	r3, r2, #31
 793 0032 FFF7FEFF 		bl	__aeabi_ldivmod
 794              	.LVL57:
 806:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 807:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     return((int32) uVolts );
 808:Generated_Source\PSoC5/JoyStickADC_SAR.c **** }
 795              		.loc 1 808 0
 796 0036 38BD     		pop	{r3, r4, r5, pc}
 797              	.LVL58:
 798              	.L83:
 799              		.align	2
 800              	.L82:
 801 0038 00000000 		.word	JoyStickADC_SAR_countsPerVolt
 802 003c 00000000 		.word	JoyStickADC_SAR_countsPer10Volt
 803 0040 00000000 		.word	JoyStickADC_SAR_offset
 804 0044 80969800 		.word	10000000
 805              		.cfi_endproc
 806              	.LFE16:
 807              		.size	JoyStickADC_SAR_CountsTo_uVolts, .-JoyStickADC_SAR_CountsTo_uVolts
 808              		.global	__aeabi_i2f
 809              		.global	__aeabi_fmul
 810              		.global	__aeabi_fdiv
 811              		.section	.text.JoyStickADC_SAR_CountsTo_Volts,"ax",%progbits
 812              		.align	2
 813              		.global	JoyStickADC_SAR_CountsTo_Volts
 814              		.thumb
 815              		.thumb_func
 816              		.type	JoyStickADC_SAR_CountsTo_Volts, %function
 817              	JoyStickADC_SAR_CountsTo_Volts:
 818              	.LFB17:
 809:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 810:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 811:Generated_Source\PSoC5/JoyStickADC_SAR.c **** /*******************************************************************************
 812:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Function Name: JoyStickADC_SAR_CountsTo_Volts
 813:Generated_Source\PSoC5/JoyStickADC_SAR.c **** ********************************************************************************
 814:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 815:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Summary:
 816:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  Converts the ADC output to volts as a floating-point number.
 817:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 818:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Parameters:
 819:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  int16 adcCounts: Result from the ADC conversion
 820:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 821:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Return:
 822:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  float Result in Volts
 823:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 31


 824:Generated_Source\PSoC5/JoyStickADC_SAR.c **** * Global Variables:
 825:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  JoyStickADC_SAR_offset variable used.
 826:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *  JoyStickADC_SAR_countsPer10Volt used to convert ADC counts to Volts.
 827:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *
 828:Generated_Source\PSoC5/JoyStickADC_SAR.c **** *******************************************************************************/
 829:Generated_Source\PSoC5/JoyStickADC_SAR.c **** float32 JoyStickADC_SAR_CountsTo_Volts(int16 adcCounts)
 830:Generated_Source\PSoC5/JoyStickADC_SAR.c **** {
 819              		.loc 1 830 0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 0
 822              		@ frame_needed = 0, uses_anonymous_args = 0
 823              	.LVL59:
 824 0000 38B5     		push	{r3, r4, r5, lr}
 825              		.cfi_def_cfa_offset 16
 826              		.cfi_offset 3, -16
 827              		.cfi_offset 4, -12
 828              		.cfi_offset 5, -8
 829              		.cfi_offset 14, -4
 831:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     float32 volts;
 832:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     int32 countsPer10Volt;
 833:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 834:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     if(JoyStickADC_SAR_countsPerVolt != 0)
 830              		.loc 1 834 0
 831 0002 0F4B     		ldr	r3, .L88
 832 0004 1B88     		ldrh	r3, [r3]
 833 0006 1BB2     		sxth	r3, r3
 834 0008 33B1     		cbz	r3, .L85
 835:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     {   /* Support obsolete method */
 836:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         countsPer10Volt = (int32)JoyStickADC_SAR_countsPerVolt * 10;
 835              		.loc 1 836 0
 836 000a 0D4B     		ldr	r3, .L88
 837 000c 1B88     		ldrh	r3, [r3]
 838 000e 1BB2     		sxth	r3, r3
 839 0010 03EB8303 		add	r3, r3, r3, lsl #2
 840 0014 5C00     		lsls	r4, r3, #1
 841              	.LVL60:
 842 0016 01E0     		b	.L86
 843              	.LVL61:
 844              	.L85:
 837:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     }
 838:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     else
 839:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     {
 840:Generated_Source\PSoC5/JoyStickADC_SAR.c ****         countsPer10Volt = JoyStickADC_SAR_countsPer10Volt;
 845              		.loc 1 840 0
 846 0018 0A4B     		ldr	r3, .L88+4
 847 001a 1C68     		ldr	r4, [r3]
 848              	.LVL62:
 849              	.L86:
 841:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     }
 842:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 843:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     /* Subtract ADC offset */
 844:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     adcCounts -= JoyStickADC_SAR_offset;
 850              		.loc 1 844 0
 851 001c 0A4B     		ldr	r3, .L88+8
 852 001e 1B88     		ldrh	r3, [r3]
 853 0020 C01A     		subs	r0, r0, r3
 854              	.LVL63:
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 32


 845:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 846:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     volts = ((float32)adcCounts * JoyStickADC_SAR_10V_COUNTS) / (float32)countsPer10Volt;
 855              		.loc 1 846 0
 856 0022 00B2     		sxth	r0, r0
 857 0024 FFF7FEFF 		bl	__aeabi_i2f
 858              	.LVL64:
 859 0028 0849     		ldr	r1, .L88+12
 860 002a FFF7FEFF 		bl	__aeabi_fmul
 861              	.LVL65:
 862 002e 0546     		mov	r5, r0
 863 0030 2046     		mov	r0, r4
 864 0032 FFF7FEFF 		bl	__aeabi_i2f
 865              	.LVL66:
 866 0036 0146     		mov	r1, r0
 867 0038 2846     		mov	r0, r5
 868 003a FFF7FEFF 		bl	__aeabi_fdiv
 869              	.LVL67:
 847:Generated_Source\PSoC5/JoyStickADC_SAR.c **** 
 848:Generated_Source\PSoC5/JoyStickADC_SAR.c ****     return( volts );
 849:Generated_Source\PSoC5/JoyStickADC_SAR.c **** }
 870              		.loc 1 849 0
 871 003e 38BD     		pop	{r3, r4, r5, pc}
 872              	.LVL68:
 873              	.L89:
 874              		.align	2
 875              	.L88:
 876 0040 00000000 		.word	JoyStickADC_SAR_countsPerVolt
 877 0044 00000000 		.word	JoyStickADC_SAR_countsPer10Volt
 878 0048 00000000 		.word	JoyStickADC_SAR_offset
 879 004c 00002041 		.word	1092616192
 880              		.cfi_endproc
 881              	.LFE17:
 882              		.size	JoyStickADC_SAR_CountsTo_Volts, .-JoyStickADC_SAR_CountsTo_Volts
 883              		.comm	JoyStickADC_SAR_shift,2,2
 884              		.comm	JoyStickADC_SAR_countsPer10Volt,4,4
 885              		.comm	JoyStickADC_SAR_countsPerVolt,2,2
 886              		.comm	JoyStickADC_SAR_offset,2,2
 887              		.global	JoyStickADC_SAR_initVar
 888              		.bss
 889              		.set	.LANCHOR0,. + 0
 890              		.type	JoyStickADC_SAR_initVar, %object
 891              		.size	JoyStickADC_SAR_initVar, 1
 892              	JoyStickADC_SAR_initVar:
 893 0000 00       		.space	1
 894              		.text
 895              	.Letext0:
 896              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 897              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 898              		.section	.debug_info,"",%progbits
 899              	.Ldebug_info0:
 900 0000 40050000 		.4byte	0x540
 901 0004 0400     		.2byte	0x4
 902 0006 00000000 		.4byte	.Ldebug_abbrev0
 903 000a 04       		.byte	0x4
 904 000b 01       		.uleb128 0x1
 905 000c 5A030000 		.4byte	.LASF61
 906 0010 0C       		.byte	0xc
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 33


 907 0011 9E010000 		.4byte	.LASF62
 908 0015 60040000 		.4byte	.LASF63
 909 0019 00000000 		.4byte	.Ldebug_ranges0+0
 910 001d 00000000 		.4byte	0
 911 0021 00000000 		.4byte	.Ldebug_line0
 912 0025 02       		.uleb128 0x2
 913 0026 04       		.byte	0x4
 914 0027 05       		.byte	0x5
 915 0028 696E7400 		.ascii	"int\000"
 916 002c 03       		.uleb128 0x3
 917 002d 04       		.byte	0x4
 918 002e 07       		.byte	0x7
 919 002f 8A010000 		.4byte	.LASF0
 920 0033 03       		.uleb128 0x3
 921 0034 08       		.byte	0x8
 922 0035 05       		.byte	0x5
 923 0036 C4000000 		.4byte	.LASF1
 924 003a 03       		.uleb128 0x3
 925 003b 08       		.byte	0x8
 926 003c 04       		.byte	0x4
 927 003d AB020000 		.4byte	.LASF2
 928 0041 03       		.uleb128 0x3
 929 0042 01       		.byte	0x1
 930 0043 06       		.byte	0x6
 931 0044 D2000000 		.4byte	.LASF3
 932 0048 03       		.uleb128 0x3
 933 0049 01       		.byte	0x1
 934 004a 08       		.byte	0x8
 935 004b 22030000 		.4byte	.LASF4
 936 004f 03       		.uleb128 0x3
 937 0050 02       		.byte	0x2
 938 0051 05       		.byte	0x5
 939 0052 50030000 		.4byte	.LASF5
 940 0056 03       		.uleb128 0x3
 941 0057 02       		.byte	0x2
 942 0058 07       		.byte	0x7
 943 0059 4C020000 		.4byte	.LASF6
 944 005d 03       		.uleb128 0x3
 945 005e 04       		.byte	0x4
 946 005f 05       		.byte	0x5
 947 0060 E4000000 		.4byte	.LASF7
 948 0064 03       		.uleb128 0x3
 949 0065 04       		.byte	0x4
 950 0066 07       		.byte	0x7
 951 0067 C7010000 		.4byte	.LASF8
 952 006b 03       		.uleb128 0x3
 953 006c 08       		.byte	0x8
 954 006d 07       		.byte	0x7
 955 006e 61000000 		.4byte	.LASF9
 956 0072 03       		.uleb128 0x3
 957 0073 04       		.byte	0x4
 958 0074 07       		.byte	0x7
 959 0075 A2020000 		.4byte	.LASF10
 960 0079 03       		.uleb128 0x3
 961 007a 01       		.byte	0x1
 962 007b 08       		.byte	0x8
 963 007c 10040000 		.4byte	.LASF11
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 34


 964 0080 04       		.uleb128 0x4
 965 0081 08010000 		.4byte	.LASF12
 966 0085 02       		.byte	0x2
 967 0086 9201     		.2byte	0x192
 968 0088 48000000 		.4byte	0x48
 969 008c 04       		.uleb128 0x4
 970 008d 00000000 		.4byte	.LASF13
 971 0091 02       		.byte	0x2
 972 0092 9301     		.2byte	0x193
 973 0094 56000000 		.4byte	0x56
 974 0098 04       		.uleb128 0x4
 975 0099 5F020000 		.4byte	.LASF14
 976 009d 02       		.byte	0x2
 977 009e 9501     		.2byte	0x195
 978 00a0 41000000 		.4byte	0x41
 979 00a4 04       		.uleb128 0x4
 980 00a5 5A040000 		.4byte	.LASF15
 981 00a9 02       		.byte	0x2
 982 00aa 9601     		.2byte	0x196
 983 00ac 4F000000 		.4byte	0x4f
 984 00b0 04       		.uleb128 0x4
 985 00b1 DE000000 		.4byte	.LASF16
 986 00b5 02       		.byte	0x2
 987 00b6 9701     		.2byte	0x197
 988 00b8 5D000000 		.4byte	0x5d
 989 00bc 04       		.uleb128 0x4
 990 00bd 9A020000 		.4byte	.LASF17
 991 00c1 02       		.byte	0x2
 992 00c2 9801     		.2byte	0x198
 993 00c4 C8000000 		.4byte	0xc8
 994 00c8 03       		.uleb128 0x3
 995 00c9 04       		.byte	0x4
 996 00ca 04       		.byte	0x4
 997 00cb F4020000 		.4byte	.LASF18
 998 00cf 03       		.uleb128 0x3
 999 00d0 08       		.byte	0x8
 1000 00d1 04       		.byte	0x4
 1001 00d2 18010000 		.4byte	.LASF19
 1002 00d6 04       		.uleb128 0x4
 1003 00d7 D5020000 		.4byte	.LASF20
 1004 00db 02       		.byte	0x2
 1005 00dc 9D01     		.2byte	0x19d
 1006 00de 33000000 		.4byte	0x33
 1007 00e2 04       		.uleb128 0x4
 1008 00e3 16030000 		.4byte	.LASF21
 1009 00e7 02       		.byte	0x2
 1010 00e8 3C02     		.2byte	0x23c
 1011 00ea EE000000 		.4byte	0xee
 1012 00ee 05       		.uleb128 0x5
 1013 00ef 80000000 		.4byte	0x80
 1014 00f3 04       		.uleb128 0x4
 1015 00f4 02010000 		.4byte	.LASF22
 1016 00f8 02       		.byte	0x2
 1017 00f9 3D02     		.2byte	0x23d
 1018 00fb FF000000 		.4byte	0xff
 1019 00ff 05       		.uleb128 0x5
 1020 0100 8C000000 		.4byte	0x8c
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 35


 1021 0104 06       		.uleb128 0x6
 1022 0105 DB020000 		.4byte	.LASF64
 1023 0109 01       		.byte	0x1
 1024 010a 6302     		.2byte	0x263
 1025 010c 00000000 		.4byte	.LFB12
 1026 0110 5C000000 		.4byte	.LFE12-.LFB12
 1027 0114 01       		.uleb128 0x1
 1028 0115 9C       		.byte	0x9c
 1029 0116 4A010000 		.4byte	0x14a
 1030 011a 07       		.uleb128 0x7
 1031 011b E8030000 		.4byte	.LASF29
 1032 011f 01       		.byte	0x1
 1033 0120 6302     		.2byte	0x263
 1034 0122 80000000 		.4byte	0x80
 1035 0126 00000000 		.4byte	.LLST0
 1036 012a 08       		.uleb128 0x8
 1037 012b 25000000 		.4byte	.LASF23
 1038 012f 01       		.byte	0x1
 1039 0130 6502     		.2byte	0x265
 1040 0132 B0000000 		.4byte	0xb0
 1041 0136 3A000000 		.4byte	.LLST1
 1042 013a 09       		.uleb128 0x9
 1043 013b 22000000 		.4byte	.LVL4
 1044 013f 17050000 		.4byte	0x517
 1045 0143 0A       		.uleb128 0xa
 1046 0144 01       		.uleb128 0x1
 1047 0145 50       		.byte	0x50
 1048 0146 01       		.uleb128 0x1
 1049 0147 30       		.byte	0x30
 1050 0148 00       		.byte	0
 1051 0149 00       		.byte	0
 1052 014a 0B       		.uleb128 0xb
 1053 014b 83020000 		.4byte	.LASF26
 1054 014f 01       		.byte	0x1
 1055 0150 8F       		.byte	0x8f
 1056 0151 00000000 		.4byte	.LFB2
 1057 0155 7C000000 		.4byte	.LFE2-.LFB2
 1058 0159 01       		.uleb128 0x1
 1059 015a 9C       		.byte	0x9c
 1060 015b AA010000 		.4byte	0x1aa
 1061 015f 0C       		.uleb128 0xc
 1062 0160 F9040000 		.4byte	.LASF24
 1063 0164 01       		.byte	0x1
 1064 0165 91       		.byte	0x91
 1065 0166 80000000 		.4byte	0x80
 1066 016a 67000000 		.4byte	.LLST2
 1067 016e 0C       		.uleb128 0xc
 1068 016f 26040000 		.4byte	.LASF25
 1069 0173 01       		.byte	0x1
 1070 0174 92       		.byte	0x92
 1071 0175 80000000 		.4byte	0x80
 1072 0179 98000000 		.4byte	.LLST3
 1073 017d 0D       		.uleb128 0xd
 1074 017e 06000000 		.4byte	.LVL8
 1075 0182 22050000 		.4byte	0x522
 1076 0186 0E       		.uleb128 0xe
 1077 0187 66000000 		.4byte	.LVL15
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 36


 1078 018b 2D050000 		.4byte	0x52d
 1079 018f 99010000 		.4byte	0x199
 1080 0193 0A       		.uleb128 0xa
 1081 0194 01       		.uleb128 0x1
 1082 0195 50       		.byte	0x50
 1083 0196 01       		.uleb128 0x1
 1084 0197 3A       		.byte	0x3a
 1085 0198 00       		.byte	0
 1086 0199 09       		.uleb128 0x9
 1087 019a 6C000000 		.4byte	.LVL16
 1088 019e 38050000 		.4byte	0x538
 1089 01a2 0A       		.uleb128 0xa
 1090 01a3 01       		.uleb128 0x1
 1091 01a4 50       		.byte	0x50
 1092 01a5 02       		.uleb128 0x2
 1093 01a6 74       		.byte	0x74
 1094 01a7 00       		.sleb128 0
 1095 01a8 00       		.byte	0
 1096 01a9 00       		.byte	0
 1097 01aa 0B       		.uleb128 0xb
 1098 01ab ED000000 		.4byte	.LASF27
 1099 01af 01       		.byte	0x1
 1100 01b0 F8       		.byte	0xf8
 1101 01b1 00000000 		.4byte	.LFB3
 1102 01b5 34000000 		.4byte	.LFE3-.LFB3
 1103 01b9 01       		.uleb128 0x1
 1104 01ba 9C       		.byte	0x9c
 1105 01bb E1010000 		.4byte	0x1e1
 1106 01bf 0C       		.uleb128 0xc
 1107 01c0 26040000 		.4byte	.LASF25
 1108 01c4 01       		.byte	0x1
 1109 01c5 FA       		.byte	0xfa
 1110 01c6 80000000 		.4byte	0x80
 1111 01ca AB000000 		.4byte	.LLST4
 1112 01ce 0D       		.uleb128 0xd
 1113 01cf 06000000 		.4byte	.LVL18
 1114 01d3 22050000 		.4byte	0x522
 1115 01d7 0D       		.uleb128 0xd
 1116 01d8 2C000000 		.4byte	.LVL19
 1117 01dc 38050000 		.4byte	0x538
 1118 01e0 00       		.byte	0
 1119 01e1 0F       		.uleb128 0xf
 1120 01e2 90000000 		.4byte	.LASF28
 1121 01e6 01       		.byte	0x1
 1122 01e7 2201     		.2byte	0x122
 1123 01e9 00000000 		.4byte	.LFB4
 1124 01ed 18000000 		.4byte	.LFE4-.LFB4
 1125 01f1 01       		.uleb128 0x1
 1126 01f2 9C       		.byte	0x9c
 1127 01f3 18020000 		.4byte	0x218
 1128 01f7 07       		.uleb128 0x7
 1129 01f8 10030000 		.4byte	.LASF30
 1130 01fc 01       		.byte	0x1
 1131 01fd 2201     		.2byte	0x122
 1132 01ff 80000000 		.4byte	0x80
 1133 0203 BE000000 		.4byte	.LLST5
 1134 0207 08       		.uleb128 0x8
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 37


 1135 0208 F9040000 		.4byte	.LASF24
 1136 020c 01       		.byte	0x1
 1137 020d 2401     		.2byte	0x124
 1138 020f 80000000 		.4byte	0x80
 1139 0213 F0000000 		.4byte	.LLST6
 1140 0217 00       		.byte	0
 1141 0218 0F       		.uleb128 0xf
 1142 0219 10020000 		.4byte	.LASF31
 1143 021d 01       		.byte	0x1
 1144 021e 5401     		.2byte	0x154
 1145 0220 00000000 		.4byte	.LFB5
 1146 0224 38000000 		.4byte	.LFE5-.LFB5
 1147 0228 01       		.uleb128 0x1
 1148 0229 9C       		.byte	0x9c
 1149 022a 72020000 		.4byte	0x272
 1150 022e 07       		.uleb128 0x7
 1151 022f E8030000 		.4byte	.LASF29
 1152 0233 01       		.byte	0x1
 1153 0234 5401     		.2byte	0x154
 1154 0236 80000000 		.4byte	0x80
 1155 023a 0E010000 		.4byte	.LLST7
 1156 023e 08       		.uleb128 0x8
 1157 023f F9040000 		.4byte	.LASF24
 1158 0243 01       		.byte	0x1
 1159 0244 5601     		.2byte	0x156
 1160 0246 80000000 		.4byte	0x80
 1161 024a 48010000 		.4byte	.LLST8
 1162 024e 0E       		.uleb128 0xe
 1163 024f 20000000 		.4byte	.LVL28
 1164 0253 17050000 		.4byte	0x517
 1165 0257 61020000 		.4byte	0x261
 1166 025b 0A       		.uleb128 0xa
 1167 025c 01       		.uleb128 0x1
 1168 025d 50       		.byte	0x50
 1169 025e 01       		.uleb128 0x1
 1170 025f 30       		.byte	0x30
 1171 0260 00       		.byte	0
 1172 0261 09       		.uleb128 0x9
 1173 0262 30000000 		.4byte	.LVL31
 1174 0266 04010000 		.4byte	0x104
 1175 026a 0A       		.uleb128 0xa
 1176 026b 01       		.uleb128 0x1
 1177 026c 50       		.byte	0x50
 1178 026d 02       		.uleb128 0x2
 1179 026e 74       		.byte	0x74
 1180 026f 00       		.sleb128 0
 1181 0270 00       		.byte	0
 1182 0271 00       		.byte	0
 1183 0272 0B       		.uleb128 0xb
 1184 0273 2C000000 		.4byte	.LASF32
 1185 0277 01       		.byte	0x1
 1186 0278 6A       		.byte	0x6a
 1187 0279 00000000 		.4byte	.LFB1
 1188 027d 24000000 		.4byte	.LFE1-.LFB1
 1189 0281 01       		.uleb128 0x1
 1190 0282 9C       		.byte	0x9c
 1191 0283 97020000 		.4byte	0x297
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 38


 1192 0287 09       		.uleb128 0x9
 1193 0288 12000000 		.4byte	.LVL32
 1194 028c 18020000 		.4byte	0x218
 1195 0290 0A       		.uleb128 0xa
 1196 0291 01       		.uleb128 0x1
 1197 0292 50       		.byte	0x50
 1198 0293 01       		.uleb128 0x1
 1199 0294 38       		.byte	0x38
 1200 0295 00       		.byte	0
 1201 0296 00       		.byte	0
 1202 0297 0B       		.uleb128 0xb
 1203 0298 FA020000 		.4byte	.LASF33
 1204 029c 01       		.byte	0x1
 1205 029d 4A       		.byte	0x4a
 1206 029e 00000000 		.4byte	.LFB0
 1207 02a2 1C000000 		.4byte	.LFE0-.LFB0
 1208 02a6 01       		.uleb128 0x1
 1209 02a7 9C       		.byte	0x9c
 1210 02a8 BF020000 		.4byte	0x2bf
 1211 02ac 0D       		.uleb128 0xd
 1212 02ad 0C000000 		.4byte	.LVL33
 1213 02b1 72020000 		.4byte	0x272
 1214 02b5 0D       		.uleb128 0xd
 1215 02b6 16000000 		.4byte	.LVL34
 1216 02ba 4A010000 		.4byte	0x14a
 1217 02be 00       		.byte	0
 1218 02bf 10       		.uleb128 0x10
 1219 02c0 F3030000 		.4byte	.LASF34
 1220 02c4 01       		.byte	0x1
 1221 02c5 9101     		.2byte	0x191
 1222 02c7 00000000 		.4byte	.LFB6
 1223 02cb 10000000 		.4byte	.LFE6-.LFB6
 1224 02cf 01       		.uleb128 0x1
 1225 02d0 9C       		.byte	0x9c
 1226 02d1 10       		.uleb128 0x10
 1227 02d2 2F010000 		.4byte	.LASF35
 1228 02d6 01       		.byte	0x1
 1229 02d7 B301     		.2byte	0x1b3
 1230 02d9 00000000 		.4byte	.LFB7
 1231 02dd 10000000 		.4byte	.LFE7-.LFB7
 1232 02e1 01       		.uleb128 0x1
 1233 02e2 9C       		.byte	0x9c
 1234 02e3 11       		.uleb128 0x11
 1235 02e4 00050000 		.4byte	.LASF38
 1236 02e8 01       		.byte	0x1
 1237 02e9 DB01     		.2byte	0x1db
 1238 02eb 80000000 		.4byte	0x80
 1239 02ef 00000000 		.4byte	.LFB8
 1240 02f3 24000000 		.4byte	.LFE8-.LFB8
 1241 02f7 01       		.uleb128 0x1
 1242 02f8 9C       		.byte	0x9c
 1243 02f9 2D030000 		.4byte	0x32d
 1244 02fd 07       		.uleb128 0x7
 1245 02fe 62010000 		.4byte	.LASF36
 1246 0302 01       		.byte	0x1
 1247 0303 DB01     		.2byte	0x1db
 1248 0305 80000000 		.4byte	0x80
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 39


 1249 0309 75010000 		.4byte	.LLST9
 1250 030d 08       		.uleb128 0x8
 1251 030e 53040000 		.4byte	.LASF37
 1252 0312 01       		.byte	0x1
 1253 0313 DD01     		.2byte	0x1dd
 1254 0315 80000000 		.4byte	0x80
 1255 0319 96010000 		.4byte	.LLST10
 1256 031d 09       		.uleb128 0x9
 1257 031e 18000000 		.4byte	.LVL38
 1258 0322 2D050000 		.4byte	0x52d
 1259 0326 0A       		.uleb128 0xa
 1260 0327 01       		.uleb128 0x1
 1261 0328 50       		.byte	0x50
 1262 0329 01       		.uleb128 0x1
 1263 032a 31       		.byte	0x31
 1264 032b 00       		.byte	0
 1265 032c 00       		.byte	0
 1266 032d 12       		.uleb128 0x12
 1267 032e A9000000 		.4byte	.LASF65
 1268 0332 01       		.byte	0x1
 1269 0333 0802     		.2byte	0x208
 1270 0335 98000000 		.4byte	0x98
 1271 0339 00000000 		.4byte	.LFB9
 1272 033d 18000000 		.4byte	.LFE9-.LFB9
 1273 0341 01       		.uleb128 0x1
 1274 0342 9C       		.byte	0x9c
 1275 0343 11       		.uleb128 0x11
 1276 0344 37040000 		.4byte	.LASF39
 1277 0348 01       		.byte	0x1
 1278 0349 2602     		.2byte	0x226
 1279 034b A4000000 		.4byte	0xa4
 1280 034f 00000000 		.4byte	.LFB10
 1281 0353 18000000 		.4byte	.LFE10-.LFB10
 1282 0357 01       		.uleb128 0x1
 1283 0358 9C       		.byte	0x9c
 1284 0359 6E030000 		.4byte	0x36e
 1285 035d 13       		.uleb128 0x13
 1286 035e 72657300 		.ascii	"res\000"
 1287 0362 01       		.byte	0x1
 1288 0363 2802     		.2byte	0x228
 1289 0365 8C000000 		.4byte	0x8c
 1290 0369 AD010000 		.4byte	.LLST11
 1291 036d 00       		.byte	0
 1292 036e 0F       		.uleb128 0xf
 1293 036f D9010000 		.4byte	.LASF40
 1294 0373 01       		.byte	0x1
 1295 0374 4902     		.2byte	0x249
 1296 0376 00000000 		.4byte	.LFB11
 1297 037a 0C000000 		.4byte	.LFE11-.LFB11
 1298 037e 01       		.uleb128 0x1
 1299 037f 9C       		.byte	0x9c
 1300 0380 93030000 		.4byte	0x393
 1301 0384 14       		.uleb128 0x14
 1302 0385 15040000 		.4byte	.LASF41
 1303 0389 01       		.byte	0x1
 1304 038a 4902     		.2byte	0x249
 1305 038c A4000000 		.4byte	0xa4
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 40


 1306 0390 01       		.uleb128 0x1
 1307 0391 50       		.byte	0x50
 1308 0392 00       		.byte	0
 1309 0393 0F       		.uleb128 0xf
 1310 0394 64020000 		.4byte	.LASF42
 1311 0398 01       		.byte	0x1
 1312 0399 B402     		.2byte	0x2b4
 1313 039b 00000000 		.4byte	.LFB13
 1314 039f 10000000 		.4byte	.LFE13-.LFB13
 1315 03a3 01       		.uleb128 0x1
 1316 03a4 9C       		.byte	0x9c
 1317 03a5 BA030000 		.4byte	0x3ba
 1318 03a9 07       		.uleb128 0x7
 1319 03aa 07000000 		.4byte	.LASF43
 1320 03ae 01       		.byte	0x1
 1321 03af B402     		.2byte	0x2b4
 1322 03b1 A4000000 		.4byte	0xa4
 1323 03b5 C0010000 		.4byte	.LLST12
 1324 03b9 00       		.byte	0
 1325 03ba 0F       		.uleb128 0xf
 1326 03bb B7020000 		.4byte	.LASF44
 1327 03bf 01       		.byte	0x1
 1328 03c0 CF02     		.2byte	0x2cf
 1329 03c2 00000000 		.4byte	.LFB14
 1330 03c6 0C000000 		.4byte	.LFE14-.LFB14
 1331 03ca 01       		.uleb128 0x1
 1332 03cb 9C       		.byte	0x9c
 1333 03cc DF030000 		.4byte	0x3df
 1334 03d0 14       		.uleb128 0x14
 1335 03d1 07000000 		.4byte	.LASF43
 1336 03d5 01       		.byte	0x1
 1337 03d6 CF02     		.2byte	0x2cf
 1338 03d8 B0000000 		.4byte	0xb0
 1339 03dc 01       		.uleb128 0x1
 1340 03dd 50       		.byte	0x50
 1341 03de 00       		.byte	0
 1342 03df 11       		.uleb128 0x11
 1343 03e0 41000000 		.4byte	.LASF45
 1344 03e4 01       		.byte	0x1
 1345 03e5 E702     		.2byte	0x2e7
 1346 03e7 A4000000 		.4byte	0xa4
 1347 03eb 00000000 		.4byte	.LFB15
 1348 03ef 58000000 		.4byte	.LFE15-.LFB15
 1349 03f3 01       		.uleb128 0x1
 1350 03f4 9C       		.byte	0x9c
 1351 03f5 28040000 		.4byte	0x428
 1352 03f9 07       		.uleb128 0x7
 1353 03fa 1C040000 		.4byte	.LASF46
 1354 03fe 01       		.byte	0x1
 1355 03ff E702     		.2byte	0x2e7
 1356 0401 A4000000 		.4byte	0xa4
 1357 0405 E1010000 		.4byte	.LLST13
 1358 0409 15       		.uleb128 0x15
 1359 040a 7C020000 		.4byte	.LASF47
 1360 040e 01       		.byte	0x1
 1361 040f E902     		.2byte	0x2e9
 1362 0411 A4000000 		.4byte	0xa4
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 41


 1363 0415 01       		.uleb128 0x1
 1364 0416 50       		.byte	0x50
 1365 0417 08       		.uleb128 0x8
 1366 0418 1F010000 		.4byte	.LASF48
 1367 041c 01       		.byte	0x1
 1368 041d EA02     		.2byte	0x2ea
 1369 041f B0000000 		.4byte	0xb0
 1370 0423 FF010000 		.4byte	.LLST14
 1371 0427 00       		.byte	0
 1372 0428 16       		.uleb128 0x16
 1373 0429 30030000 		.4byte	.LASF49
 1374 042d 01       		.byte	0x1
 1375 042e 1103     		.2byte	0x311
 1376 0430 B0000000 		.4byte	0xb0
 1377 0434 00000000 		.4byte	.LFB16
 1378 0438 48000000 		.4byte	.LFE16-.LFB16
 1379 043c 01       		.uleb128 0x1
 1380 043d 9C       		.byte	0x9c
 1381 043e 6F040000 		.4byte	0x46f
 1382 0442 07       		.uleb128 0x7
 1383 0443 1C040000 		.4byte	.LASF46
 1384 0447 01       		.byte	0x1
 1385 0448 1103     		.2byte	0x311
 1386 044a A4000000 		.4byte	0xa4
 1387 044e 1D020000 		.4byte	.LLST15
 1388 0452 17       		.uleb128 0x17
 1389 0453 97010000 		.4byte	.LASF66
 1390 0457 01       		.byte	0x1
 1391 0458 1403     		.2byte	0x314
 1392 045a D6000000 		.4byte	0xd6
 1393 045e 08       		.uleb128 0x8
 1394 045f 1F010000 		.4byte	.LASF48
 1395 0463 01       		.byte	0x1
 1396 0464 1503     		.2byte	0x315
 1397 0466 B0000000 		.4byte	0xb0
 1398 046a 3B020000 		.4byte	.LLST16
 1399 046e 00       		.byte	0
 1400 046f 16       		.uleb128 0x16
 1401 0470 DA040000 		.4byte	.LASF50
 1402 0474 01       		.byte	0x1
 1403 0475 3D03     		.2byte	0x33d
 1404 0477 BC000000 		.4byte	0xbc
 1405 047b 00000000 		.4byte	.LFB17
 1406 047f 50000000 		.4byte	.LFE17-.LFB17
 1407 0483 01       		.uleb128 0x1
 1408 0484 9C       		.byte	0x9c
 1409 0485 B8040000 		.4byte	0x4b8
 1410 0489 07       		.uleb128 0x7
 1411 048a 1C040000 		.4byte	.LASF46
 1412 048e 01       		.byte	0x1
 1413 048f 3D03     		.2byte	0x33d
 1414 0491 A4000000 		.4byte	0xa4
 1415 0495 59020000 		.4byte	.LLST17
 1416 0499 15       		.uleb128 0x15
 1417 049a F3010000 		.4byte	.LASF51
 1418 049e 01       		.byte	0x1
 1419 049f 3F03     		.2byte	0x33f
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 42


 1420 04a1 BC000000 		.4byte	0xbc
 1421 04a5 01       		.uleb128 0x1
 1422 04a6 50       		.byte	0x50
 1423 04a7 08       		.uleb128 0x8
 1424 04a8 1F010000 		.4byte	.LASF48
 1425 04ac 01       		.byte	0x1
 1426 04ad 4003     		.2byte	0x340
 1427 04af B0000000 		.4byte	0xb0
 1428 04b3 77020000 		.4byte	.LLST18
 1429 04b7 00       		.byte	0
 1430 04b8 18       		.uleb128 0x18
 1431 04b9 78000000 		.4byte	.LASF52
 1432 04bd 01       		.byte	0x1
 1433 04be 23       		.byte	0x23
 1434 04bf 80000000 		.4byte	0x80
 1435 04c3 05       		.uleb128 0x5
 1436 04c4 03       		.byte	0x3
 1437 04c5 00000000 		.4byte	JoyStickADC_SAR_initVar
 1438 04c9 18       		.uleb128 0x18
 1439 04ca 4B010000 		.4byte	.LASF53
 1440 04ce 01       		.byte	0x1
 1441 04cf 24       		.byte	0x24
 1442 04d0 DA040000 		.4byte	0x4da
 1443 04d4 05       		.uleb128 0x5
 1444 04d5 03       		.byte	0x3
 1445 04d6 00000000 		.4byte	JoyStickADC_SAR_offset
 1446 04da 05       		.uleb128 0x5
 1447 04db A4000000 		.4byte	0xa4
 1448 04df 18       		.uleb128 0x18
 1449 04e0 2E020000 		.4byte	.LASF54
 1450 04e4 01       		.byte	0x1
 1451 04e5 25       		.byte	0x25
 1452 04e6 DA040000 		.4byte	0x4da
 1453 04ea 05       		.uleb128 0x5
 1454 04eb 03       		.byte	0x3
 1455 04ec 00000000 		.4byte	JoyStickADC_SAR_countsPerVolt
 1456 04f0 18       		.uleb128 0x18
 1457 04f1 6A010000 		.4byte	.LASF55
 1458 04f5 01       		.byte	0x1
 1459 04f6 26       		.byte	0x26
 1460 04f7 01050000 		.4byte	0x501
 1461 04fb 05       		.uleb128 0x5
 1462 04fc 03       		.byte	0x3
 1463 04fd 00000000 		.4byte	JoyStickADC_SAR_countsPer10Volt
 1464 0501 05       		.uleb128 0x5
 1465 0502 B0000000 		.4byte	0xb0
 1466 0506 18       		.uleb128 0x18
 1467 0507 C4040000 		.4byte	.LASF56
 1468 050b 01       		.byte	0x1
 1469 050c 27       		.byte	0x27
 1470 050d DA040000 		.4byte	0x4da
 1471 0511 05       		.uleb128 0x5
 1472 0512 03       		.byte	0x3
 1473 0513 00000000 		.4byte	JoyStickADC_SAR_shift
 1474 0517 19       		.uleb128 0x19
 1475 0518 1B030000 		.4byte	.LASF57
 1476 051c 1B030000 		.4byte	.LASF57
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 43


 1477 0520 03       		.byte	0x3
 1478 0521 7F       		.byte	0x7f
 1479 0522 19       		.uleb128 0x19
 1480 0523 F9010000 		.4byte	.LASF58
 1481 0527 F9010000 		.4byte	.LASF58
 1482 052b 03       		.byte	0x3
 1483 052c 7D       		.byte	0x7d
 1484 052d 19       		.uleb128 0x19
 1485 052e 0E010000 		.4byte	.LASF59
 1486 0532 0E010000 		.4byte	.LASF59
 1487 0536 03       		.byte	0x3
 1488 0537 77       		.byte	0x77
 1489 0538 19       		.uleb128 0x19
 1490 0539 0F000000 		.4byte	.LASF60
 1491 053d 0F000000 		.4byte	.LASF60
 1492 0541 03       		.byte	0x3
 1493 0542 7E       		.byte	0x7e
 1494 0543 00       		.byte	0
 1495              		.section	.debug_abbrev,"",%progbits
 1496              	.Ldebug_abbrev0:
 1497 0000 01       		.uleb128 0x1
 1498 0001 11       		.uleb128 0x11
 1499 0002 01       		.byte	0x1
 1500 0003 25       		.uleb128 0x25
 1501 0004 0E       		.uleb128 0xe
 1502 0005 13       		.uleb128 0x13
 1503 0006 0B       		.uleb128 0xb
 1504 0007 03       		.uleb128 0x3
 1505 0008 0E       		.uleb128 0xe
 1506 0009 1B       		.uleb128 0x1b
 1507 000a 0E       		.uleb128 0xe
 1508 000b 55       		.uleb128 0x55
 1509 000c 17       		.uleb128 0x17
 1510 000d 11       		.uleb128 0x11
 1511 000e 01       		.uleb128 0x1
 1512 000f 10       		.uleb128 0x10
 1513 0010 17       		.uleb128 0x17
 1514 0011 00       		.byte	0
 1515 0012 00       		.byte	0
 1516 0013 02       		.uleb128 0x2
 1517 0014 24       		.uleb128 0x24
 1518 0015 00       		.byte	0
 1519 0016 0B       		.uleb128 0xb
 1520 0017 0B       		.uleb128 0xb
 1521 0018 3E       		.uleb128 0x3e
 1522 0019 0B       		.uleb128 0xb
 1523 001a 03       		.uleb128 0x3
 1524 001b 08       		.uleb128 0x8
 1525 001c 00       		.byte	0
 1526 001d 00       		.byte	0
 1527 001e 03       		.uleb128 0x3
 1528 001f 24       		.uleb128 0x24
 1529 0020 00       		.byte	0
 1530 0021 0B       		.uleb128 0xb
 1531 0022 0B       		.uleb128 0xb
 1532 0023 3E       		.uleb128 0x3e
 1533 0024 0B       		.uleb128 0xb
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 44


 1534 0025 03       		.uleb128 0x3
 1535 0026 0E       		.uleb128 0xe
 1536 0027 00       		.byte	0
 1537 0028 00       		.byte	0
 1538 0029 04       		.uleb128 0x4
 1539 002a 16       		.uleb128 0x16
 1540 002b 00       		.byte	0
 1541 002c 03       		.uleb128 0x3
 1542 002d 0E       		.uleb128 0xe
 1543 002e 3A       		.uleb128 0x3a
 1544 002f 0B       		.uleb128 0xb
 1545 0030 3B       		.uleb128 0x3b
 1546 0031 05       		.uleb128 0x5
 1547 0032 49       		.uleb128 0x49
 1548 0033 13       		.uleb128 0x13
 1549 0034 00       		.byte	0
 1550 0035 00       		.byte	0
 1551 0036 05       		.uleb128 0x5
 1552 0037 35       		.uleb128 0x35
 1553 0038 00       		.byte	0
 1554 0039 49       		.uleb128 0x49
 1555 003a 13       		.uleb128 0x13
 1556 003b 00       		.byte	0
 1557 003c 00       		.byte	0
 1558 003d 06       		.uleb128 0x6
 1559 003e 2E       		.uleb128 0x2e
 1560 003f 01       		.byte	0x1
 1561 0040 03       		.uleb128 0x3
 1562 0041 0E       		.uleb128 0xe
 1563 0042 3A       		.uleb128 0x3a
 1564 0043 0B       		.uleb128 0xb
 1565 0044 3B       		.uleb128 0x3b
 1566 0045 05       		.uleb128 0x5
 1567 0046 27       		.uleb128 0x27
 1568 0047 19       		.uleb128 0x19
 1569 0048 11       		.uleb128 0x11
 1570 0049 01       		.uleb128 0x1
 1571 004a 12       		.uleb128 0x12
 1572 004b 06       		.uleb128 0x6
 1573 004c 40       		.uleb128 0x40
 1574 004d 18       		.uleb128 0x18
 1575 004e 9742     		.uleb128 0x2117
 1576 0050 19       		.uleb128 0x19
 1577 0051 01       		.uleb128 0x1
 1578 0052 13       		.uleb128 0x13
 1579 0053 00       		.byte	0
 1580 0054 00       		.byte	0
 1581 0055 07       		.uleb128 0x7
 1582 0056 05       		.uleb128 0x5
 1583 0057 00       		.byte	0
 1584 0058 03       		.uleb128 0x3
 1585 0059 0E       		.uleb128 0xe
 1586 005a 3A       		.uleb128 0x3a
 1587 005b 0B       		.uleb128 0xb
 1588 005c 3B       		.uleb128 0x3b
 1589 005d 05       		.uleb128 0x5
 1590 005e 49       		.uleb128 0x49
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 45


 1591 005f 13       		.uleb128 0x13
 1592 0060 02       		.uleb128 0x2
 1593 0061 17       		.uleb128 0x17
 1594 0062 00       		.byte	0
 1595 0063 00       		.byte	0
 1596 0064 08       		.uleb128 0x8
 1597 0065 34       		.uleb128 0x34
 1598 0066 00       		.byte	0
 1599 0067 03       		.uleb128 0x3
 1600 0068 0E       		.uleb128 0xe
 1601 0069 3A       		.uleb128 0x3a
 1602 006a 0B       		.uleb128 0xb
 1603 006b 3B       		.uleb128 0x3b
 1604 006c 05       		.uleb128 0x5
 1605 006d 49       		.uleb128 0x49
 1606 006e 13       		.uleb128 0x13
 1607 006f 02       		.uleb128 0x2
 1608 0070 17       		.uleb128 0x17
 1609 0071 00       		.byte	0
 1610 0072 00       		.byte	0
 1611 0073 09       		.uleb128 0x9
 1612 0074 898201   		.uleb128 0x4109
 1613 0077 01       		.byte	0x1
 1614 0078 11       		.uleb128 0x11
 1615 0079 01       		.uleb128 0x1
 1616 007a 31       		.uleb128 0x31
 1617 007b 13       		.uleb128 0x13
 1618 007c 00       		.byte	0
 1619 007d 00       		.byte	0
 1620 007e 0A       		.uleb128 0xa
 1621 007f 8A8201   		.uleb128 0x410a
 1622 0082 00       		.byte	0
 1623 0083 02       		.uleb128 0x2
 1624 0084 18       		.uleb128 0x18
 1625 0085 9142     		.uleb128 0x2111
 1626 0087 18       		.uleb128 0x18
 1627 0088 00       		.byte	0
 1628 0089 00       		.byte	0
 1629 008a 0B       		.uleb128 0xb
 1630 008b 2E       		.uleb128 0x2e
 1631 008c 01       		.byte	0x1
 1632 008d 3F       		.uleb128 0x3f
 1633 008e 19       		.uleb128 0x19
 1634 008f 03       		.uleb128 0x3
 1635 0090 0E       		.uleb128 0xe
 1636 0091 3A       		.uleb128 0x3a
 1637 0092 0B       		.uleb128 0xb
 1638 0093 3B       		.uleb128 0x3b
 1639 0094 0B       		.uleb128 0xb
 1640 0095 27       		.uleb128 0x27
 1641 0096 19       		.uleb128 0x19
 1642 0097 11       		.uleb128 0x11
 1643 0098 01       		.uleb128 0x1
 1644 0099 12       		.uleb128 0x12
 1645 009a 06       		.uleb128 0x6
 1646 009b 40       		.uleb128 0x40
 1647 009c 18       		.uleb128 0x18
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 46


 1648 009d 9742     		.uleb128 0x2117
 1649 009f 19       		.uleb128 0x19
 1650 00a0 01       		.uleb128 0x1
 1651 00a1 13       		.uleb128 0x13
 1652 00a2 00       		.byte	0
 1653 00a3 00       		.byte	0
 1654 00a4 0C       		.uleb128 0xc
 1655 00a5 34       		.uleb128 0x34
 1656 00a6 00       		.byte	0
 1657 00a7 03       		.uleb128 0x3
 1658 00a8 0E       		.uleb128 0xe
 1659 00a9 3A       		.uleb128 0x3a
 1660 00aa 0B       		.uleb128 0xb
 1661 00ab 3B       		.uleb128 0x3b
 1662 00ac 0B       		.uleb128 0xb
 1663 00ad 49       		.uleb128 0x49
 1664 00ae 13       		.uleb128 0x13
 1665 00af 02       		.uleb128 0x2
 1666 00b0 17       		.uleb128 0x17
 1667 00b1 00       		.byte	0
 1668 00b2 00       		.byte	0
 1669 00b3 0D       		.uleb128 0xd
 1670 00b4 898201   		.uleb128 0x4109
 1671 00b7 00       		.byte	0
 1672 00b8 11       		.uleb128 0x11
 1673 00b9 01       		.uleb128 0x1
 1674 00ba 31       		.uleb128 0x31
 1675 00bb 13       		.uleb128 0x13
 1676 00bc 00       		.byte	0
 1677 00bd 00       		.byte	0
 1678 00be 0E       		.uleb128 0xe
 1679 00bf 898201   		.uleb128 0x4109
 1680 00c2 01       		.byte	0x1
 1681 00c3 11       		.uleb128 0x11
 1682 00c4 01       		.uleb128 0x1
 1683 00c5 31       		.uleb128 0x31
 1684 00c6 13       		.uleb128 0x13
 1685 00c7 01       		.uleb128 0x1
 1686 00c8 13       		.uleb128 0x13
 1687 00c9 00       		.byte	0
 1688 00ca 00       		.byte	0
 1689 00cb 0F       		.uleb128 0xf
 1690 00cc 2E       		.uleb128 0x2e
 1691 00cd 01       		.byte	0x1
 1692 00ce 3F       		.uleb128 0x3f
 1693 00cf 19       		.uleb128 0x19
 1694 00d0 03       		.uleb128 0x3
 1695 00d1 0E       		.uleb128 0xe
 1696 00d2 3A       		.uleb128 0x3a
 1697 00d3 0B       		.uleb128 0xb
 1698 00d4 3B       		.uleb128 0x3b
 1699 00d5 05       		.uleb128 0x5
 1700 00d6 27       		.uleb128 0x27
 1701 00d7 19       		.uleb128 0x19
 1702 00d8 11       		.uleb128 0x11
 1703 00d9 01       		.uleb128 0x1
 1704 00da 12       		.uleb128 0x12
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 47


 1705 00db 06       		.uleb128 0x6
 1706 00dc 40       		.uleb128 0x40
 1707 00dd 18       		.uleb128 0x18
 1708 00de 9742     		.uleb128 0x2117
 1709 00e0 19       		.uleb128 0x19
 1710 00e1 01       		.uleb128 0x1
 1711 00e2 13       		.uleb128 0x13
 1712 00e3 00       		.byte	0
 1713 00e4 00       		.byte	0
 1714 00e5 10       		.uleb128 0x10
 1715 00e6 2E       		.uleb128 0x2e
 1716 00e7 00       		.byte	0
 1717 00e8 3F       		.uleb128 0x3f
 1718 00e9 19       		.uleb128 0x19
 1719 00ea 03       		.uleb128 0x3
 1720 00eb 0E       		.uleb128 0xe
 1721 00ec 3A       		.uleb128 0x3a
 1722 00ed 0B       		.uleb128 0xb
 1723 00ee 3B       		.uleb128 0x3b
 1724 00ef 05       		.uleb128 0x5
 1725 00f0 27       		.uleb128 0x27
 1726 00f1 19       		.uleb128 0x19
 1727 00f2 11       		.uleb128 0x11
 1728 00f3 01       		.uleb128 0x1
 1729 00f4 12       		.uleb128 0x12
 1730 00f5 06       		.uleb128 0x6
 1731 00f6 40       		.uleb128 0x40
 1732 00f7 18       		.uleb128 0x18
 1733 00f8 9742     		.uleb128 0x2117
 1734 00fa 19       		.uleb128 0x19
 1735 00fb 00       		.byte	0
 1736 00fc 00       		.byte	0
 1737 00fd 11       		.uleb128 0x11
 1738 00fe 2E       		.uleb128 0x2e
 1739 00ff 01       		.byte	0x1
 1740 0100 3F       		.uleb128 0x3f
 1741 0101 19       		.uleb128 0x19
 1742 0102 03       		.uleb128 0x3
 1743 0103 0E       		.uleb128 0xe
 1744 0104 3A       		.uleb128 0x3a
 1745 0105 0B       		.uleb128 0xb
 1746 0106 3B       		.uleb128 0x3b
 1747 0107 05       		.uleb128 0x5
 1748 0108 27       		.uleb128 0x27
 1749 0109 19       		.uleb128 0x19
 1750 010a 49       		.uleb128 0x49
 1751 010b 13       		.uleb128 0x13
 1752 010c 11       		.uleb128 0x11
 1753 010d 01       		.uleb128 0x1
 1754 010e 12       		.uleb128 0x12
 1755 010f 06       		.uleb128 0x6
 1756 0110 40       		.uleb128 0x40
 1757 0111 18       		.uleb128 0x18
 1758 0112 9742     		.uleb128 0x2117
 1759 0114 19       		.uleb128 0x19
 1760 0115 01       		.uleb128 0x1
 1761 0116 13       		.uleb128 0x13
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 48


 1762 0117 00       		.byte	0
 1763 0118 00       		.byte	0
 1764 0119 12       		.uleb128 0x12
 1765 011a 2E       		.uleb128 0x2e
 1766 011b 00       		.byte	0
 1767 011c 3F       		.uleb128 0x3f
 1768 011d 19       		.uleb128 0x19
 1769 011e 03       		.uleb128 0x3
 1770 011f 0E       		.uleb128 0xe
 1771 0120 3A       		.uleb128 0x3a
 1772 0121 0B       		.uleb128 0xb
 1773 0122 3B       		.uleb128 0x3b
 1774 0123 05       		.uleb128 0x5
 1775 0124 27       		.uleb128 0x27
 1776 0125 19       		.uleb128 0x19
 1777 0126 49       		.uleb128 0x49
 1778 0127 13       		.uleb128 0x13
 1779 0128 11       		.uleb128 0x11
 1780 0129 01       		.uleb128 0x1
 1781 012a 12       		.uleb128 0x12
 1782 012b 06       		.uleb128 0x6
 1783 012c 40       		.uleb128 0x40
 1784 012d 18       		.uleb128 0x18
 1785 012e 9742     		.uleb128 0x2117
 1786 0130 19       		.uleb128 0x19
 1787 0131 00       		.byte	0
 1788 0132 00       		.byte	0
 1789 0133 13       		.uleb128 0x13
 1790 0134 34       		.uleb128 0x34
 1791 0135 00       		.byte	0
 1792 0136 03       		.uleb128 0x3
 1793 0137 08       		.uleb128 0x8
 1794 0138 3A       		.uleb128 0x3a
 1795 0139 0B       		.uleb128 0xb
 1796 013a 3B       		.uleb128 0x3b
 1797 013b 05       		.uleb128 0x5
 1798 013c 49       		.uleb128 0x49
 1799 013d 13       		.uleb128 0x13
 1800 013e 02       		.uleb128 0x2
 1801 013f 17       		.uleb128 0x17
 1802 0140 00       		.byte	0
 1803 0141 00       		.byte	0
 1804 0142 14       		.uleb128 0x14
 1805 0143 05       		.uleb128 0x5
 1806 0144 00       		.byte	0
 1807 0145 03       		.uleb128 0x3
 1808 0146 0E       		.uleb128 0xe
 1809 0147 3A       		.uleb128 0x3a
 1810 0148 0B       		.uleb128 0xb
 1811 0149 3B       		.uleb128 0x3b
 1812 014a 05       		.uleb128 0x5
 1813 014b 49       		.uleb128 0x49
 1814 014c 13       		.uleb128 0x13
 1815 014d 02       		.uleb128 0x2
 1816 014e 18       		.uleb128 0x18
 1817 014f 00       		.byte	0
 1818 0150 00       		.byte	0
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 49


 1819 0151 15       		.uleb128 0x15
 1820 0152 34       		.uleb128 0x34
 1821 0153 00       		.byte	0
 1822 0154 03       		.uleb128 0x3
 1823 0155 0E       		.uleb128 0xe
 1824 0156 3A       		.uleb128 0x3a
 1825 0157 0B       		.uleb128 0xb
 1826 0158 3B       		.uleb128 0x3b
 1827 0159 05       		.uleb128 0x5
 1828 015a 49       		.uleb128 0x49
 1829 015b 13       		.uleb128 0x13
 1830 015c 02       		.uleb128 0x2
 1831 015d 18       		.uleb128 0x18
 1832 015e 00       		.byte	0
 1833 015f 00       		.byte	0
 1834 0160 16       		.uleb128 0x16
 1835 0161 2E       		.uleb128 0x2e
 1836 0162 01       		.byte	0x1
 1837 0163 3F       		.uleb128 0x3f
 1838 0164 19       		.uleb128 0x19
 1839 0165 03       		.uleb128 0x3
 1840 0166 0E       		.uleb128 0xe
 1841 0167 3A       		.uleb128 0x3a
 1842 0168 0B       		.uleb128 0xb
 1843 0169 3B       		.uleb128 0x3b
 1844 016a 05       		.uleb128 0x5
 1845 016b 27       		.uleb128 0x27
 1846 016c 19       		.uleb128 0x19
 1847 016d 49       		.uleb128 0x49
 1848 016e 13       		.uleb128 0x13
 1849 016f 11       		.uleb128 0x11
 1850 0170 01       		.uleb128 0x1
 1851 0171 12       		.uleb128 0x12
 1852 0172 06       		.uleb128 0x6
 1853 0173 40       		.uleb128 0x40
 1854 0174 18       		.uleb128 0x18
 1855 0175 9642     		.uleb128 0x2116
 1856 0177 19       		.uleb128 0x19
 1857 0178 01       		.uleb128 0x1
 1858 0179 13       		.uleb128 0x13
 1859 017a 00       		.byte	0
 1860 017b 00       		.byte	0
 1861 017c 17       		.uleb128 0x17
 1862 017d 34       		.uleb128 0x34
 1863 017e 00       		.byte	0
 1864 017f 03       		.uleb128 0x3
 1865 0180 0E       		.uleb128 0xe
 1866 0181 3A       		.uleb128 0x3a
 1867 0182 0B       		.uleb128 0xb
 1868 0183 3B       		.uleb128 0x3b
 1869 0184 05       		.uleb128 0x5
 1870 0185 49       		.uleb128 0x49
 1871 0186 13       		.uleb128 0x13
 1872 0187 00       		.byte	0
 1873 0188 00       		.byte	0
 1874 0189 18       		.uleb128 0x18
 1875 018a 34       		.uleb128 0x34
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 50


 1876 018b 00       		.byte	0
 1877 018c 03       		.uleb128 0x3
 1878 018d 0E       		.uleb128 0xe
 1879 018e 3A       		.uleb128 0x3a
 1880 018f 0B       		.uleb128 0xb
 1881 0190 3B       		.uleb128 0x3b
 1882 0191 0B       		.uleb128 0xb
 1883 0192 49       		.uleb128 0x49
 1884 0193 13       		.uleb128 0x13
 1885 0194 3F       		.uleb128 0x3f
 1886 0195 19       		.uleb128 0x19
 1887 0196 02       		.uleb128 0x2
 1888 0197 18       		.uleb128 0x18
 1889 0198 00       		.byte	0
 1890 0199 00       		.byte	0
 1891 019a 19       		.uleb128 0x19
 1892 019b 2E       		.uleb128 0x2e
 1893 019c 00       		.byte	0
 1894 019d 3F       		.uleb128 0x3f
 1895 019e 19       		.uleb128 0x19
 1896 019f 3C       		.uleb128 0x3c
 1897 01a0 19       		.uleb128 0x19
 1898 01a1 6E       		.uleb128 0x6e
 1899 01a2 0E       		.uleb128 0xe
 1900 01a3 03       		.uleb128 0x3
 1901 01a4 0E       		.uleb128 0xe
 1902 01a5 3A       		.uleb128 0x3a
 1903 01a6 0B       		.uleb128 0xb
 1904 01a7 3B       		.uleb128 0x3b
 1905 01a8 0B       		.uleb128 0xb
 1906 01a9 00       		.byte	0
 1907 01aa 00       		.byte	0
 1908 01ab 00       		.byte	0
 1909              		.section	.debug_loc,"",%progbits
 1910              	.Ldebug_loc0:
 1911              	.LLST0:
 1912 0000 00000000 		.4byte	.LVL0
 1913 0004 1E000000 		.4byte	.LVL3
 1914 0008 0100     		.2byte	0x1
 1915 000a 50       		.byte	0x50
 1916 000b 1E000000 		.4byte	.LVL3
 1917 000f 26000000 		.4byte	.LVL5
 1918 0013 0400     		.2byte	0x4
 1919 0015 F3       		.byte	0xf3
 1920 0016 01       		.uleb128 0x1
 1921 0017 50       		.byte	0x50
 1922 0018 9F       		.byte	0x9f
 1923 0019 26000000 		.4byte	.LVL5
 1924 001d 2A000000 		.4byte	.LVL6
 1925 0021 0100     		.2byte	0x1
 1926 0023 50       		.byte	0x50
 1927 0024 2A000000 		.4byte	.LVL6
 1928 0028 5C000000 		.4byte	.LFE12
 1929 002c 0400     		.2byte	0x4
 1930 002e F3       		.byte	0xf3
 1931 002f 01       		.uleb128 0x1
 1932 0030 50       		.byte	0x50
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 51


 1933 0031 9F       		.byte	0x9f
 1934 0032 00000000 		.4byte	0
 1935 0036 00000000 		.4byte	0
 1936              	.LLST1:
 1937 003a 16000000 		.4byte	.LVL1
 1938 003e 1C000000 		.4byte	.LVL2
 1939 0042 0400     		.2byte	0x4
 1940 0044 0A       		.byte	0xa
 1941 0045 0001     		.2byte	0x100
 1942 0047 9F       		.byte	0x9f
 1943 0048 1C000000 		.4byte	.LVL2
 1944 004c 26000000 		.4byte	.LVL5
 1945 0050 0200     		.2byte	0x2
 1946 0052 30       		.byte	0x30
 1947 0053 9F       		.byte	0x9f
 1948 0054 2A000000 		.4byte	.LVL6
 1949 0058 46000000 		.4byte	.LVL7
 1950 005c 0100     		.2byte	0x1
 1951 005e 52       		.byte	0x52
 1952 005f 00000000 		.4byte	0
 1953 0063 00000000 		.4byte	0
 1954              	.LLST2:
 1955 0067 24000000 		.4byte	.LVL10
 1956 006b 28000000 		.4byte	.LVL11
 1957 006f 0500     		.2byte	0x5
 1958 0071 73       		.byte	0x73
 1959 0072 00       		.sleb128 0
 1960 0073 32       		.byte	0x32
 1961 0074 21       		.byte	0x21
 1962 0075 9F       		.byte	0x9f
 1963 0076 2C000000 		.4byte	.LVL12
 1964 007a 32000000 		.4byte	.LVL13
 1965 007e 0100     		.2byte	0x1
 1966 0080 53       		.byte	0x53
 1967 0081 32000000 		.4byte	.LVL13
 1968 0085 34000000 		.4byte	.LVL14
 1969 0089 0500     		.2byte	0x5
 1970 008b 0C       		.byte	0xc
 1971 008c 03590040 		.4byte	0x40005903
 1972 0090 00000000 		.4byte	0
 1973 0094 00000000 		.4byte	0
 1974              	.LLST3:
 1975 0098 08000000 		.4byte	.LVL9
 1976 009c 6E000000 		.4byte	.LVL17
 1977 00a0 0100     		.2byte	0x1
 1978 00a2 54       		.byte	0x54
 1979 00a3 00000000 		.4byte	0
 1980 00a7 00000000 		.4byte	0
 1981              	.LLST4:
 1982 00ab 06000000 		.4byte	.LVL18
 1983 00af 2B000000 		.4byte	.LVL19-1
 1984 00b3 0100     		.2byte	0x1
 1985 00b5 50       		.byte	0x50
 1986 00b6 00000000 		.4byte	0
 1987 00ba 00000000 		.4byte	0
 1988              	.LLST5:
 1989 00be 00000000 		.4byte	.LVL20
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 52


 1990 00c2 00000000 		.4byte	.LVL20
 1991 00c6 0100     		.2byte	0x1
 1992 00c8 50       		.byte	0x50
 1993 00c9 00000000 		.4byte	.LVL20
 1994 00cd 0C000000 		.4byte	.LVL22
 1995 00d1 0500     		.2byte	0x5
 1996 00d3 70       		.byte	0x70
 1997 00d4 00       		.sleb128 0
 1998 00d5 33       		.byte	0x33
 1999 00d6 1A       		.byte	0x1a
 2000 00d7 9F       		.byte	0x9f
 2001 00d8 0C000000 		.4byte	.LVL22
 2002 00dc 18000000 		.4byte	.LFE4
 2003 00e0 0600     		.2byte	0x6
 2004 00e2 F3       		.byte	0xf3
 2005 00e3 01       		.uleb128 0x1
 2006 00e4 50       		.byte	0x50
 2007 00e5 33       		.byte	0x33
 2008 00e6 1A       		.byte	0x1a
 2009 00e7 9F       		.byte	0x9f
 2010 00e8 00000000 		.4byte	0
 2011 00ec 00000000 		.4byte	0
 2012              	.LLST6:
 2013 00f0 08000000 		.4byte	.LVL21
 2014 00f4 0E000000 		.4byte	.LVL23
 2015 00f8 0100     		.2byte	0x1
 2016 00fa 53       		.byte	0x53
 2017 00fb 0E000000 		.4byte	.LVL23
 2018 00ff 18000000 		.4byte	.LFE4
 2019 0103 0100     		.2byte	0x1
 2020 0105 50       		.byte	0x50
 2021 0106 00000000 		.4byte	0
 2022 010a 00000000 		.4byte	0
 2023              	.LLST7:
 2024 010e 00000000 		.4byte	.LVL24
 2025 0112 1C000000 		.4byte	.LVL27
 2026 0116 0100     		.2byte	0x1
 2027 0118 50       		.byte	0x50
 2028 0119 1C000000 		.4byte	.LVL27
 2029 011d 24000000 		.4byte	.LVL29
 2030 0121 0400     		.2byte	0x4
 2031 0123 F3       		.byte	0xf3
 2032 0124 01       		.uleb128 0x1
 2033 0125 50       		.byte	0x50
 2034 0126 9F       		.byte	0x9f
 2035 0127 24000000 		.4byte	.LVL29
 2036 012b 26000000 		.4byte	.LVL30
 2037 012f 0100     		.2byte	0x1
 2038 0131 50       		.byte	0x50
 2039 0132 26000000 		.4byte	.LVL30
 2040 0136 38000000 		.4byte	.LFE5
 2041 013a 0400     		.2byte	0x4
 2042 013c F3       		.byte	0xf3
 2043 013d 01       		.uleb128 0x1
 2044 013e 50       		.byte	0x50
 2045 013f 9F       		.byte	0x9f
 2046 0140 00000000 		.4byte	0
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 53


 2047 0144 00000000 		.4byte	0
 2048              	.LLST8:
 2049 0148 16000000 		.4byte	.LVL25
 2050 014c 1A000000 		.4byte	.LVL26
 2051 0150 0300     		.2byte	0x3
 2052 0152 08       		.byte	0x8
 2053 0153 44       		.byte	0x44
 2054 0154 9F       		.byte	0x9f
 2055 0155 1A000000 		.4byte	.LVL26
 2056 0159 24000000 		.4byte	.LVL29
 2057 015d 0300     		.2byte	0x3
 2058 015f 09       		.byte	0x9
 2059 0160 C4       		.byte	0xc4
 2060 0161 9F       		.byte	0x9f
 2061 0162 26000000 		.4byte	.LVL30
 2062 0166 2F000000 		.4byte	.LVL31-1
 2063 016a 0100     		.2byte	0x1
 2064 016c 52       		.byte	0x52
 2065 016d 00000000 		.4byte	0
 2066 0171 00000000 		.4byte	0
 2067              	.LLST9:
 2068 0175 00000000 		.4byte	.LVL35
 2069 0179 14000000 		.4byte	.LVL37
 2070 017d 0100     		.2byte	0x1
 2071 017f 50       		.byte	0x50
 2072 0180 14000000 		.4byte	.LVL37
 2073 0184 24000000 		.4byte	.LFE8
 2074 0188 0400     		.2byte	0x4
 2075 018a F3       		.byte	0xf3
 2076 018b 01       		.uleb128 0x1
 2077 018c 50       		.byte	0x50
 2078 018d 9F       		.byte	0x9f
 2079 018e 00000000 		.4byte	0
 2080 0192 00000000 		.4byte	0
 2081              	.LLST10:
 2082 0196 06000000 		.4byte	.LVL36
 2083 019a 17000000 		.4byte	.LVL38-1
 2084 019e 0500     		.2byte	0x5
 2085 01a0 73       		.byte	0x73
 2086 01a1 00       		.sleb128 0
 2087 01a2 31       		.byte	0x31
 2088 01a3 1A       		.byte	0x1a
 2089 01a4 9F       		.byte	0x9f
 2090 01a5 00000000 		.4byte	0
 2091 01a9 00000000 		.4byte	0
 2092              	.LLST11:
 2093 01ad 06000000 		.4byte	.LVL39
 2094 01b1 0C000000 		.4byte	.LVL40
 2095 01b5 0100     		.2byte	0x1
 2096 01b7 50       		.byte	0x50
 2097 01b8 00000000 		.4byte	0
 2098 01bc 00000000 		.4byte	0
 2099              	.LLST12:
 2100 01c0 00000000 		.4byte	.LVL42
 2101 01c4 04000000 		.4byte	.LVL43
 2102 01c8 0100     		.2byte	0x1
 2103 01ca 50       		.byte	0x50
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 54


 2104 01cb 04000000 		.4byte	.LVL43
 2105 01cf 10000000 		.4byte	.LFE13
 2106 01d3 0400     		.2byte	0x4
 2107 01d5 F3       		.byte	0xf3
 2108 01d6 01       		.uleb128 0x1
 2109 01d7 50       		.byte	0x50
 2110 01d8 9F       		.byte	0x9f
 2111 01d9 00000000 		.4byte	0
 2112 01dd 00000000 		.4byte	0
 2113              	.LLST13:
 2114 01e1 00000000 		.4byte	.LVL45
 2115 01e5 24000000 		.4byte	.LVL49
 2116 01e9 0100     		.2byte	0x1
 2117 01eb 50       		.byte	0x50
 2118 01ec 24000000 		.4byte	.LVL49
 2119 01f0 58000000 		.4byte	.LFE15
 2120 01f4 0100     		.2byte	0x1
 2121 01f6 51       		.byte	0x51
 2122 01f7 00000000 		.4byte	0
 2123 01fb 00000000 		.4byte	0
 2124              	.LLST14:
 2125 01ff 16000000 		.4byte	.LVL46
 2126 0203 18000000 		.4byte	.LVL47
 2127 0207 0100     		.2byte	0x1
 2128 0209 54       		.byte	0x54
 2129 020a 1C000000 		.4byte	.LVL48
 2130 020e 4A000000 		.4byte	.LVL51
 2131 0212 0100     		.2byte	0x1
 2132 0214 54       		.byte	0x54
 2133 0215 00000000 		.4byte	0
 2134 0219 00000000 		.4byte	0
 2135              	.LLST15:
 2136 021d 00000000 		.4byte	.LVL52
 2137 0221 22000000 		.4byte	.LVL56
 2138 0225 0100     		.2byte	0x1
 2139 0227 50       		.byte	0x50
 2140 0228 22000000 		.4byte	.LVL56
 2141 022c 38000000 		.4byte	.LVL58
 2142 0230 0100     		.2byte	0x1
 2143 0232 54       		.byte	0x54
 2144 0233 00000000 		.4byte	0
 2145 0237 00000000 		.4byte	0
 2146              	.LLST16:
 2147 023b 16000000 		.4byte	.LVL53
 2148 023f 18000000 		.4byte	.LVL54
 2149 0243 0100     		.2byte	0x1
 2150 0245 52       		.byte	0x52
 2151 0246 1C000000 		.4byte	.LVL55
 2152 024a 35000000 		.4byte	.LVL57-1
 2153 024e 0100     		.2byte	0x1
 2154 0250 52       		.byte	0x52
 2155 0251 00000000 		.4byte	0
 2156 0255 00000000 		.4byte	0
 2157              	.LLST17:
 2158 0259 00000000 		.4byte	.LVL59
 2159 025d 22000000 		.4byte	.LVL63
 2160 0261 0100     		.2byte	0x1
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 55


 2161 0263 50       		.byte	0x50
 2162 0264 22000000 		.4byte	.LVL63
 2163 0268 27000000 		.4byte	.LVL64-1
 2164 026c 0100     		.2byte	0x1
 2165 026e 50       		.byte	0x50
 2166 026f 00000000 		.4byte	0
 2167 0273 00000000 		.4byte	0
 2168              	.LLST18:
 2169 0277 16000000 		.4byte	.LVL60
 2170 027b 18000000 		.4byte	.LVL61
 2171 027f 0100     		.2byte	0x1
 2172 0281 54       		.byte	0x54
 2173 0282 1C000000 		.4byte	.LVL62
 2174 0286 40000000 		.4byte	.LVL68
 2175 028a 0100     		.2byte	0x1
 2176 028c 54       		.byte	0x54
 2177 028d 00000000 		.4byte	0
 2178 0291 00000000 		.4byte	0
 2179              		.section	.debug_aranges,"",%progbits
 2180 0000 A4000000 		.4byte	0xa4
 2181 0004 0200     		.2byte	0x2
 2182 0006 00000000 		.4byte	.Ldebug_info0
 2183 000a 04       		.byte	0x4
 2184 000b 00       		.byte	0
 2185 000c 0000     		.2byte	0
 2186 000e 0000     		.2byte	0
 2187 0010 00000000 		.4byte	.LFB12
 2188 0014 5C000000 		.4byte	.LFE12-.LFB12
 2189 0018 00000000 		.4byte	.LFB2
 2190 001c 7C000000 		.4byte	.LFE2-.LFB2
 2191 0020 00000000 		.4byte	.LFB3
 2192 0024 34000000 		.4byte	.LFE3-.LFB3
 2193 0028 00000000 		.4byte	.LFB4
 2194 002c 18000000 		.4byte	.LFE4-.LFB4
 2195 0030 00000000 		.4byte	.LFB5
 2196 0034 38000000 		.4byte	.LFE5-.LFB5
 2197 0038 00000000 		.4byte	.LFB1
 2198 003c 24000000 		.4byte	.LFE1-.LFB1
 2199 0040 00000000 		.4byte	.LFB0
 2200 0044 1C000000 		.4byte	.LFE0-.LFB0
 2201 0048 00000000 		.4byte	.LFB6
 2202 004c 10000000 		.4byte	.LFE6-.LFB6
 2203 0050 00000000 		.4byte	.LFB7
 2204 0054 10000000 		.4byte	.LFE7-.LFB7
 2205 0058 00000000 		.4byte	.LFB8
 2206 005c 24000000 		.4byte	.LFE8-.LFB8
 2207 0060 00000000 		.4byte	.LFB9
 2208 0064 18000000 		.4byte	.LFE9-.LFB9
 2209 0068 00000000 		.4byte	.LFB10
 2210 006c 18000000 		.4byte	.LFE10-.LFB10
 2211 0070 00000000 		.4byte	.LFB11
 2212 0074 0C000000 		.4byte	.LFE11-.LFB11
 2213 0078 00000000 		.4byte	.LFB13
 2214 007c 10000000 		.4byte	.LFE13-.LFB13
 2215 0080 00000000 		.4byte	.LFB14
 2216 0084 0C000000 		.4byte	.LFE14-.LFB14
 2217 0088 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 56


 2218 008c 58000000 		.4byte	.LFE15-.LFB15
 2219 0090 00000000 		.4byte	.LFB16
 2220 0094 48000000 		.4byte	.LFE16-.LFB16
 2221 0098 00000000 		.4byte	.LFB17
 2222 009c 50000000 		.4byte	.LFE17-.LFB17
 2223 00a0 00000000 		.4byte	0
 2224 00a4 00000000 		.4byte	0
 2225              		.section	.debug_ranges,"",%progbits
 2226              	.Ldebug_ranges0:
 2227 0000 00000000 		.4byte	.LFB12
 2228 0004 5C000000 		.4byte	.LFE12
 2229 0008 00000000 		.4byte	.LFB2
 2230 000c 7C000000 		.4byte	.LFE2
 2231 0010 00000000 		.4byte	.LFB3
 2232 0014 34000000 		.4byte	.LFE3
 2233 0018 00000000 		.4byte	.LFB4
 2234 001c 18000000 		.4byte	.LFE4
 2235 0020 00000000 		.4byte	.LFB5
 2236 0024 38000000 		.4byte	.LFE5
 2237 0028 00000000 		.4byte	.LFB1
 2238 002c 24000000 		.4byte	.LFE1
 2239 0030 00000000 		.4byte	.LFB0
 2240 0034 1C000000 		.4byte	.LFE0
 2241 0038 00000000 		.4byte	.LFB6
 2242 003c 10000000 		.4byte	.LFE6
 2243 0040 00000000 		.4byte	.LFB7
 2244 0044 10000000 		.4byte	.LFE7
 2245 0048 00000000 		.4byte	.LFB8
 2246 004c 24000000 		.4byte	.LFE8
 2247 0050 00000000 		.4byte	.LFB9
 2248 0054 18000000 		.4byte	.LFE9
 2249 0058 00000000 		.4byte	.LFB10
 2250 005c 18000000 		.4byte	.LFE10
 2251 0060 00000000 		.4byte	.LFB11
 2252 0064 0C000000 		.4byte	.LFE11
 2253 0068 00000000 		.4byte	.LFB13
 2254 006c 10000000 		.4byte	.LFE13
 2255 0070 00000000 		.4byte	.LFB14
 2256 0074 0C000000 		.4byte	.LFE14
 2257 0078 00000000 		.4byte	.LFB15
 2258 007c 58000000 		.4byte	.LFE15
 2259 0080 00000000 		.4byte	.LFB16
 2260 0084 48000000 		.4byte	.LFE16
 2261 0088 00000000 		.4byte	.LFB17
 2262 008c 50000000 		.4byte	.LFE17
 2263 0090 00000000 		.4byte	0
 2264 0094 00000000 		.4byte	0
 2265              		.section	.debug_line,"",%progbits
 2266              	.Ldebug_line0:
 2267 0000 05020000 		.section	.debug_str,"MS",%progbits,1
 2267      02005700 
 2267      00000201 
 2267      FB0E0D00 
 2267      01010101 
 2268              	.LASF13:
 2269 0000 75696E74 		.ascii	"uint16\000"
 2269      313600
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 57


 2270              	.LASF43:
 2271 0007 61646347 		.ascii	"adcGain\000"
 2271      61696E00 
 2272              	.LASF60:
 2273 000f 43794578 		.ascii	"CyExitCriticalSection\000"
 2273      69744372 
 2273      69746963 
 2273      616C5365 
 2273      6374696F 
 2274              	.LASF23:
 2275 0025 636F756E 		.ascii	"counts\000"
 2275      747300
 2276              	.LASF32:
 2277 002c 4A6F7953 		.ascii	"JoyStickADC_SAR_Init\000"
 2277      7469636B 
 2277      4144435F 
 2277      5341525F 
 2277      496E6974 
 2278              	.LASF45:
 2279 0041 4A6F7953 		.ascii	"JoyStickADC_SAR_CountsTo_mVolts\000"
 2279      7469636B 
 2279      4144435F 
 2279      5341525F 
 2279      436F756E 
 2280              	.LASF9:
 2281 0061 6C6F6E67 		.ascii	"long long unsigned int\000"
 2281      206C6F6E 
 2281      6720756E 
 2281      7369676E 
 2281      65642069 
 2282              	.LASF52:
 2283 0078 4A6F7953 		.ascii	"JoyStickADC_SAR_initVar\000"
 2283      7469636B 
 2283      4144435F 
 2283      5341525F 
 2283      696E6974 
 2284              	.LASF28:
 2285 0090 4A6F7953 		.ascii	"JoyStickADC_SAR_SetPower\000"
 2285      7469636B 
 2285      4144435F 
 2285      5341525F 
 2285      53657450 
 2286              	.LASF65:
 2287 00a9 4A6F7953 		.ascii	"JoyStickADC_SAR_GetResult8\000"
 2287      7469636B 
 2287      4144435F 
 2287      5341525F 
 2287      47657452 
 2288              	.LASF1:
 2289 00c4 6C6F6E67 		.ascii	"long long int\000"
 2289      206C6F6E 
 2289      6720696E 
 2289      7400
 2290              	.LASF3:
 2291 00d2 7369676E 		.ascii	"signed char\000"
 2291      65642063 
 2291      68617200 
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 58


 2292              	.LASF16:
 2293 00de 696E7433 		.ascii	"int32\000"
 2293      3200
 2294              	.LASF7:
 2295 00e4 6C6F6E67 		.ascii	"long int\000"
 2295      20696E74 
 2295      00
 2296              	.LASF27:
 2297 00ed 4A6F7953 		.ascii	"JoyStickADC_SAR_Stop\000"
 2297      7469636B 
 2297      4144435F 
 2297      5341525F 
 2297      53746F70 
 2298              	.LASF22:
 2299 0102 72656731 		.ascii	"reg16\000"
 2299      3600
 2300              	.LASF12:
 2301 0108 75696E74 		.ascii	"uint8\000"
 2301      3800
 2302              	.LASF59:
 2303 010e 43794465 		.ascii	"CyDelayUs\000"
 2303      6C617955 
 2303      7300
 2304              	.LASF19:
 2305 0118 646F7562 		.ascii	"double\000"
 2305      6C6500
 2306              	.LASF48:
 2307 011f 636F756E 		.ascii	"countsPer10Volt\000"
 2307      74735065 
 2307      72313056 
 2307      6F6C7400 
 2308              	.LASF35:
 2309 012f 4A6F7953 		.ascii	"JoyStickADC_SAR_StopConvert\000"
 2309      7469636B 
 2309      4144435F 
 2309      5341525F 
 2309      53746F70 
 2310              	.LASF53:
 2311 014b 4A6F7953 		.ascii	"JoyStickADC_SAR_offset\000"
 2311      7469636B 
 2311      4144435F 
 2311      5341525F 
 2311      6F666673 
 2312              	.LASF36:
 2313 0162 7265744D 		.ascii	"retMode\000"
 2313      6F646500 
 2314              	.LASF55:
 2315 016a 4A6F7953 		.ascii	"JoyStickADC_SAR_countsPer10Volt\000"
 2315      7469636B 
 2315      4144435F 
 2315      5341525F 
 2315      636F756E 
 2316              	.LASF0:
 2317 018a 756E7369 		.ascii	"unsigned int\000"
 2317      676E6564 
 2317      20696E74 
 2317      00
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 59


 2318              	.LASF66:
 2319 0197 75566F6C 		.ascii	"uVolts\000"
 2319      747300
 2320              	.LASF62:
 2321 019e 47656E65 		.ascii	"Generated_Source\\PSoC5\\JoyStickADC_SAR.c\000"
 2321      72617465 
 2321      645F536F 
 2321      75726365 
 2321      5C50536F 
 2322              	.LASF8:
 2323 01c7 6C6F6E67 		.ascii	"long unsigned int\000"
 2323      20756E73 
 2323      69676E65 
 2323      6420696E 
 2323      7400
 2324              	.LASF40:
 2325 01d9 4A6F7953 		.ascii	"JoyStickADC_SAR_SetOffset\000"
 2325      7469636B 
 2325      4144435F 
 2325      5341525F 
 2325      5365744F 
 2326              	.LASF51:
 2327 01f3 766F6C74 		.ascii	"volts\000"
 2327      7300
 2328              	.LASF58:
 2329 01f9 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2329      74657243 
 2329      72697469 
 2329      63616C53 
 2329      65637469 
 2330              	.LASF31:
 2331 0210 4A6F7953 		.ascii	"JoyStickADC_SAR_SetResolution\000"
 2331      7469636B 
 2331      4144435F 
 2331      5341525F 
 2331      53657452 
 2332              	.LASF54:
 2333 022e 4A6F7953 		.ascii	"JoyStickADC_SAR_countsPerVolt\000"
 2333      7469636B 
 2333      4144435F 
 2333      5341525F 
 2333      636F756E 
 2334              	.LASF6:
 2335 024c 73686F72 		.ascii	"short unsigned int\000"
 2335      7420756E 
 2335      7369676E 
 2335      65642069 
 2335      6E7400
 2336              	.LASF14:
 2337 025f 696E7438 		.ascii	"int8\000"
 2337      00
 2338              	.LASF42:
 2339 0264 4A6F7953 		.ascii	"JoyStickADC_SAR_SetGain\000"
 2339      7469636B 
 2339      4144435F 
 2339      5341525F 
 2339      53657447 
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 60


 2340              	.LASF47:
 2341 027c 6D566F6C 		.ascii	"mVolts\000"
 2341      747300
 2342              	.LASF26:
 2343 0283 4A6F7953 		.ascii	"JoyStickADC_SAR_Enable\000"
 2343      7469636B 
 2343      4144435F 
 2343      5341525F 
 2343      456E6162 
 2344              	.LASF17:
 2345 029a 666C6F61 		.ascii	"float32\000"
 2345      74333200 
 2346              	.LASF10:
 2347 02a2 73697A65 		.ascii	"sizetype\000"
 2347      74797065 
 2347      00
 2348              	.LASF2:
 2349 02ab 6C6F6E67 		.ascii	"long double\000"
 2349      20646F75 
 2349      626C6500 
 2350              	.LASF44:
 2351 02b7 4A6F7953 		.ascii	"JoyStickADC_SAR_SetScaledGain\000"
 2351      7469636B 
 2351      4144435F 
 2351      5341525F 
 2351      53657453 
 2352              	.LASF20:
 2353 02d5 696E7436 		.ascii	"int64\000"
 2353      3400
 2354              	.LASF64:
 2355 02db 4A6F7953 		.ascii	"JoyStickADC_SAR_CalcGain\000"
 2355      7469636B 
 2355      4144435F 
 2355      5341525F 
 2355      43616C63 
 2356              	.LASF18:
 2357 02f4 666C6F61 		.ascii	"float\000"
 2357      7400
 2358              	.LASF33:
 2359 02fa 4A6F7953 		.ascii	"JoyStickADC_SAR_Start\000"
 2359      7469636B 
 2359      4144435F 
 2359      5341525F 
 2359      53746172 
 2360              	.LASF30:
 2361 0310 706F7765 		.ascii	"power\000"
 2361      7200
 2362              	.LASF21:
 2363 0316 72656738 		.ascii	"reg8\000"
 2363      00
 2364              	.LASF57:
 2365 031b 43794861 		.ascii	"CyHalt\000"
 2365      6C7400
 2366              	.LASF4:
 2367 0322 756E7369 		.ascii	"unsigned char\000"
 2367      676E6564 
 2367      20636861 
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 61


 2367      7200
 2368              	.LASF49:
 2369 0330 4A6F7953 		.ascii	"JoyStickADC_SAR_CountsTo_uVolts\000"
 2369      7469636B 
 2369      4144435F 
 2369      5341525F 
 2369      436F756E 
 2370              	.LASF5:
 2371 0350 73686F72 		.ascii	"short int\000"
 2371      7420696E 
 2371      7400
 2372              	.LASF61:
 2373 035a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2373      43313120 
 2373      352E342E 
 2373      31203230 
 2373      31363036 
 2374 038d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2374      20726576 
 2374      6973696F 
 2374      6E203233 
 2374      37373135 
 2375 03c0 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2375      66756E63 
 2375      74696F6E 
 2375      2D736563 
 2375      74696F6E 
 2376              	.LASF29:
 2377 03e8 7265736F 		.ascii	"resolution\000"
 2377      6C757469 
 2377      6F6E00
 2378              	.LASF34:
 2379 03f3 4A6F7953 		.ascii	"JoyStickADC_SAR_StartConvert\000"
 2379      7469636B 
 2379      4144435F 
 2379      5341525F 
 2379      53746172 
 2380              	.LASF11:
 2381 0410 63686172 		.ascii	"char\000"
 2381      00
 2382              	.LASF41:
 2383 0415 6F666673 		.ascii	"offset\000"
 2383      657400
 2384              	.LASF46:
 2385 041c 61646343 		.ascii	"adcCounts\000"
 2385      6F756E74 
 2385      7300
 2386              	.LASF25:
 2387 0426 656E6162 		.ascii	"enableInterrupts\000"
 2387      6C65496E 
 2387      74657272 
 2387      75707473 
 2387      00
 2388              	.LASF39:
 2389 0437 4A6F7953 		.ascii	"JoyStickADC_SAR_GetResult16\000"
 2389      7469636B 
 2389      4144435F 
ARM GAS  C:\Users\BASILE~1\AppData\Local\Temp\ccguhi4c.s 			page 62


 2389      5341525F 
 2389      47657452 
 2390              	.LASF37:
 2391 0453 73746174 		.ascii	"status\000"
 2391      757300
 2392              	.LASF15:
 2393 045a 696E7431 		.ascii	"int16\000"
 2393      3600
 2394              	.LASF63:
 2395 0460 433A5C55 		.ascii	"C:\\Users\\BasileBerckmoes\\Documents\\GitHub\\Robo"
 2395      73657273 
 2395      5C426173 
 2395      696C6542 
 2395      6572636B 
 2396 048e 74436F6D 		.ascii	"tComp2ELO\\Software\\PSoc\\Ble\\ProjectBle\\Design0"
 2396      7032454C 
 2396      4F5C536F 
 2396      66747761 
 2396      72655C50 
 2397 04bc 312E6379 		.ascii	"1.cydsn\000"
 2397      64736E00 
 2398              	.LASF56:
 2399 04c4 4A6F7953 		.ascii	"JoyStickADC_SAR_shift\000"
 2399      7469636B 
 2399      4144435F 
 2399      5341525F 
 2399      73686966 
 2400              	.LASF50:
 2401 04da 4A6F7953 		.ascii	"JoyStickADC_SAR_CountsTo_Volts\000"
 2401      7469636B 
 2401      4144435F 
 2401      5341525F 
 2401      436F756E 
 2402              	.LASF24:
 2403 04f9 746D7052 		.ascii	"tmpReg\000"
 2403      656700
 2404              	.LASF38:
 2405 0500 4A6F7953 		.ascii	"JoyStickADC_SAR_IsEndConversion\000"
 2405      7469636B 
 2405      4144435F 
 2405      5341525F 
 2405      4973456E 
 2406              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
